CORE:

- Add detailed JSDoc to improve IntelliJ's intellisense

-------------

VALIDATOR:

- Add test for options config (see ajaxform.Sender)

- Test/document entries inside luga.validator.CONST that can be customized

- Add detailed JSDoc to improve IntelliJ's intellisense

-------------

DOCS:

- Link to specific unit tests from libs docs

- Update sitemap.xml

- Switch CSS to border-box

- Switch from em to rem

- Document API:
  luga.Notifier?
  luga.extend()?

-------------

AJAX FORM

- Directly call send() in order to test, we can't call form.submit()
- Test XHR call as much as possible (spy jQuery.ajax?)
- Test proper execution order of before, send and after
- Test successmsg and errormsg config options

- Test luga.ajaxform.handlers.replaceForm
- Test luga.ajaxform.handlers.errorAlert
- Test luga.ajaxform.handlers.errorBox

- Test/document entries inside luga.ajaxform.CONST that can be customized

- Add JSDoc

- Docs
  about
  getting started
  syntax
  success/error signature
  after/before signature
  custom handlers
  luga.ajaxform.handlers.errorBox

- Update version
- Update built script to concat, minify and distribute.
- Update README.md

- Implement API

-------------

REGION:

- Write unit test!

- Validate Handlebars is available
- Validate required attributes

DATASET:

- getCurrentRow()
- getCurrentRowIndex()
- getRowByIndex()
- setCurrentRowIndex()

- resetCurrentRow()?

- update()

- Implement sorting
- Implement column types

- Local storage persistence? It would require serialization of full dataSet 

- Implement state (empty?, loading, error, ready)

HTTP DATASET:

- Use options.dataType in jQuery.ajax() to handle dataType mismatches?

JSON DATASET:

- Modify loadRecords() to handle more complex JSON structures like Spry?
- Implement subPaths?

XML DATASET:

- options.xpath
- setXpath()
- getXpath()

- loadRecords()