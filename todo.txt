- Consider creating a Bower package, maybe an NPM one too

-------------

DOCS:

- Use Bootstrap. Start with Data's docs
- Move local navigation to the right, better for small screens
- Improve format of API docs
- Layout forms with labels on top of fields
- Review/improve luga.css

-------------

AJAXFORM:

- Parse and handle error messages from server
- Use live service for test
- Standardize JSON schema for error messages

-------------
CSI:
-------------

CORE:

- Implement luga.string.queryToHash()

- Document luga.Notifier
- Document luga.extend()
- Document luga.lookupFunction()
- Document luga.lookupProperty()
- Document luga.setProperty()

-------------

VALIDATOR:

- Improve Bootstrap integration. Add alerts with messages

-------------

DATA:

data.Dataset:

- Implement state (loading, error, ready)

- Add the following fields to the context object:
  state, isStateLoading, isStateError, isStateReady

- Add missing tests for the following methods:
  sort()

- Implement update(filter, setter)

- Write dedicated Handlebars helper for state?
- Local storage persistence? It would require serialization of full dataSet (including filter!)


data.JsonDataSet:

- Add .rawJson property to store raw JSON
- Implement getRawJson()
- Implement setRawJson()

- Handle sosphisticated paths? Implement subPaths like Spry?


data.region.Handlebars:

- Add data-lugads-select trait

- Add data-lugads-traits attribute (comma-delimited)
- Allows to pass dataSet object to the constructor, not just dataSet's id
- Make Region an event notifier (regionRendered?)

- Test API to construct a region programmatically

- Utility to retrieve corresponding region object from a given HTML node?

-------------

DATA FUTURE:

- Once mature. Add it to default Gulp task
- Implement pagination
- Implement navbar widget

data.Autosuggest:

- Implement widget

data.XmlDataset:

- options.xpath
- setXpath()
- getXpath()
- loadRecords()

-------------