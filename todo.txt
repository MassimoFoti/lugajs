- Add @override for JSDoc

-------------

DOCS:

- Switch from em to rem
- Use flexbox CSS
- Review/improve luga.css
- Layout forms with labels on top of fields

-------------

AJAXFORM:

- Parse and handle error messages from server
- Standardize JSON schema for error messages

-------------
CSI:
-------------

CORE:

- Implement luga.string.queryToHash()

- Document luga.Notifier?
- Document luga.extend()?

-------------
VALIDATOR:
-------------

DATA:

- Store event names inside CONST

- Implement pagination
- Implement navbar widget


data.Dataset:

- getCurrentRow()
- getCurrentRowIndex()
- getRowByIndex()
- setCurrentRowIndex()

- resetCurrentRow()?

- update()

- Implement sorting
- Implement column types
- Implement state (empty?, loading, error, ready)

- Local storage persistence? It would require serialization of full dataSet


data.DetailSet:

- Implement from scratch


data.HttpDatset:

- Use options.dataType in jQuery.ajax() to handle dataType mismatches?


data.JsonDataSet:

- Modify loadRecords() to handle more complex JSON structures like Spry?
- Implement subPaths?


data.Region:

- Write unit test!
- Investigate external template files

- Add ability to define dataset programmatically, not only with custom attribute
- Validate required attributes

-------------

DATA FUTURE:

data.Autosuggest:

- Implement widget


data.XmlDataset:

- options.xpath
- setXpath()
- getXpath()
- loadRecords()

-------------

FUTURE:

- Bootstrap Modal > Luga ModalFrame?

-------------