{"version":3,"sources":["luga.core.min.js","luga.core.js"],"names":["luga","version","CONST","ERROR_MESSAGES","NOTIFIER_ABSTRACT","INVALID_OBSERVER_PARAMETER","INVALID_DATA_PARAMETER","namespace","ns","rootObject","parts","split","undefined","window","i","length","extend","baseFunc","func","args","apply","lookupFunction","path","reference","lookupProperty","jQuery","isFunction","object","part","shift","merge","target","obj","setProperty","value","Notifier","this","constructor","observers","prefix","suffix","generateMethodName","eventName","str","charAt","toUpperCase","substring","addObserver","observer","type","push","notifyObservers","data","method","removeObserver","splice","form","FIELD_SELECTOR","FAKE_INPUT_TYPES","fieldset","reset","MESSAGES","MISSING_FORM","toHash","rootNode","demoronize","map","fields","utils","getChildFields","isSuccessfulField","fieldName","attr","fieldValue","fieldType","prop","val","string","toJson","flatData","jsonData","x","toQueryString","j","appendQueryString","encodeURIComponent","fieldNode","isInputField","getFieldGroup","name","selector","find","each","index","item","format","pattern","$","isArray","RegExp","replace","isPlainObject","String","fromCharCode","CSS_CLASSES","MESSAGE","ERROR_MESSAGE","MSG_BOX_ID","generateBoxId","node","boxId","removeDisplayBox","oldBox","remove","displayMessage","html","displayBox","displayErrorMessage","cssClass","box","addClass","replaceWith","before"],"mappings":"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","file":"luga.core.min.js","sourcesContent":[null,"if(typeof(jQuery) === \"undefined\"){\r\n\tthrow(\"Unable to find jQuery\");\r\n}\r\nif(typeof(luga) === \"undefined\"){\r\n\tvar luga = {};\r\n}\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\r\n\tluga.version = \"0.4.5\";\r\n\r\n\tluga.CONST = {\r\n\t\tERROR_MESSAGES: {\r\n\t\t\tNOTIFIER_ABSTRACT: \"It's forbidden to use luga.Notifier directly, it must be used as a base class instead\",\r\n\t\t\tINVALID_OBSERVER_PARAMETER: \"addObserver(): observer parameter must be an object\",\r\n\t\t\tINVALID_DATA_PARAMETER: \"notifyObserver(): data parameter is required and must be an object\"\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Creates namespaces to be used for scoping variables and classes so that they are not global.\r\n\t * Specifying the last node of a namespace implicitly creates all other nodes.\r\n\t * Based on Nicholas C. Zakas's code\r\n\t * @param {string} ns           Namespace as string\r\n\t * @param {object} rootObject   Optional root object. Default to window\r\n\t */\r\n\tluga.namespace = function(ns, rootObject){\r\n\t\tvar parts = ns.split(\".\");\r\n\t\tif(rootObject === undefined){\r\n\t\t\trootObject = window;\r\n\t\t}\r\n\t\tfor(var i = 0; i < parts.length; i++){\r\n\t\t\tif(rootObject[parts[i]] === undefined){\r\n\t\t\t\trootObject[parts[i]] = {};\r\n\t\t\t}\r\n\t\t\trootObject = rootObject[parts[i]];\r\n\t\t}\r\n\t\treturn rootObject;\r\n\t};\r\n\r\n\t/**\r\n\t * Offers a simple solution for inheritance among classes\r\n\t *\r\n\t * @param {function} baseFunc  Parent constructor function. Required\r\n\t * @param {function} func      Child constructor function. Required\r\n\t * @param {array}    args      An array of arguments that will be passed to the parent's constructor. Optional\r\n\t */\r\n\tluga.extend = function(baseFunc, func, args){\r\n\t\tbaseFunc.apply(func, args);\r\n\t};\r\n\r\n\t/**\r\n\t * Given the name of a function as a string, return the relevant function, if any\r\n\t * Returns undefined, if the reference has not been found\r\n\t * Supports namespaces (if the fully qualified path is passed)\r\n\t * @param {string} path            Fully qualified name of a function\r\n\t * @returns {function|undefined}   The javascript reference to the function, undefined if nothing is fund or if it's not a function\r\n\t */\r\n\tluga.lookupFunction = function(path){\r\n\t\tif(!path){\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tvar reference = luga.lookupProperty(window, path)\r\n\t\tif(jQuery.isFunction(reference) === true){\r\n\t\t\treturn reference;\r\n\t\t}\r\n\t\treturn undefined;\r\n\t};\r\n\r\n\t/**\r\n\t * Given an object and a path, returns the property located at the given path\r\n\t * If nothing exists at that location, returns undefined\r\n\t * Supports unlimited nesting levels (if the fully qualified path is passed)\r\n\t * @param {object} object  Target object\r\n\t * @param {string} path    Dot-delimited string\r\n\t * @returns {*|undefined}\r\n\t */\r\n\tluga.lookupProperty = function(object, path){\r\n\t\t// Either of the two params is invalid\r\n\t\tif(!object || !path){\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\t// Property live at the first level\r\n\t\tif(object[path] !== undefined){\r\n\t\t\treturn object[path];\r\n\t\t}\r\n\t\tvar parts = path.split(\".\");\r\n\t\twhile(parts.length > 0){\r\n\t\t\tvar part = parts.shift();\r\n\t\t\tif(object[part] !== undefined){\r\n\t\t\t\tif(parts.length === 0){\r\n\t\t\t\t\t// We got it\r\n\t\t\t\t\treturn object[part];\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\t// Keep looping\r\n\t\t\t\t\tobject = object[part];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t};\r\n\r\n\t/**\r\n\t * Shallow-merge the contents of two objects together into the first object\r\n\t * It wraps jQuery's extend to make names less ambiguous\r\n\t *\r\n\t * @param {object} target  An object that will receive the new properties\r\n\t * @param {object} obj     An object containing additional properties to merge in\r\n\t */\r\n\tluga.merge = function(target, obj){\r\n\t\tjQuery.extend(target, obj);\r\n\t};\r\n\r\n\t/**\r\n\t * Given an object, a path and a value, set the property located at the given path to the given value\r\n\t * If the path does not exists, it creates it\r\n\t * @param {object} object  Target object\r\n\t * @param {string} path    Fully qualified property name\r\n\t * @param {*}      value\r\n\t */\r\n\tluga.setProperty = function(object, path, value){\r\n\t\tvar parts = path.split(\".\");\r\n\t\twhile(parts.length > 0){\r\n\t\t\tvar part = parts.shift();\r\n\t\t\tif(object[part] !== undefined){\r\n\t\t\t\t// Keep looping\r\n\t\t\t\tobject = object[part];\r\n\t\t\t}\r\n\t\t\telse if(parts.length > 0){\r\n\t\t\t\t// Create the missing element and keep looping\r\n\t\t\t\tobject[part] = {};\r\n\t\t\t\tobject = object[part];\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tobject[part] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Provides the base functionality necessary to maintain a list of observers and send notifications to them.\r\n\t * It's forbidden to use this class directly, it can only be used as a base class.\r\n\t * The Notifier class does not define any notification messages, so it is up to the developer to define the notifications sent via the Notifier.\r\n\t * @throws\r\n\t */\r\n\tluga.Notifier = function(){\r\n\t\tif(this.constructor === luga.Notifier){\r\n\t\t\tthrow(luga.CONST.ERROR_MESSAGES.NOTIFIER_ABSTRACT);\r\n\t\t}\r\n\t\tthis.observers = [];\r\n\t\tvar prefix = \"on\";\r\n\t\tvar suffix = \"Handler\";\r\n\r\n\t\t// Turns \"complete\" into \"onComplete\"\r\n\t\tvar generateMethodName = function(eventName){\r\n\t\t\tvar str = prefix;\r\n\t\t\tstr += eventName.charAt(0).toUpperCase();\r\n\t\t\tstr += eventName.substring(1);\r\n\t\t\tstr += suffix;\r\n\t\t\treturn str;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Adds an observer object to the list of observers.\r\n\t\t * Observer objects should implement a method that matches a naming convention for the events they are interested in.\r\n\t\t * For an event named \"complete\" they must implement a method named: \"onCompleteHandler\"\r\n\t\t * The interface for this methods is as follows:\r\n\t\t * observer.onCompleteHandler = function(data){};\r\n\t\t * @param  {object} observer  Observer object\r\n\t\t * @throws\r\n\t\t */\r\n\t\tthis.addObserver = function(observer){\r\n\t\t\tif(jQuery.type(observer) !== \"object\"){\r\n\t\t\t\tthrow(luga.CONST.ERROR_MESSAGES.INVALID_OBSERVER_PARAMETER);\r\n\t\t\t}\r\n\t\t\tthis.observers.push(observer);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sends a notification to all interested observers registered with the notifier.\r\n\t\t *\r\n\t\t * @method\r\n\t\t * @param {string}  eventName  Name of the event\r\n\t\t * @param {object}  data       Object containing data to be passed from the point of notification to all interested observers.\r\n\t\t *                             If there is no relevant data to pass, use an empty object.\r\n\t\t * @throws\r\n\t\t */\r\n\t\tthis.notifyObservers = function(eventName, data){\r\n\t\t\tif(jQuery.type(data) !== \"object\"){\r\n\t\t\t\tthrow(luga.CONST.ERROR_MESSAGES.INVALID_DATA_PARAMETER);\r\n\t\t\t}\r\n\t\t\tvar method = generateMethodName(eventName);\r\n\t\t\tfor(var i = 0; i < this.observers.length; i++){\r\n\t\t\t\tvar observer = this.observers[i];\r\n\t\t\t\tif(observer[method] && jQuery.isFunction(observer[method])){\r\n\t\t\t\t\tobserver[method](data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Removes the given observer object.\r\n\t\t *\r\n\t\t * @method\r\n\t\t * @param {Object} observer\r\n\t\t */\r\n\t\tthis.removeObserver = function(observer){\r\n\t\t\tfor(var i = 0; i < this.observers.length; i++){\r\n\t\t\t\tif(this.observers[i] === observer){\r\n\t\t\t\t\tthis.observers.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/* Form */\r\n\r\n\tluga.namespace(\"luga.form\");\r\n\r\n\tluga.form.CONST = {\r\n\t\tFIELD_SELECTOR: \"input,select,textarea\",\r\n\t\tFAKE_INPUT_TYPES: {\r\n\t\t\tfieldset: true,\r\n\t\t\treset: true\r\n\t\t},\r\n\t\tMESSAGES: {\r\n\t\t\tMISSING_FORM: \"Unable to load form\"\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a JavaScript object containing name/value pairs from fields contained inside a given root node\r\n\t * Only fields considered successful are returned:\r\n\t * http://www.w3.org/TR/REC-html40/interact/forms.html#h-17.13.2\r\n\t * Values of multiple checked checkboxes and multiple select are included as a single entry, with array value\r\n\t *\r\n\t * @param {jquery}   rootNode     jQuery object wrapping the root node\r\n\t * @param {boolean}  demoronize   MS Word's special chars are replaced with plausible substitutes. Default to false\r\n\t * @returns {object}               A JavaScript object containing name/value pairs\r\n\t * @throws\r\n\t */\r\n\tluga.form.toHash = function(rootNode, demoronize){\r\n\r\n\t\tif(rootNode.length === 0){\r\n\t\t\tthrow(luga.form.CONST.MESSAGES.MISSING_FORM);\r\n\t\t}\r\n\r\n\t\tvar map = {};\r\n\t\tvar fields = luga.form.utils.getChildFields(rootNode);\r\n\t\tfor(var i = 0; i < fields.length; i++){\r\n\t\t\tif(luga.form.utils.isSuccessfulField(fields[i]) === true){\r\n\t\t\t\tvar fieldName = jQuery(fields[i]).attr(\"name\");\r\n\t\t\t\tvar fieldValue = null;\r\n\t\t\t\tvar fieldType = jQuery(fields[i]).prop(\"type\");\r\n\t\t\t\tswitch(fieldType){\r\n\r\n\t\t\t\t\tcase \"select-multiple\":\r\n\t\t\t\t\t\tfieldValue = jQuery(fields[i]).val();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"checkbox\":\r\n\t\t\t\t\tcase \"radio\":\r\n\t\t\t\t\t\tif(jQuery(fields[i]).prop(\"checked\") === true){\r\n\t\t\t\t\t\t\tfieldValue = jQuery(fields[i]).val();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tfieldValue = jQuery(fields[i]).val();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(fieldValue !== null){\r\n\t\t\t\t\tif(demoronize === true){\r\n\t\t\t\t\t\tfieldValue = luga.string.demoronize(fieldValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(map[fieldName] === undefined){\r\n\t\t\t\t\t\tmap[fieldName] = fieldValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tmap[fieldName] = [map[fieldName], fieldValue];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn map;\r\n\t};\r\n\r\n\t/**\r\n\t * Given a form tag or another element wrapping input fields, serialize their value into JSON data\r\n\t * If fields names contains dots, their are handled as nested properties\r\n\t * Only fields considered successful are returned:\r\n\t * http://www.w3.org/TR/REC-html40/interact/forms.html#h-17.13.2\r\n\t * @param {jquery} rootNode  jQuery object wrapping the form fields\r\n\t * @returns {json}\r\n\t */\r\n\tluga.form.toJson = function(rootNode){\r\n\t\tvar flatData = luga.form.toHash(rootNode);\r\n\t\tvar jsonData = {};\r\n\t\tfor(var x in flatData){\r\n\t\t\tluga.setProperty(jsonData, x, flatData[x]);\r\n\t\t}\r\n\t\treturn jsonData;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a URI encoded string of name/value pairs from fields contained inside a given root node\r\n\t * Only fields considered successful are returned:\r\n\t * http://www.w3.org/TR/REC-html40/interact/forms.html#h-17.13.2\r\n\t *\r\n\t * @param {jquery}   rootNode     jQuery object wrapping the root node\r\n\t * @param {boolean}  demoronize   If set to true, MS Word's special chars are replaced with plausible substitutes. Default to false\r\n\t * @returns {string}               A URI encoded string\r\n\t * @throws\r\n\t */\r\n\tluga.form.toQueryString = function(rootNode, demoronize){\r\n\r\n\t\tif(rootNode.length === 0){\r\n\t\t\tthrow(luga.form.CONST.MESSAGES.MISSING_FORM);\r\n\t\t}\r\n\r\n\t\tvar str = \"\";\r\n\t\tvar fields = luga.form.utils.getChildFields(rootNode);\r\n\t\tfor(var i = 0; i < fields.length; i++){\r\n\t\t\tif(luga.form.utils.isSuccessfulField(fields[i]) === true){\r\n\t\t\t\tvar fieldName = jQuery(fields[i]).attr(\"name\");\r\n\t\t\t\tvar fieldValue = jQuery(fields[i]).val();\r\n\t\t\t\tvar fieldType = jQuery(fields[i]).prop(\"type\");\r\n\t\t\t\tswitch(fieldType){\r\n\r\n\t\t\t\t\tcase \"select-multiple\":\r\n\t\t\t\t\t\tfor(var j = 0; j < fieldValue.length; j++){\r\n\t\t\t\t\t\t\tstr = appendQueryString(str, fieldName, fieldValue[j], demoronize);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"checkbox\":\r\n\t\t\t\t\tcase \"radio\":\r\n\t\t\t\t\t\tif(jQuery(fields[i]).prop(\"checked\") === true){\r\n\t\t\t\t\t\t\tstr = appendQueryString(str, fieldName, fieldValue, demoronize);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tstr = appendQueryString(str, fieldName, fieldValue, demoronize);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\r\n\tvar appendQueryString = function(str, fieldName, fieldValue, demoronize){\r\n\t\tif(str !== \"\"){\r\n\t\t\tstr += \"&\";\r\n\t\t}\r\n\t\tstr += encodeURIComponent(fieldName);\r\n\t\tstr += \"=\";\r\n\t\tif(demoronize === true){\r\n\t\t\tstr += encodeURIComponent(luga.string.demoronize(fieldValue));\r\n\t\t}\r\n\t\telse{\r\n\t\t\tstr += encodeURIComponent(fieldValue);\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\r\n\tluga.namespace(\"luga.form.utils\");\r\n\r\n\t/**\r\n\t * Returns true if the given field is successful, false otherwise\r\n\t * http://www.w3.org/TR/REC-html40/interact/forms.html#h-17.13.2\r\n\t *\r\n\t * @param {jquery}  fieldNode\r\n\t * @returns {boolean}\r\n\t */\r\n\tluga.form.utils.isSuccessfulField = function(fieldNode){\r\n\t\tif(luga.form.utils.isInputField(fieldNode) === false){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(jQuery(fieldNode).prop(\"disabled\") === true){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif(jQuery(fieldNode).attr(\"name\") === undefined){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * Returns true if the passed node is a form field that we care about\r\n\t *\r\n\t * @param {jquery}  fieldNode\r\n\t * @returns {boolean}\r\n\t */\r\n\tluga.form.utils.isInputField = function(fieldNode){\r\n\t\tif(jQuery(fieldNode).prop(\"type\") === undefined){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// It belongs to the kind of nodes that are considered form fields, but we don't care about\r\n\t\tif(luga.form.CONST.FAKE_INPUT_TYPES[jQuery(fieldNode).prop(\"type\")] === true){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\t/**\r\n\t * Extracts group of fields that share the same name from a given root node\r\n\t * Or the whole document if the second argument is not passed\r\n\t *\r\n\t * @param {string}  name       Name of the field. Mandatory\r\n\t * @param {jquery}  rootNode   Root node, optional, default to document\r\n\t * @returns {jquery}\r\n\t */\r\n\tluga.form.utils.getFieldGroup = function(name, rootNode){\r\n\t\tvar selector = \"input[name=\" + name + \"]\";\r\n\t\treturn jQuery(selector, rootNode);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns an array of input fields contained inside a given root node\r\n\t *\r\n\t * @param {jquery}  rootNode   Root node\r\n\t * @returns {Array.<jquery>}\r\n\t */\r\n\tluga.form.utils.getChildFields = function(rootNode){\r\n\t\tvar fields = [];\r\n\t\tjQuery(rootNode).find(luga.form.CONST.FIELD_SELECTOR).each(function(index, item){\r\n\t\t\tif(luga.form.utils.isInputField(item)){\r\n\t\t\t\tfields.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn fields;\r\n\t};\r\n\r\n\t/* Utilities */\r\n\r\n\tluga.namespace(\"luga.string\");\r\n\r\n\t/**\r\n\t * Given a string containing placeholders, it assembles a new string\r\n\t * replacing the placeholders with the strings contained inside the second argument (either an object or an array)\r\n\t * Loosely based on the .NET implementation: http://msdn.microsoft.com/en-us/library/system.string.format.aspx\r\n\t *\r\n\t * Example passing strings inside an array:\r\n\t * luga.string.format(\"My name is {0} {1}\", [\"Ciccio\", \"Pasticcio\"]);\r\n\t * => \"My name is Ciccio Pasticcio\"\r\n\t *\r\n\t * Example passing strings inside an object:\r\n\t * luga.string.format(\"My name is {firstName} {lastName}\", {firstName: \"Ciccio\", lastName: \"Pasticcio\"});\r\n\t * => \"My name is Ciccio Pasticcio\"\r\n\t *\r\n\t * @param  {string}  str                   String containing placeholders\r\n\t * @param  {object|array.<string>} args    Either an array of strings or an objects containing name/value pairs in string format\r\n\t * @returns {string} The newly assembled string\r\n\t */\r\n\tluga.string.format = function(str, args){\r\n\t\tvar pattern = null;\r\n\t\tif($.isArray(args) === true){\r\n\t\t\tfor(var i = 0; i < args.length; i++){\r\n\t\t\t\tpattern = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"g\");\r\n\t\t\t\tstr = str.replace(pattern, args[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif($.isPlainObject(args) === true){\r\n\t\t\tfor(var x in args){\r\n\t\t\t\tpattern = new RegExp(\"\\\\{\" + x + \"\\\\}\", \"g\");\r\n\t\t\t\tstr = str.replace(pattern, args[x]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\r\n\t/**\r\n\t * Replace MS Word's non-ISO characters with plausible substitutes\r\n\t *\r\n\t * @param {string} str   String containing MS Word's garbage\r\n\t * @returns {string}      The de-moronized string\r\n\t */\r\n\tluga.string.demoronize = function(str){\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(710), \"g\"), \"^\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(732), \"g\"), \"~\");\r\n\t\t// Evil \"smarty\" quotes\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8216), \"g\"), \"'\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8217), \"g\"), \"'\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8220), \"g\"), \"\\\"\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8221), \"g\"), \"\\\"\");\r\n\t\t// More garbage\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8211), \"g\"), \"-\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8212), \"g\"), \"--\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8218), \"g\"), \",\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8222), \"g\"), \",,\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8226), \"g\"), \"*\");\r\n\t\tstr = str.replace(new RegExp(String.fromCharCode(8230), \"g\"), \"...\");\r\n\t\treturn str;\r\n\t};\r\n\r\n\tluga.namespace(\"luga.utils\");\r\n\r\n\tluga.utils.CONST = {\r\n\t\tCSS_CLASSES: {\r\n\t\t\tMESSAGE: \"luga-message\",\r\n\t\t\tERROR_MESSAGE: \"luga-error-message\"\r\n\t\t},\r\n\t\tMSG_BOX_ID: \"lugaMessageBox\"\r\n\t};\r\n\r\n\t/**\r\n\t * Private helper function\r\n\t * Generate node's id\r\n\t */\r\n\tvar generateBoxId = function(node){\r\n\t\tvar boxId = luga.utils.CONST.MSG_BOX_ID;\r\n\t\tif(node.attr(\"id\") === undefined){\r\n\t\t\tboxId += node.attr(\"id\");\r\n\t\t}\r\n\t\telse if(node.attr(\"name\") !== undefined){\r\n\t\t\tboxId += node.attr(\"name\");\r\n\t\t}\r\n\t\treturn boxId;\r\n\t};\r\n\r\n\t/**\r\n\t * Remove a message box (if any) associated with a given node\r\n\t * @param {jquery}  node   Target node\r\n\t */\r\n\tluga.utils.removeDisplayBox = function(node){\r\n\t\tvar boxId = generateBoxId(jQuery(node));\r\n\t\tvar oldBox = jQuery(\"#\" + boxId);\r\n\t\t// If an error display is already there, get rid of it\r\n\t\tif(oldBox.length > 0){\r\n\t\t\toldBox.remove();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Display a message box above a given node\r\n\t * @param {jquery}  node   Target node\r\n\t * @param {string}  html   HTML/Text code to inject\r\n\t */\r\n\tluga.utils.displayMessage = function(node, html){\r\n\t\treturn luga.utils.displayBox(node, html, luga.utils.CONST.CSS_CLASSES.MESSAGE);\r\n\t};\r\n\r\n\t/**\r\n\t * Display an error box above a given node\r\n\t * @param {jquery}  node   Target node\r\n\t * @param {string}  html   HTML/Text code to inject\r\n\t */\r\n\tluga.utils.displayErrorMessage = function(node, html){\r\n\t\treturn luga.utils.displayBox(node, html, luga.utils.CONST.CSS_CLASSES.ERROR_MESSAGE);\r\n\t};\r\n\r\n\t/**\r\n\t * Display a box with a message associated with a given node\r\n\t * Overwrite this method if you want to change the way luga.utils.displayMessage and luga.utils.displayErrorMessage behaves\r\n\t * @param {jquery}  node      Target node\r\n\t * @param {string}  html      HTML/Text code to inject\r\n\t * @param {string}  cssClass  CSS class attached to the box. Default to \"luga_message\"\r\n\t */\r\n\tluga.utils.displayBox = function(node, html, cssClass){\r\n\t\tif(cssClass === undefined){\r\n\t\t\tcssClass = luga.utils.CONST.CSS_CLASSES.MESSAGE;\r\n\t\t}\r\n\t\tvar boxId = generateBoxId(jQuery(node));\r\n\t\tvar box = jQuery(\"<div></div>\");\r\n\t\tbox.attr(\"id\", boxId);\r\n\t\tbox.addClass(cssClass);\r\n\t\tbox.html(html);\r\n\t\tvar oldBox = jQuery(\"#\" + boxId);\r\n\t\t// If a box display is already there, replace it, if not, we create one from scratch\r\n\t\tif(oldBox.length > 0){\r\n\t\t\toldBox.replaceWith(box);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tjQuery(node).before(box);\r\n\t\t}\r\n\t\treturn box;\r\n\t};\r\n\r\n}());"],"sourceRoot":"."}