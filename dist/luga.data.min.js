/*! 
Luga Data 0.1.10 2015-11-30T22:01:45.834Z
Copyright 2013-2015 Massimo Foti (massimo@massimocorner.com)
Licensed under the Apache License, Version 2.0 | http://www.apache.org/licenses/LICENSE-2.0
 */
if("undefined"==typeof luga)throw"Unable to find Luga JS Core";!function(){"use strict";luga.namespace("luga.data"),luga.data.version="0.1.10",luga.data.dataSourceRegistry={},luga.data.CONST={PK_KEY:"rowId",DEFAULT_REGION_TYPE:"luga.data.Region",CUSTOM_ATTRIBUTES:{REGION:"data-lugads-region",REGION_TYPE:"data-lugads-regiontype",TEMPLATE:"data-lugads-template",DATA_SOURCE:"data-lugads-datasource"},EVENTS:{CURRENT_ROW_CHANGED:"currentRowChanged",DATA_CHANGED:"dataChanged",LOADING:"loading",XHR_ERROR:"xhrError"},SELECTORS:{REGION:"*[data-lugads-region]"},ERROR_MESSAGES:{MISSING_DATA_SOURCE_ATTRIBUTE:"Missing required data-lugads-datasource attribute inside region",MISSING_DATA_SOURCE:"Unable to find datasource {0}",MISSING_REGION_TYPE_FUNCTION:"Failed to create region. Unable to find a constructor function named: {0}"},XHR_TIMEOUT:1e4},luga.data.getDataSource=function(id){return void 0!==luga.data.dataSourceRegistry[id]?luga.data.dataSourceRegistry[id]:null},luga.data.setDataSource=function(id,dataSource){luga.data.dataSourceRegistry[id]=dataSource},luga.data.initRegion=function(node){var dataSourceId=node.attr(luga.data.CONST.CUSTOM_ATTRIBUTES.DATA_SOURCE);if(void 0===dataSourceId)throw luga.data.CONST.ERROR_MESSAGES.MISSING_DATA_SOURCE_ATTRIBUTE;var dataSource=luga.data.getDataSource(dataSourceId);if(null===dataSource)throw luga.string.format(luga.data.CONST.ERROR_MESSAGES.MISSING_DATA_SOURCE,[dataSourceId]);var regionType=node.attr(luga.data.CONST.CUSTOM_ATTRIBUTES.REGION_TYPE);void 0===regionType&&(regionType=luga.data.CONST.DEFAULT_REGION_TYPE);var RegionClass=luga.lookup(regionType);if(null===RegionClass)throw luga.string.format(luga.data.CONST.ERROR_MESSAGES.MISSING_REGION_TYPE_FUNCTION,[regionType]);new RegionClass({node:node})},jQuery(document).ready(function(){jQuery(luga.data.CONST.SELECTORS.REGION).each(function(index,item){luga.data.initRegion(jQuery(item))})})}(),function(){"use strict";luga.data.DataSet=function(options){var CONST={ERROR_MESSAGES:{INVALID_ID_PARAMETER:"Luga.DataSet: id parameter is required",INVALID_PRIMITIVE:"Luga.DataSet: records can be either an array of objects or a single object. Primitives are not accepted",INVALID_PRIMITIVE_ARRAY:"Luga.DataSet: records can be either an array of name/value pairs or a single object. Array of primitives are not accepted",INVALID_ROW_PARAMETER:"Luga.DataSet: invalid row parameter. No available record matches the given row",INVALID_ROW_ID_PARAMETER:"Luga.DataSet: invalid rowId parameter",INVALID_ROW_INDEX_PARAMETER:"Luga.DataSet: invalid parameter. Row index is out of range",INVALID_FILTER_PARAMETER:"Luga.DataSet: invalid filter. You must use a function as filter"}};if(void 0===options.id)throw CONST.ERROR_MESSAGES.INVALID_ID_PARAMETER;if(void 0!==options.filter&&jQuery.isFunction(options.filter)===!1)throw CONST.ERROR_MESSAGES.INVALID_FILTER_PARAMETER;luga.extend(luga.Notifier,this);var self=this;this.id=options.id,this.records=[],this.recordsHash={},this.filteredRecords=null,this.filter=null,this.currentRowId=null,luga.data.setDataSource(this.id,this);var deleteAll=function(){self.filteredRecords=null,self.records=[],self.recordsHash={}},applyFilter=function(){hasFilter()===!0&&(self.filteredRecords=filterRecords(self.records,self.filter),self.resetCurrentRow())},filterRecords=function(orig,filter){for(var filtered=[],i=0;i<orig.length;i++){var newRow=filter(this,orig[i],i);newRow&&filtered.push(newRow)}return filtered},hasFilter=function(){return null!==self.filter},selectAll=function(){return hasFilter()===!0?self.filteredRecords:self.records};this.clearFilter=function(){this.filter=null,this.filteredRecords=null,this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this["delete"]=function(filter){if(void 0===filter)return deleteAll(),this.resetCurrentRow(),void this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this});if(jQuery.isFunction(filter)===!1)throw CONST.ERROR_MESSAGES.INVALID_FILTER_PARAMETER;this.records=filterRecords(selectAll(),filter),applyFilter(),this.resetCurrentRow(),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.getContext=function(){return{context:self.select()}},this.getCurrentRow=function(){var row=this.recordsHash[this.getCurrentRowId()];return void 0!==row?row:null},this.getCurrentRowId=function(){return this.currentRowId},this.getCurrentRowIndex=function(){var row=this.getCurrentRow();return void 0!==row?this.getRowIndex(row):-1},this.getRecordsCount=function(){return selectAll().length},this.getRowById=function(rowId){return void 0!==this.recordsHash[rowId]?this.recordsHash[rowId]:null},this.getRowByIndex=function(index){var fetchedRow;if(fetchedRow=hasFilter()===!0?this.filteredRecords[index]:this.records[index],void 0===fetchedRow)throw CONST.ERROR_MESSAGES.INVALID_ROW_INDEX_PARAMETER;return fetchedRow},this.getRowIndex=function(row){return hasFilter()===!0?this.filteredRecords.indexOf(row):this.records.indexOf(row)},this.insert=function(records){var recordsHolder=[];if(jQuery.isArray(records)===!0)recordsHolder=records;else{if(jQuery.isPlainObject(records)===!1)throw CONST.ERROR_MESSAGES.INVALID_PRIMITIVE;recordsHolder.push(records)}for(var i=0;i<recordsHolder.length;i++){if(jQuery.isPlainObject(recordsHolder[i])===!1)throw CONST.ERROR_MESSAGES.INVALID_PRIMITIVE_ARRAY;var recordID=this.records.length;recordsHolder[i][luga.data.CONST.PK_KEY]=recordID,this.recordsHash[this.records.length]=recordsHolder[i],this.records.push(recordsHolder[i])}this.setCurrentRowId(0),applyFilter(),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.resetCurrentRow=function(){return hasFilter()===!0?void(this.filteredRecords.length>0?this.setCurrentRowId(this.filteredRecords[0][luga.data.CONST.PK_KEY]):this.setCurrentRowId(null)):void(this.records.length>0?this.setCurrentRowId(this.records[0][luga.data.CONST.PK_KEY]):this.setCurrentRowId(null))},this.select=function(filter){if(void 0===filter)return selectAll();if(jQuery.isFunction(filter)===!1)throw CONST.ERROR_MESSAGES.INVALID_FILTER_PARAMETER;return filterRecords(selectAll(),filter)},this.setCurrentRowId=function(rowId){if(this.currentRowId!==rowId){var notificationData={oldRowId:this.getCurrentRowId(),oldRow:this.getRowById(this.currentRowId),currentRowId:rowId,currentRow:this.getRowById(rowId),dataSet:this};if(null===rowId&&null!==this.currentRowId)return this.currentRowId=null,void this.notifyObservers(luga.data.CONST.EVENTS.CURRENT_ROW_CHANGED,notificationData);if(null===this.getRowById(rowId))throw CONST.ERROR_MESSAGES.INVALID_ROW_ID_PARAMETER;this.currentRowId=rowId,this.notifyObservers(luga.data.CONST.EVENTS.CURRENT_ROW_CHANGED,notificationData)}},this.setCurrentRow=function(row){var fetchedRowId=this.getRowIndex(row);if(-1===fetchedRowId)throw CONST.ERROR_MESSAGES.INVALID_ROW_PARAMETER;this.setCurrentRowId(fetchedRowId)},this.setCurrentRowIndex=function(index){this.setCurrentRow(this.getRowByIndex(index))},this.setFilter=function(filter){if(jQuery.isFunction(filter)===!1)throw CONST.ERROR_MESSAGES.INVALID_FILTER_PARAMETER;this.filter=filter,applyFilter(),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},void 0!==options.filter&&this.setFilter(options.filter),void 0!==options.records&&this.insert(options.records)}}(),function(){"use strict";luga.data.DetailSet=function(options){var CONST={ERROR_MESSAGES:{INVALID_ID_PARAMETER:"Luga.DetailSet: id parameter is required",INVALID_DS_PARAMETER:"Luga.DetailSet: dataSet parameter is required"}};if(void 0===options.id)throw CONST.ERROR_MESSAGES.INVALID_ID_PARAMETER;if(void 0===options.dataSet)throw CONST.ERROR_MESSAGES.INVALID_DS_PARAMETER;luga.extend(luga.Notifier,this);var self=this;this.id=options.id,this.dataSet=options.dataSet,this.dataSet.addObserver(this),this.row=null,luga.data.setDataSource(this.id,this),this.getContext=function(){return this.row},this.fetchRow=function(){self.row=self.dataSet.getCurrentRow(),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.onDataChangedHandler=function(data){self.fetchRow()},this.onCurrentRowChangedHandler=function(data){self.fetchRow()},self.row=self.dataSet.getCurrentRow()}}(),function(){"use strict";luga.data.HttpDataSet=function(options){luga.extend(luga.data.DataSet,this,[options]);var self=this,CONST={ERROR_MESSAGES:{HTTP_DATA_SET_ABSTRACT:"luga.data.HttpDataSet is an abstract class",XHR_FAILURE:"Failed to retrieve: {0}. HTTP status: {1}. Error: {2}",NEED_URL_TO_LOAD:"Unable to call loadData(). DataSet is missing a URL"}};if(this.constructor===luga.data.HttpDataSet)throw CONST.ERROR_MESSAGES.HTTP_DATA_SET_ABSTRACT;this.url=null,void 0!==options.url&&(this.url=options.url),this.timeout=luga.data.CONST.XHR_TIMEOUT,void 0!==options.timeout&&(this.timeout=options.timeout),this.cache=!0,void 0!==options.cache&&(this.cache=options.cache),this.dataType=null,this.xhrRequest=null;var loadUrl=function(){var xhrOptions={url:self.url,success:self.loadRecords,timeout:self.timeout,cache:self.cache,error:self.xhrError};null!==self.dataType&&(xhrOptions.dataType=self.dataType),self.xhrRequest=jQuery.ajax(xhrOptions)};this.cancelRequest=function(){null!==this.xhrRequest&&(this.xhrRequest.abort(),this.xhrRequest=null)},this.getUrl=function(){return this.url},this.loadData=function(){if(null===this.url)throw CONST.ERROR_MESSAGES.NEED_URL_TO_LOAD;this.notifyObservers(luga.data.CONST.EVENTS.LOADING,{dataSet:this}),this.cancelRequest(),this["delete"](),loadUrl()},this.loadRecords=function(response,textStatus,jqXHR){},this.setUrl=function(newUrl){this.url=newUrl},this.xhrError=function(jqXHR,textStatus,errorThrown){self.notifyObservers(luga.data.CONST.EVENTS.XHR_ERROR,{dataSet:self,message:luga.string.format(CONST.ERROR_MESSAGES.XHR_FAILURE,[self.url,jqXHR.status,errorThrown]),jqXHR:jqXHR,textStatus:textStatus,errorThrown:errorThrown})}}}(),function(){"use strict";luga.data.JsonDataSet=function(options){luga.extend(luga.data.HttpDataSet,this,[options]);var self=this;this.dataType="json",this.path=null,void 0!==options.path&&(this.path=options.path),this.getPath=function(){return this.path},this.loadRecords=function(response,textStatus,jqXHR){null===self.path?self.insert(response):void 0!==response[self.path]&&self.insert(response[self.path])},this.setPath=function(path){this.path=path}}}(),function(){"use strict";luga.data.Region=function(options){var CONST={ERROR_MESSAGES:{MISSING_HANDLEBARS:"Unable to find Handlebars",MISSING_NODE:"luga.data.Region was unable find the region node",MISSING_TEMPLATE_NODE:"luga.data.Region was unable find an HTML element with id: {0} containing an Handlebars template"}};if("undefined"==typeof Handlebars)throw CONST.ERROR_MESSAGES.MISSING_HANDLEBARS;if(options.node=jQuery(options.node),0===options.node.length)throw CONST.MESSAGES.MISSING_NODE;this.config={node:null,dsId:options.node.attr(luga.data.CONST.CUSTOM_ATTRIBUTES.DATA_SOURCE)||null,templateId:options.node.attr(luga.data.CONST.CUSTOM_ATTRIBUTES.TEMPLATE)||null},luga.merge(this.config,options);var self=this;if(this.dataSource=luga.data.getDataSource(this.config.dsId),null===this.dataSource)throw luga.string.format(luga.data.CONST.ERROR_MESSAGES.MISSING_DATA_SOURCE,[this.config.dsId]);this.dataSource.addObserver(this);var fetchTemplate=function(node){if(null!==self.config.templateId){var templateNode=jQuery("#"+self.config.templateId);if(1!==templateNode.length)throw luga.string.format(CONST.ERROR_MESSAGES.MISSING_TEMPLATE_NODE,[self.config.templateId]);return Handlebars.compile(templateNode.html())}return Handlebars.compile(node.html())};this.template=fetchTemplate(this.config.node),this.applyTraits=function(){luga.data.regionTraits.setRowId({node:this.config.node,dataSource:this.dataSource}),luga.data.regionTraits.setRowIndex({node:this.config.node,dataSource:this.dataSource})},this.generateHtml=function(){return this.template(this.dataSource.getContext())},this.render=function(){this.config.node.html(this.generateHtml()),this.applyTraits()},this.onDataChangedHandler=function(data){self.render()}}}(),function(){"use strict";luga.namespace("luga.data.regionTraits");var CONST={CUSTOM_ATTRIBUTES:{SET_ROW_ID:"data-lugads-setrowid",SET_ROW_INDEX:"data-lugads-setrowindex"},SELECTORS:{SET_ROW_ID:"*[data-lugads-setrowid]",SET_ROW_INDEX:"*[data-lugads-setrowindex]"}};luga.data.regionTraits.setRowId=function(options){options.node.find(CONST.SELECTORS.SET_ROW_ID).each(function(index,item){var jItem=jQuery(item);jItem.click(function(event){event.preventDefault();var rowId=jItem.attr(CONST.CUSTOM_ATTRIBUTES.SET_ROW_ID);options.dataSource.setCurrentRowId(rowId)})})},luga.data.regionTraits.setRowIndex=function(options){options.node.find(CONST.SELECTORS.SET_ROW_INDEX).each(function(index,item){var jItem=jQuery(item);jItem.click(function(event){event.preventDefault();var rowIndex=parseInt(jItem.attr(CONST.CUSTOM_ATTRIBUTES.SET_ROW_INDEX),10);options.dataSource.setCurrentRowIndex(rowIndex)})})}}();
//# sourceMappingURL=luga.data.min.js.map
