/*! 
Luga Validator 0.9.7 2018-04-07T16:53:19.042Z
http://www.lugajs.org
Copyright 2013-2018 Massimo Foti (massimo@massimocorner.com)
Licensed under the Apache License, Version 2.0 | http://www.apache.org/licenses/LICENSE-2.0
 */
if("undefined"==typeof luga)throw"Unable to find Luga JS Common";!function(){"use strict";const isNumeric=function(input){return!1===isNaN(parseFloat(input))&&!0===isFinite(input)};luga.namespace("luga.validator"),luga.namespace("luga.validator.handlers"),luga.validator.handlers.errorAlert=function(formNode,validators){let errorMsg="",focusGiven=!1;for(let i=0;i<validators.length;i++)errorMsg+=validators[i].message+"\n",!1===focusGiven&&validators[i].getFocus&&(validators[i].getFocus(),focusGiven=!0);""!==errorMsg&&alert(errorMsg)},luga.validator.handlers.errorBox=function(formNode,validators){if(0===validators.length)return void luga.validator.utils.removeDisplayBox(formNode);let focusGiven=!1,htmlStr="<ul>";for(let i=0;i<validators.length;i++)htmlStr+="<li><em>"+validators[i].name+": </em> "+validators[i].message+"</li>",!1===focusGiven&&validators[i].getFocus&&(validators[i].getFocus(),focusGiven=!0);htmlStr+="</ul>",luga.validator.utils.displayErrorMessage(formNode,htmlStr)},luga.validator.CONST={FORM_SELECTOR:"form[data-lugavalidator-validate]",RULE_PREFIX:"data-lugavalidator-",DEFAULT_DATE_PATTERN:"YYYY-MM-DD",CUSTOM_ATTRIBUTES:{VALIDATE:"data-lugavalidator-validate",ERROR:"data-lugavalidator-error",BEFORE:"data-lugavalidator-before",AFTER:"data-lugavalidator-after",BLOCK_SUBMIT:"data-lugavalidator-blocksubmit",MESSAGE:"data-lugavalidator-message",ERROR_CLASS:"data-lugavalidator-errorclass",REQUIRED:"data-lugavalidator-required",PATTERN:"data-lugavalidator-pattern",MIN_LENGTH:"data-lugavalidator-minlength",MAX_LENGTH:"data-lugavalidator-maxlength",MIN_NUMBER:"data-lugavalidator-minnumber",MAX_NUMBER:"data-lugavalidator-maxnumber",DATE_PATTERN:"data-lugavalidator-datepattern",MIN_DATE:"data-lugavalidator-mindate",MAX_DATE:"data-lugavalidator-maxdate",EQUAL_TO:"data-lugavalidator-equalto",MIN_CHECKED:"data-lugavalidator-minchecked",MAX_CHECKED:"data-lugavalidator-maxchecked",INVALID_INDEX:"data-lugavalidator-invalidindex",INVALID_VALUE:"data-lugavalidator-invalidvalue",DISABLED_MESSAGE:"data-lugavalidator-disabledlabel"},MESSAGES:{MISSING_FORM:"luga.validator was unable to load form",MISSING_FIELD:"luga.validator was unable to load field",MISSING_FUNCTION:"luga.validator was unable to find a function named: {0}",BASE_VALIDATOR_ABSTRACT:"luga.validator.BaseFieldValidator is an abstract class",GROUP_VALIDATOR_ABSTRACT:"luga.validator.BaseGroupValidator is an abstract class",FIELD_CANT_BE_VALIDATED:"This field can't be validated",PATTERN_NOT_FOUND:"luga.validator failed to retrieve pattern: {0}",INVALID_INDEX_PARAMETER:"data-lugavalidator-invalidindex accept only numbers",MISSING_EQUAL_TO_FIELD:"data-lugavalidator-equalto was unable to find field with id = {0}"},HANDLERS:{FORM_ERROR:"luga.validator.handlers.errorAlert"}},luga.validator.FormValidator=function(options){this.config={blocksubmit:options.formNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.BLOCK_SUBMIT)||"true",error:options.formNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR)||luga.validator.CONST.HANDLERS.FORM_ERROR,before:options.formNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.BEFORE)||null,after:options.formNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.AFTER)||null},luga.merge(this.config,options),this.config.blocksubmit=JSON.parse(this.config.blocksubmit);const self=this;if(self.validators=[],self.dirtyValidators=[],null===options.formNode)throw luga.validator.CONST.MESSAGES.MISSING_FORM;this.init=function(){self.validators=[],self.dirtyValidators=[];const formDom=self.config.formNode;for(let i=0;i<formDom.elements.length;i++)!0===luga.form.utils.isInputField(formDom.elements[i])&&self.validators.push(luga.validator.fieldValidatorFactory.getInstance({fieldNode:formDom.elements[i],formNode:self.config.formNode}))},this.validate=function(event){self.init(),self.before(self.config.formNode,event);const executedValidators={};for(let i=0;i<self.validators.length;i++)if(void 0!==self.validators[i]&&void 0!==self.validators[i].validate){if(void 0!==executedValidators[self.validators[i].name])continue;!0===self.validators[i].validate()&&self.dirtyValidators.push(self.validators[i]),executedValidators[self.validators[i].name]=!0}return!1===self.isValid()?(self.error(),void 0!==event&&event.preventDefault()):(!0===this.config.blocksubmit&&self.disableSubmit(),self.after(self.config.formNode,event)),self.dirtyValidators},this.disableSubmit=function(){const buttons=self.config.formNode.querySelectorAll("input[type=submit]");for(let i=0;i<buttons.length;i++){const buttonNode=buttons[i];null!==buttonNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.DISABLED_MESSAGE)&&(buttonNode.value=buttonNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.DISABLED_MESSAGE))}},this.isValid=function(){return 0===self.dirtyValidators.length},this.before=function(formNode,event){if(null!==self.config.before){const callBack=luga.lookupFunction(self.config.before);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.before]);callBack.apply(null,[self.config.formNode,event])}},this.error=function(){const callBack=luga.lookupFunction(self.config.error);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.error]);callBack.apply(null,[self.config.formNode,self.dirtyValidators])},this.after=function(formNode,event){if(null!==self.config.after){const callBack=luga.lookupFunction(self.config.after);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.after]);callBack.apply(null,[self.config.formNode,event])}}},luga.namespace("luga.validator.fieldValidatorFactory"),luga.validator.fieldValidatorFactory.getInstance=function(options){this.config={},luga.merge(this.config,options);if(!1===luga.form.utils.isInputField(this.config.fieldNode))return null;switch(this.config.fieldNode.type){case"select-multiple":case"select-one":return new luga.validator.SelectValidator(this.config);case"radio":if(void 0!==this.config.fieldNode.name)return new luga.validator.RadioValidator({inputGroup:luga.form.utils.getFieldGroup(this.config.fieldNode.name,this.config.formNode)});break;case"checkbox":if(void 0!==this.config.fieldNode.name)return new luga.validator.CheckboxValidator({inputGroup:luga.form.utils.getFieldGroup(this.config.fieldNode.name,this.config.formNode)});break;default:return new luga.validator.TextValidator(this.config)}},luga.validator.BaseFieldValidator=function(options){if(this.constructor===luga.validator.BaseFieldValidator)throw luga.validator.CONST.MESSAGES.BASE_VALIDATOR_ABSTRACT;this.config={message:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)||"",errorclass:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS)||""},luga.merge(this.config,options),this.node=options.fieldNode,this.message=this.config.message,this.name="",null!==this.node.getAttribute("name")?this.name=this.node.getAttribute("name"):null!==this.node.getAttribute("id")&&(this.name=this.node.getAttribute("id")),this.isValid=function(){},this.flagInvalid=function(){this.node.classList.add(this.config.errorclass),this.node.setAttribute("title",this.message)},this.flagValid=function(){""!==this.config.errorclass&&this.node.classList.remove(this.config.errorclass),this.node.removeAttribute("title")},this.validate=function(){return!0===this.node.disabled?(this.flagValid(),!1):!1===this.isValid()?(this.flagInvalid(),!0):(this.flagValid(),!1)}},luga.validator.TextValidator=function(options){if(this.config={required:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED),pattern:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.PATTERN),minlength:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_LENGTH),maxlength:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_LENGTH),minnumber:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_NUMBER),maxnumber:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_NUMBER),datepattern:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.DATE_PATTERN)||luga.validator.CONST.DEFAULT_DATE_PATTERN,mindate:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_DATE),maxdate:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_DATE),equalto:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.EQUAL_TO)},luga.merge(this.config,options),luga.extend(luga.validator.BaseFieldValidator,this,[this.config]),void 0!==this.config.required)try{this.config.required=JSON.parse(this.config.required)}catch(e){}const self=this;if(self.node=options.fieldNode,null===self.node)throw luga.validator.CONST.MESSAGES.MISSING_FIELD;self.type="text",this.getFocus=function(){try{self.node.focus(),self.node.select()}catch(e){}},this.isEmpty=function(){return""===self.node.value},this.isRequired=function(){const requiredAtt=this.config.required;if(!0===requiredAtt)return!0;if(!1===requiredAtt)return!1;const functionReference=luga.lookupFunction(requiredAtt);if(void 0!==functionReference)return functionReference.apply(null,[self.node]);throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[requiredAtt])},this.isValid=function(){if(self.isEmpty())return!0!==self.isRequired();for(let rule in luga.validator.rules)if(null!==self.node.getAttribute(luga.validator.CONST.RULE_PREFIX+rule)&&!1===luga.validator.rules[rule].apply(null,[self.node,self]))return!1;return!0}},luga.validator.SelectValidator=function(options){this.config={invalidindex:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.INVALID_INDEX),invalidvalue:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.INVALID_VALUE)},luga.merge(this.config,options),luga.extend(luga.validator.BaseFieldValidator,this,[this.config]);const self=this;if(self.type="select",self.node=options.fieldNode,null===self.node)throw luga.validator.CONST.MESSAGES.MISSING_FIELD;if(null!==self.config.invalidindex&&!1===isNumeric(self.config.invalidindex))throw luga.validator.CONST.MESSAGES.INVALID_INDEX_PARAMETER;let currentIndex=self.node.selectedIndex;-1===currentIndex&&(currentIndex=0),currentIndex=parseInt(currentIndex,10),this.isValid=function(){return currentIndex!==parseInt(self.config.invalidindex,10)&&self.node.value!==self.config.invalidvalue}},luga.validator.BaseGroupValidator=function(options){if(this.constructor===luga.validator.BaseGroupValidator)throw luga.validator.CONST.MESSAGES.GROUP_VALIDATOR_ABSTRACT;this.config={},luga.merge(this.config,options),this.inputGroup=this.config.inputGroup,this.config.inputGroup.length>0&&null!==this.config.inputGroup[0].getAttribute("name")&&(this.name=this.config.inputGroup[0].getAttribute("name")),this.message="",this.errorclass="";for(let i=0;i<this.inputGroup.length;i++){const field=this.inputGroup[i];null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)&&(this.message=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)),null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS)&&(this.errorclass=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS))}this.isValid=function(){},this.flagInvalid=function(){if(""!==this.errorclass)for(let i=0;i<this.inputGroup.length;i++){const field=this.inputGroup[i];field.classList.add(this.errorclass),field.setAttribute("title",this.message)}},this.flagValid=function(){if(""!==this.errorclass)for(let i=0;i<this.inputGroup.length;i++){const field=this.inputGroup[i];field.classList.remove(this.errorclass),field.removeAttribute("title")}},this.validate=function(){return!0===this.isValid()?(this.flagValid(),!1):(this.flagInvalid(),!0)}},luga.validator.RadioValidator=function(options){this.config={},luga.merge(this.config,options),luga.extend(luga.validator.BaseGroupValidator,this,[this.config]),this.type="radio",this.isRequired=function(){let requiredFlag=!1;const fieldGroup=this.inputGroup;for(let i=0;i<fieldGroup.length;i++){const field=fieldGroup[i];!1===field.disabled&&null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED)&&(requiredFlag=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED))}return requiredFlag},this.isValid=function(){if("true"===this.isRequired()){const fieldGroup=this.inputGroup;for(let i=0;i<fieldGroup.length;i++){if(!0===fieldGroup[i].checked)return!0}return!1}return!0}},luga.validator.CheckboxValidator=function(options){this.config={},luga.merge(this.config,options),luga.extend(luga.validator.BaseGroupValidator,this,[this.config]),this.type="checkbox",this.minchecked=0,this.maxchecked=this.config.inputGroup.length;for(let i=0;i<this.inputGroup.length;i++){const field=this.inputGroup[i];!1===field.disabled&&(null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_CHECKED)&&(this.minchecked=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_CHECKED)),null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_CHECKED)&&(this.maxchecked=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_CHECKED)))}this.isValid=function(){let checkCounter=0;const fieldGroup=this.inputGroup;for(let i=0;i<fieldGroup.length;i++){const field=this.inputGroup[i];!1===field.disabled&&!0===field.checked&&checkCounter++}return checkCounter>=this.minchecked&&checkCounter<=this.maxchecked}},luga.namespace("luga.validator.rules"),luga.validator.rules.email=function(fieldNode,validator){const fieldValue=fieldNode.value,containsAt=-1!==fieldValue.indexOf("@"),containDot=-1!==fieldValue.indexOf(".");return!0===containsAt&&!0===containDot},luga.validator.rules.equalto=function(fieldNode,validator){const secondFieldNode=document.getElementById(validator.config.equalto);if(null===secondFieldNode)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_EQUAL_TO_FIELD,[validator.config.equalto]);return fieldNode.value===secondFieldNode.value},luga.validator.rules.datepattern=function(fieldNode,validator){return null!==luga.validator.dateStrToObj(fieldNode.value,validator.config.datepattern)},luga.validator.rules.maxdate=function(fieldNode,validator){const pattern=validator.config.datepattern,valueDate=luga.validator.dateStrToObj(fieldNode.value,pattern),maxDate=luga.validator.dateStrToObj(validator.config.maxdate,pattern);return null!==valueDate&&null!==maxDate&&valueDate<=maxDate},luga.validator.rules.mindate=function(fieldNode,validator){const pattern=validator.config.datepattern,valueDate=luga.validator.dateStrToObj(fieldNode.value,pattern),minDate=luga.validator.dateStrToObj(validator.config.mindate,pattern);return null!==valueDate&&null!==minDate&&valueDate>=minDate},luga.validator.rules.maxlength=function(fieldNode,validator){return!(fieldNode.value.length>validator.config.maxlength)},luga.validator.rules.minlength=function(fieldNode,validator){return!(fieldNode.value.length<validator.config.minlength)},luga.validator.rules.maxnumber=function(fieldNode,validator){return!1!==isNumeric(fieldNode.value)&&parseFloat(fieldNode.value)<=parseFloat(validator.config.maxnumber)},luga.validator.rules.minnumber=function(fieldNode,validator){return!1!==isNumeric(fieldNode.value)&&parseFloat(fieldNode.value)>=parseFloat(validator.config.minnumber)},luga.validator.rules.pattern=function(fieldNode,validator){const regExpObj=luga.validator.patterns[validator.config.pattern];if(void 0!==regExpObj)return regExpObj.test(fieldNode.value);throw luga.string.format(luga.validator.CONST.MESSAGES.PATTERN_NOT_FOUND,[validator.config.pattern])},luga.namespace("luga.validator.patterns"),luga.validator.patterns.lettersonly=new RegExp("^[a-zA-Z]*$"),luga.validator.patterns.alphanumeric=new RegExp("^\\w*$"),luga.validator.patterns.integer=new RegExp("^-?[1-9][0-9]*$"),luga.validator.patterns.positiveinteger=new RegExp("^\\d\\d*$"),luga.validator.patterns.number=new RegExp("^-?(\\d\\d*\\.\\d*$)|(^-?\\d\\d*$)|(^-?\\.\\d\\d*$)"),luga.validator.patterns.filepath_pdf=new RegExp("[\\w_]*\\.([pP][dD][fF])$"),luga.validator.patterns.filepath_jpg=new RegExp("[\\w_]*\\.([jJ][pP][eE]?[gG])$"),luga.validator.patterns.filepath_zip=new RegExp("[\\w_]*\\.([zZ][iI][pP])$"),luga.validator.patterns.filepath=new RegExp("[\\w_]*\\.\\w{3}$"),luga.validator.patterns.time=new RegExp("([0-1][0-9]|2[0-3]):[0-5][0-9]$"),luga.namespace("luga.validator.dateSpecs"),luga.validator.createDateSpecObj=function(rex,year,month,day,separator){const infoObj={};return infoObj.rex=new RegExp(rex),infoObj.y=year,infoObj.m=month,infoObj.d=day,infoObj.s=separator,infoObj},luga.validator.dateStrToObj=function(dateStr,dateSpecKey){const dateSpecObj=luga.validator.dateSpecs[dateSpecKey];if(void 0!==dateSpecObj){if(!dateSpecObj.rex.test(dateStr))return null;const dateBits=dateStr.split(dateSpecObj.s),testDate=new Date(dateBits[dateSpecObj.y],dateBits[dateSpecObj.m]-1,dateBits[dateSpecObj.d]),yearMatches=testDate.getFullYear()===parseInt(dateBits[dateSpecObj.y],10),monthMatches=testDate.getMonth()===parseInt(dateBits[dateSpecObj.m]-1,10),dayMatches=testDate.getDate()===parseInt(dateBits[dateSpecObj.d],10);return!0===yearMatches&&!0===monthMatches&&!0===dayMatches?testDate:null}return null},luga.validator.dateSpecs["YYYY-MM-DD"]=luga.validator.createDateSpecObj("^([0-9]{4})-([0-1][0-9])-([0-3][0-9])$",0,1,2,"-"),luga.validator.dateSpecs["YYYY-M-D"]=luga.validator.createDateSpecObj("^([0-9]{4})-([0-1]?[0-9])-([0-3]?[0-9])$",0,1,2,"-"),luga.validator.dateSpecs["MM.DD.YYYY"]=luga.validator.createDateSpecObj("^([0-1][0-9]).([0-3][0-9]).([0-9]{4})$",2,0,1,"."),luga.validator.dateSpecs["M.D.YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9]).([0-3]?[0-9]).([0-9]{4})$",2,0,1,"."),luga.validator.dateSpecs["MM/DD/YYYY"]=luga.validator.createDateSpecObj("^([0-1][0-9])/([0-3][0-9])/([0-9]{4})$",2,0,1,"/"),luga.validator.dateSpecs["M/D/YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9])/([0-3]?[0-9])/([0-9]{4})$",2,0,1,"/"),luga.validator.dateSpecs["MM-DD-YYYY"]=luga.validator.createDateSpecObj("^([0-21][0-9])-([0-3][0-9])-([0-9]{4})$",2,0,1,"-"),luga.validator.dateSpecs["M-D-YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9])-([0-3]?[0-9])-([0-9]{4})$",2,0,1,"-"),luga.validator.dateSpecs["DD.MM.YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9]).([0-1][0-9]).([0-9]{4})$",2,1,0,"."),luga.validator.dateSpecs["D.M.YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9]).([0-1]?[0-9]).([0-9]{4})$",2,1,0,"."),luga.validator.dateSpecs["DD/MM/YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9])/([0-1][0-9])/([0-9]{4})$",2,1,0,"/"),luga.validator.dateSpecs["D/M/YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9])/([0-1]?[0-9])/([0-9]{4})$",2,1,0,"/"),luga.validator.dateSpecs["DD-MM-YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9])-([0-1][0-9])-([0-9]{4})$",2,1,0,"-"),luga.validator.dateSpecs["D-M-YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9])-([0-1]?[0-9])-([0-9]{4})$",2,1,0,"-"),luga.validator.initForms=function(rootNode){void 0===rootNode&&(rootNode=document.body);const nodes=rootNode.querySelectorAll(luga.validator.CONST.FORM_SELECTOR);for(let i=0;i<nodes.length;i++){const element=nodes[i];"true"===element.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.VALIDATE)&&element.addEventListener("submit",function(event){new luga.validator.FormValidator({formNode:element}).validate(event)},!1)}},luga.namespace("luga.validator.utils"),luga.validator.utils.CONST={CSS_CLASSES:{MESSAGE:"luga-message",ERROR_MESSAGE:"luga-error-message"},MSG_BOX_ID:"lugaMessageBox"};const generateBoxId=function(node){let boxId=luga.validator.utils.CONST.MSG_BOX_ID;return void 0!==node&&(null===node.getAttribute("id")?boxId+=node.getAttribute("id"):null!==node.getAttribute("name")&&(boxId+=node.getAttribute("name"))),boxId};luga.validator.utils.removeDisplayBox=function(node){const boxId=generateBoxId(node),oldBox=document.getElementById(boxId);null!==oldBox&&(oldBox.outerHTML="")},luga.validator.utils.displayMessage=function(node,html){return luga.validator.utils.displayBox(node,html,luga.validator.utils.CONST.CSS_CLASSES.MESSAGE)},luga.validator.utils.displayErrorMessage=function(node,html){return luga.validator.utils.displayBox(node,html,luga.validator.utils.CONST.CSS_CLASSES.ERROR_MESSAGE)},luga.validator.utils.displayBox=function(node,html,cssClass){if(void 0===node)return;void 0===cssClass&&(cssClass=luga.validator.utils.CONST.CSS_CLASSES.MESSAGE);const boxId=generateBoxId(node),box=document.createElement("div");box.setAttribute("id",boxId),box.classList.add(cssClass),box.innerHTML=html;const oldBox=document.getElementById(boxId);return null!==oldBox?oldBox.outerHTML=box.outerHTML:node.insertBefore(box,null),box},luga.namespace("luga.validator.api"),luga.validator.api.validateForm=function(options){const formValidator=new luga.validator.FormValidator(options);return formValidator.validate(),formValidator.isValid()},luga.validator.api.validateField=function(options){if(!1===luga.form.utils.isInputField(options.fieldNode))throw luga.validator.CONST.MESSAGES.FIELD_CANT_BE_VALIDATED;void 0===options.error&&(options.error=luga.validator.CONST.HANDLERS.FORM_ERROR);const dirtyValidators=[],fieldValidator=luga.validator.fieldValidatorFactory.getInstance(options);if(fieldValidator.validate(null),!0!==fieldValidator.isValid()){const callBack=luga.lookupFunction(options.error);dirtyValidators.push(fieldValidator),callBack(options.fieldNode,dirtyValidators)}return fieldValidator.isValid()},luga.validator.api.validateFields=function(options){options.error||(options.error=luga.validator.CONST.HANDLERS.FORM_ERROR);const validators=[],executedValidators={},dirtyValidators=[];for(let i=0;i<options.fields.length;i++)!0===luga.form.utils.isInputField(options.fields[i])&&validators.push(luga.validator.fieldValidatorFactory.getInstance({fieldNode:options.fields[i]}));for(let j=0;j<validators.length;j++)if(validators[j]&&validators[j].validate){if(void 0!==executedValidators[validators[j].name])continue;!0===validators[j].validate()&&dirtyValidators.push(validators[j]),executedValidators[validators[j].name]=!0}if(dirtyValidators.length>0){luga.lookupFunction(options.error).apply(null,[options.formNode,dirtyValidators])}return 0===dirtyValidators.length},luga.validator.api.validateChildFields=function(options){const fields=luga.form.utils.getChildFields(options.rootNode);return luga.validator.api.validateFields({fields:fields,error:options.error})},luga.dom.ready(function(){luga.validator.initForms()})}();
//# sourceMappingURL=luga.validator.min.js.map
