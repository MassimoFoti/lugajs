{"version":3,"sources":["luga.ajaxform.js"],"names":["luga","namespace","ajaxform","handlers","replaceForm","msg","formNode","textStatus","jqXHR","jQuery","empty","html","errorAlert","errorThrown","alert","errorBox","utils","removeDisplayBox","displayErrorMessage","afterValidation","event","preventDefault","Sender","send","CONST","FORM_SELECTOR","DEFAULT_METHOD","DEFAULT_TIME_OUT","CUSTOM_ATTRIBUTES","AJAX","ACTION","METHOD","TIME_OUT","SUCCESS","SUCCESS_MSG","ERROR","ERROR_MSG","BEFORE","AFTER","HEADERS","MESSAGES","MISSING_FORM","MISSING_FUNCTION","HANDLERS","options","this","config","action","attr","document","location","href","method","timeout","success","error","successmsg","errormsg","before","after","headers","merge","parseInt","self","length","handleAfter","callBack","lookupFunction","undefined","string","format","apply","handleBefore","handleError","handleSuccess","formData","form","toQueryString","ajax","data","response","url","sendJson","toJson","contentType","JSON","stringify","initForms","rootNode","find","each","index","item","submit","ready"],"mappings":"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","file":"luga.ajaxform.min.js","sourcesContent":["/*! \nLuga Ajaxform 0.9.7dev 2017-10-27T19:30:08.694Z\nCopyright 2013-2017 Massimo Foti (massimo@massimocorner.com)\nLicensed under the Apache License, Version 2.0 | http://www.apache.org/licenses/LICENSE-2.0\n */\n/* globals alert */\r\n\r\n/* istanbul ignore if */\r\nif(typeof(luga) === \"undefined\"){\r\n\tthrow(\"Unable to find Luga JS Core\");\r\n}\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\r\n\tluga.namespace(\"luga.ajaxform\");\r\n\r\n\t/* Success and error handlers */\r\n\tluga.namespace(\"luga.ajaxform.handlers\");\r\n\r\n\t/**\r\n\t * Replace form with message\r\n\t *\r\n\t * @param {String}   msg          Message to display in the GUI\r\n\t * @param {jQuery}   formNode     jQuery object wrapping the form\r\n\t * @param {String}   textStatus   HTTP status\r\n\t * @param {Object}   jqXHR        jQuery wrapper around XMLHttpRequest\r\n\t */\r\n\tluga.ajaxform.handlers.replaceForm = function(msg, formNode, textStatus, jqXHR){\r\n\t\tjQuery(formNode).empty();\r\n\t\tjQuery(formNode).html(msg);\r\n\t};\r\n\r\n\t/**\r\n\t * Display error message inside alert\r\n\t *\r\n\t * @param {String}   msg          Message to display in the GUI\r\n\t * @param {jQuery}   formNode     jQuery object wrapping the form\r\n\t * @param {String}   textStatus   HTTP status\r\n\t * @param {String}   errorThrown  Error message from jQuery\r\n\t * @param {Object}   jqXHR        jQuery wrapper around XMLHttpRequest\r\n\t */\r\n\tluga.ajaxform.handlers.errorAlert = function(msg, formNode, textStatus, errorThrown, jqXHR){\r\n\t\talert(msg);\r\n\t};\r\n\r\n\t/**\r\n\t * Display errors inside a box above the form\r\n\t *\r\n\t * @param {String}   msg          Message to display in the GUI\r\n\t * @param {jQuery}   formNode     jQuery object wrapping the form\r\n\t * @param {String}   textStatus   HTTP status\r\n\t * @param {String}   errorThrown  Error message from jQuery\r\n\t * @param {Object}   jqXHR        jQuery wrapper around XMLHttpRequest\r\n\t */\r\n\tluga.ajaxform.handlers.errorBox = function(msg, formNode, textStatus, errorThrown, jqXHR){\r\n\t\t// Clean-up any existing box\r\n\t\tluga.utils.removeDisplayBox(formNode);\r\n\t\tluga.utils.displayErrorMessage(formNode, msg);\r\n\t};\r\n\r\n\t/**\r\n\t * Utility function to be used as after handler by Luga Validator\r\n\t *\r\n\t * @param {jQuery}       formNode  jQuery object wrapping the form\r\n\t * @param {jQuery.Event} event     jQuery object wrapping the submit event\r\n\t */\r\n\tluga.ajaxform.handlers.afterValidation = function(formNode, event){\r\n\t\tevent.preventDefault();\r\n\t\tvar sender = new luga.ajaxform.Sender({\r\n\t\t\tformNode: formNode\r\n\t\t});\r\n\t\tsender.send();\r\n\t};\r\n\r\n\tluga.ajaxform.CONST = {\r\n\t\tFORM_SELECTOR: \"form[data-lugajax-form='true']\",\r\n\t\tDEFAULT_METHOD: \"GET\",\r\n\t\tDEFAULT_TIME_OUT: 30000, // ms\r\n\t\tCUSTOM_ATTRIBUTES: {\r\n\t\t\tAJAX: \"data-lugajax-form\",\r\n\t\t\tACTION: \"data-lugajax-action\",\r\n\t\t\tMETHOD: \"data-lugajax-method\",\r\n\t\t\tTIME_OUT: \"data-lugajax-timeout\",\r\n\t\t\tSUCCESS: \"data-lugajax-success\",\r\n\t\t\tSUCCESS_MSG: \"data-lugajax-successmsg\",\r\n\t\t\tERROR: \"data-lugajax-error\",\r\n\t\t\tERROR_MSG: \"data-lugajax-errormsg\",\r\n\t\t\tBEFORE: \"data-lugajax-before\",\r\n\t\t\tAFTER: \"data-lugajax-after\",\r\n\t\t\tHEADERS: \"data-lugajax-headers\"\r\n\t\t},\r\n\t\tMESSAGES: {\r\n\t\t\tSUCCESS: \"Thanks for submitting the form\",\r\n\t\t\tERROR: \"Failed to submit the form\",\r\n\t\t\tMISSING_FORM: \"luga.ajaxform was unable to load form\",\r\n\t\t\tMISSING_FUNCTION: \"luga.ajaxform was unable to find a function named: {0}\"\r\n\t\t},\r\n\t\tHANDLERS: {\r\n\t\t\tSUCCESS: \"luga.ajaxform.handlers.replaceForm\",\r\n\t\t\tERROR: \"luga.ajaxform.handlers.errorAlert\"\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @typedef {Object} luga.ajaxform.Sender.options\r\n\t *\r\n\t * @property {jQuery} formNode     Either a jQuery object wrapping the form or the naked DOM object. Required\r\n\t * @property {String} action       URL to where the form will be send. Default to the current URL\r\n\t * @property {String} method       HTTP method to be used. Default to GET\r\n\t * @property {Number} timeout      Timeout to be used during the HTTP call (milliseconds). Default to 30000\r\n\t * @property {String} success      Name of the function to be invoked if the form is successfully submitted. Default to luga.ajaxform.handlers.replaceForm\r\n\t * @property {String} error        Name of the function to be invoked if the HTTP call failed. Default to luga.ajaxform.handlers.errorAlert\r\n\t * @property {String} successmsg   Message that will be displayed to the user if the form is successfully submitted. Default to \"Thanks for submitting the form\"\r\n\t * @property {String} errormsg     Message that will be displayed to the user if the HTTP call failed. Default to \"Failed to submit the form\"\r\n\t * @property {String} before       Name of the function to be invoked before the form is send. Default to null\r\n\t * @property {String} after        Name of the function to be invoked after the form is send. Default to null\r\n\t * @property {Object} headers      A set of name/value pairs to be used as custom HTTP headers. Available only with JavaScript API\r\n\t */\r\n\r\n\t/**\r\n\t * Form handler. Invoke its sender() method to serialize the form and send its contents using XHR\r\n\t * @param options {luga.ajaxform.Sender.options}\r\n\t * @constructor\r\n\t * @throws {Exception}\r\n\t */\r\n\tluga.ajaxform.Sender = function(options){\r\n\t\t// Ensure it's a jQuery object\r\n\t\toptions.formNode = jQuery(options.formNode);\r\n\t\tthis.config = {\r\n\t\t\tformNode: null, // Required\r\n\t\t\t// Either: form attribute, custom attribute, incoming option or current URL\r\n\t\t\taction: options.formNode.attr(\"action\") || options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ACTION) || document.location.href,\r\n\t\t\t// Either: form attribute, custom attribute, incoming option or default\r\n\t\t\tmethod: options.formNode.attr(\"method\") || options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.METHOD) || luga.ajaxform.CONST.DEFAULT_METHOD,\r\n\t\t\t// Either: custom attribute, incoming option or default\r\n\t\t\ttimeout: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.TIME_OUT) || luga.ajaxform.CONST.DEFAULT_TIME_OUT,\r\n\t\t\tsuccess: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.SUCCESS) || luga.ajaxform.CONST.HANDLERS.SUCCESS,\r\n\t\t\terror: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ERROR) || luga.ajaxform.CONST.HANDLERS.ERROR,\r\n\t\t\tsuccessmsg: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.SUCCESS_MSG) || luga.ajaxform.CONST.MESSAGES.SUCCESS,\r\n\t\t\terrormsg: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ERROR_MSG) || luga.ajaxform.CONST.MESSAGES.ERROR,\r\n\t\t\t// Either: custom attribute, incoming option or null\r\n\t\t\tbefore: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.BEFORE) || null,\r\n\t\t\tafter: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.AFTER) || null,\r\n\t\t\theaders: null\r\n\t\t};\r\n\t\tluga.merge(this.config, options);\r\n\t\tthis.config.timeout = parseInt(this.config.timeout, 10);\r\n\t\tvar self = this;\r\n\r\n\t\tif(self.config.formNode.length === 0){\r\n\t\t\tthrow(luga.ajaxform.CONST.MESSAGES.MISSING_FORM);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @throws {Exception}\r\n\t\t */\r\n\t\tvar handleAfter = function(){\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif(self.config.after !== null){\r\n\t\t\t\tvar callBack = luga.lookupFunction(self.config.after);\r\n\t\t\t\tif(callBack === undefined){\r\n\t\t\t\t\tthrow(luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION, [self.config.after]));\r\n\t\t\t\t}\r\n\t\t\t\tcallBack.apply(null, [self.config.formNode]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @throws {Exception}\r\n\t\t */\r\n\t\tvar handleBefore = function(){\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif(self.config.before !== null){\r\n\t\t\t\tvar callBack = luga.lookupFunction(self.config.before);\r\n\t\t\t\tif(callBack === undefined){\r\n\t\t\t\t\tthrow(luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION, [self.config.before]));\r\n\t\t\t\t}\r\n\t\t\t\tcallBack.apply(null, [self.config.formNode]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @throws {Exception}\r\n\t\t */\r\n\t\tvar handleError = function(textStatus, jqXHR, errorThrown){\r\n\t\t\tvar callBack = luga.lookupFunction(self.config.error);\r\n\t\t\tif(callBack === undefined){\r\n\t\t\t\tthrow(luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION, [self.config.error]));\r\n\t\t\t}\r\n\t\t\tcallBack.apply(null, [self.config.errormsg, self.config.formNode, textStatus, errorThrown, jqXHR]);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @throws {Exception}\r\n\t\t */\r\n\t\tvar handleSuccess = function(textStatus, jqXHR){\r\n\t\t\tvar callBack = luga.lookupFunction(self.config.success);\r\n\t\t\tif(callBack === undefined){\r\n\t\t\t\tthrow(luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION, [self.config.success]));\r\n\t\t\t}\r\n\t\t\tcallBack.apply(null, [self.config.successmsg, self.config.formNode, textStatus, jqXHR]);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Perform the following actions:\r\n\t\t * 1) Invoke the before handler, if any\r\n\t\t * 2) Make the HTTP call, sending along the serialized form's content\r\n\t\t * 3) Invoke either the success or error handler\r\n\t\t * 4) Invoke the after handler, if any\r\n\t\t */\r\n\t\tthis.send = function(){\r\n\r\n\t\t\tvar formData = luga.form.toQueryString(self.config.formNode, true);\r\n\r\n\t\t\tif(self.config.before !== null){\r\n\t\t\t\thandleBefore();\r\n\t\t\t}\r\n\r\n\t\t\tjQuery.ajax({\r\n\t\t\t\tdata: formData,\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown){\r\n\t\t\t\t\thandleError(textStatus, jqXHR, errorThrown);\r\n\t\t\t\t},\r\n\t\t\t\tmethod: self.config.method,\r\n\t\t\t\theaders: self.config.headers,\r\n\t\t\t\tsuccess: function(response, textStatus, jqXHR){\r\n\t\t\t\t\thandleSuccess(textStatus, jqXHR);\r\n\t\t\t\t},\r\n\t\t\t\ttimeout: self.config.timeout,\r\n\t\t\t\turl: self.config.action\r\n\t\t\t});\r\n\r\n\t\t\tif(self.config.after !== null){\r\n\t\t\t\thandleAfter();\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t AS above, just send  data as raw JSON\r\n\t\t */\r\n\t\tthis.sendJson = function(){\r\n\r\n\t\t\tvar formData = luga.form.toJson(self.config.formNode, true);\r\n\r\n\t\t\tif(self.config.before !== null){\r\n\t\t\t\thandleBefore();\r\n\t\t\t}\r\n\r\n\t\t\tjQuery.ajax({\r\n\t\t\t\tcontentType: \"application/json\",\r\n\t\t\t\tdata: JSON.stringify(formData),\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown){\r\n\t\t\t\t\thandleError(textStatus, jqXHR, errorThrown);\r\n\t\t\t\t},\r\n\t\t\t\tmethod: self.config.method,\r\n\t\t\t\theaders: self.config.headers,\r\n\t\t\t\tsuccess: function(response, textStatus, jqXHR){\r\n\t\t\t\t\thandleSuccess(textStatus, jqXHR);\r\n\t\t\t\t},\r\n\t\t\t\ttimeout: self.config.timeout,\r\n\t\t\t\turl: self.config.action\r\n\t\t\t});\r\n\r\n\t\t\tif(self.config.after !== null){\r\n\t\t\t\thandleAfter();\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Attach form handlers to onSubmit events\r\n\t * @param {jquery|undefined} [jQuery(\"body\")] rootNode  Optional, default to jQuery(\"body\")\r\n\t */\r\n\tluga.ajaxform.initForms = function(rootNode){\r\n\t\tif(rootNode === undefined){\r\n\t\t\trootNode = jQuery(\"body\");\r\n\t\t}\r\n\t\trootNode.find(luga.ajaxform.CONST.FORM_SELECTOR).each(function(index, item){\r\n\t\t\tvar formNode = jQuery(item);\r\n\t\t\tformNode.submit(function(event){\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tvar formHandler = new luga.ajaxform.Sender({\r\n\t\t\t\t\tformNode: formNode\r\n\t\t\t\t});\r\n\t\t\t\tformHandler.send();\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tjQuery(document).ready(function(){\r\n\t\tluga.ajaxform.initForms();\r\n\t});\r\n\r\n}());"],"sourceRoot":"."}