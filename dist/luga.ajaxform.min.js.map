{"version":3,"sources":["luga.ajaxform.min.js","luga.ajaxform.js"],"names":["luga","namespace","ajaxform","version","handlers","replaceForm","msg","formNode","textStatus","jqXHR","jQuery","empty","html","errorAlert","errorThrown","alert","errorBox","utils","removeDisplayBox","displayErrorMessage","afterValidation","event","preventDefault","sender","Sender","send","CONST","FORM_SELECTOR","USER_AGENT","DEFAULT_METHOD","DEFAULT_TIME_OUT","CUSTOM_ATTRIBUTES","AJAX","ACTION","METHOD","TIME_OUT","SUCCESS","SUCCESS_MSG","ERROR","ERROR_MSG","BEFORE","AFTER","MESSAGES","MISSING_FORM","MISSING_FUNCTION","HANDLERS","options","this","config","action","attr","document","location","href","method","timeout","success","error","successmsg","errormsg","before","after","merge","parseInt","self","length","handleAfter","callBack","lookupFunction","undefined","string","format","apply","handleBefore","handleError","handleSuccess","formData","form","toQueryString","ajax","data","headers","X-Requested-With","response","url","sendJson","toJson","contentType","JSON","stringify","initForms","each","index","item","submit","formHandler","ready"],"mappings":"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","file":"luga.ajaxform.min.js","sourcesContent":[null,"/* globals alert */\r\n\r\nif(typeof(luga) === \"undefined\"){\r\n\tthrow(\"Unable to find Luga JS Core\");\r\n}\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\r\n\tluga.namespace(\"luga.ajaxform\");\r\n\tluga.ajaxform.version = \"0.7.3\";\r\n\r\n\t/* Success and error handlers */\r\n\tluga.namespace(\"luga.ajaxform.handlers\");\r\n\r\n\t/**\r\n\t * Replace form with message\r\n\t *\r\n\t * @param {string}   msg          Message to display in the GUI\r\n\t * @param {jquery}   formNode     jQuery object wrapping the form\r\n\t * @param {string}   textStatus   HTTP status\r\n\t * @param {object}   jqXHR        jQuery wrapper around XMLHttpRequest\r\n\t */\r\n\tluga.ajaxform.handlers.replaceForm = function(msg, formNode, textStatus, jqXHR){\r\n\t\tjQuery(formNode).empty();\r\n\t\tjQuery(formNode).html(msg);\r\n\t};\r\n\r\n\t/**\r\n\t * Display error message inside alert\r\n\t *\r\n\t * @param {string}   msg          Message to display in the GUI\r\n\t * @param {jquery}   formNode     jQuery object wrapping the form\r\n\t * @param {string}   textStatus   HTTP status\r\n\t * @param {string}   errorThrown  Error message from jQuery\r\n\t * @param {object}   jqXHR        jQuery wrapper around XMLHttpRequest\r\n\t */\r\n\tluga.ajaxform.handlers.errorAlert = function(msg, formNode, textStatus, errorThrown, jqXHR){\r\n\t\talert(msg);\r\n\t};\r\n\r\n\t/**\r\n\t * Display errors inside a box above the form\r\n\t *\r\n\t * @param {string}   msg          Message to display in the GUI\r\n\t * @param {jquery}   formNode     jQuery object wrapping the form\r\n\t * @param {string}   textStatus   HTTP status\r\n\t * @param {string}   errorThrown  Error message from jQuery\r\n\t * @param {object}   jqXHR        jQuery wrapper around XMLHttpRequest\r\n\t */\r\n\tluga.ajaxform.handlers.errorBox = function(msg, formNode, textStatus, errorThrown, jqXHR){\r\n\t\t// Clean-up any existing box\r\n\t\tluga.utils.removeDisplayBox(formNode);\r\n\t\tluga.utils.displayErrorMessage(formNode, msg);\r\n\t};\r\n\r\n\t/**\r\n\t * Utility function to be used as after handler by Luga Validator\r\n\t *\r\n\t * @param {jquery}       formNode  jQuery object wrapping the form\r\n\t * @param {jquery.Event} event     jQuery object wrapping the submit event\r\n\t */\r\n\tluga.ajaxform.handlers.afterValidation = function(formNode, event){\r\n\t\tevent.preventDefault();\r\n\t\tvar sender = new luga.ajaxform.Sender({\r\n\t\t\tformNode: formNode\r\n\t\t});\r\n\t\tsender.send();\r\n\t};\r\n\r\n\tluga.ajaxform.CONST = {\r\n\t\tFORM_SELECTOR: \"form[data-lugajax-form='true']\",\r\n\t\tUSER_AGENT: \"luga.ajaxform\",\r\n\t\tDEFAULT_METHOD: \"GET\",\r\n\t\tDEFAULT_TIME_OUT: 30000, // ms\r\n\t\tCUSTOM_ATTRIBUTES: {\r\n\t\t\tAJAX: \"data-lugajax-form\",\r\n\t\t\tACTION: \"data-lugajax-action\",\r\n\t\t\tMETHOD: \"data-lugajax-method\",\r\n\t\t\tTIME_OUT: \"data-lugajax-timeout\",\r\n\t\t\tSUCCESS: \"data-lugajax-success\",\r\n\t\t\tSUCCESS_MSG: \"data-lugajax-successmsg\",\r\n\t\t\tERROR: \"data-lugajax-error\",\r\n\t\t\tERROR_MSG: \"data-lugajax-errormsg\",\r\n\t\t\tBEFORE: \"data-lugajax-before\",\r\n\t\t\tAFTER: \"data-lugajax-after\"\r\n\t\t},\r\n\t\tMESSAGES: {\r\n\t\t\tSUCCESS: \"Thanks for submitting the form\",\r\n\t\t\tERROR: \"Failed to submit the form\",\r\n\t\t\tMISSING_FORM: \"luga.ajaxform was unable to load form\",\r\n\t\t\tMISSING_FUNCTION: \"luga.ajaxform was unable to find a function named: {0}\"\r\n\t\t},\r\n\t\tHANDLERS: {\r\n\t\t\tSUCCESS: \"luga.ajaxform.handlers.replaceForm\",\r\n\t\t\tERROR: \"luga.ajaxform.handlers.errorAlert\"\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @typedef {object} luga.ajaxform.Sender.options\r\n\t *\r\n\t * @property {jquery} formNode     Either a jQuery object wrapping the form or the naked DOM object. Required\r\n\t * @property {string} action       URL to where the form will be send. Default to the current URL\r\n\t * @property {string} method       HTTP method to be used. Default to GET\r\n\t * @property {number} timeout      Timeout to be used during the HTTP call (milliseconds). Default to 30000\r\n\t * @property {string} success      Name of the function to be invoked if the form is successfully submitted. Default to luga.ajaxform.handlers.replaceForm\r\n\t * @property {string} error        Name of the function to be invoked if the HTTP call failed. Default to luga.ajaxform.handlers.errorAlert\r\n\t * @property {string} successmsg   Message that will be displayed to the user if the form is successfully submitted. Default to \"Thanks for submitting the form\"\r\n\t * @property {string} errormsg     Message that will be displayed to the user if the HTTP call failed. Default to \"Failed to submit the form\"\r\n\t * @property {string} before       Name of the function to be invoked before the form is send. Default to null\r\n\t * @property {string} after        Name of the function to be invoked after the form is send. Default to null\r\n\t */\r\n\r\n\t/**\r\n\t * Form handler. Invoke its sender() method to serialize the form and send its contents using XHR\r\n\t * @param options {luga.ajaxform.Sender.options}\r\n\t * @constructor\r\n\t * @throws\r\n\t */\r\n\tluga.ajaxform.Sender = function(options){\r\n\t\t// Ensure it's a jQuery object\r\n\t\toptions.formNode = jQuery(options.formNode);\r\n\t\tthis.config = {\r\n\t\t\tformNode: null, // Required\r\n\t\t\t// Either: form attribute, custom attribute, incoming option or current URL\r\n\t\t\taction: options.formNode.attr(\"action\") || options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ACTION) || document.location.href,\r\n\t\t\t// Either: form attribute, custom attribute, incoming option or default\r\n\t\t\tmethod: options.formNode.attr(\"method\") || options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.METHOD) || luga.ajaxform.CONST.DEFAULT_METHOD,\r\n\t\t\t// Either: custom attribute, incoming option or default\r\n\t\t\ttimeout: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.TIME_OUT) || luga.ajaxform.CONST.DEFAULT_TIME_OUT,\r\n\t\t\tsuccess: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.SUCCESS) || luga.ajaxform.CONST.HANDLERS.SUCCESS,\r\n\t\t\terror: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ERROR) || luga.ajaxform.CONST.HANDLERS.ERROR,\r\n\t\t\tsuccessmsg: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.SUCCESS_MSG) || luga.ajaxform.CONST.MESSAGES.SUCCESS,\r\n\t\t\terrormsg: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ERROR_MSG) || luga.ajaxform.CONST.MESSAGES.ERROR,\r\n\t\t\t// Either: custom attribute, incoming option or null\r\n\t\t\tbefore: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.BEFORE) || null,\r\n\t\t\tafter: options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.AFTER) || null\r\n\t\t};\r\n\t\tluga.merge(this.config, options);\r\n\t\tthis.config.timeout = parseInt(this.config.timeout, 10);\r\n\t\tvar self = this;\r\n\r\n\t\tif(self.config.formNode.length === 0){\r\n\t\t\tthrow(luga.ajaxform.CONST.MESSAGES.MISSING_FORM);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @throws\r\n\t\t */\r\n\t\tvar handleAfter = function(){\r\n\t\t\tif(self.config.after !== null){\r\n\t\t\t\tvar callBack = luga.lookupFunction(self.config.after);\r\n\t\t\t\tif(callBack === undefined){\r\n\t\t\t\t\tthrow(luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION, [self.config.after]));\r\n\t\t\t\t}\r\n\t\t\t\tcallBack.apply(null, [self.config.formNode]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @throws\r\n\t\t */\r\n\t\tvar handleBefore = function(){\r\n\t\t\tif(self.config.before !== null){\r\n\t\t\t\tvar callBack = luga.lookupFunction(self.config.before);\r\n\t\t\t\tif(callBack === undefined){\r\n\t\t\t\t\tthrow(luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION, [self.config.before]));\r\n\t\t\t\t}\r\n\t\t\t\tcallBack.apply(null, [self.config.formNode]);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @throws\r\n\t\t */\r\n\t\tvar handleError = function(textStatus, jqXHR, errorThrown){\r\n\t\t\tvar callBack = luga.lookupFunction(self.config.error);\r\n\t\t\tif(callBack === undefined){\r\n\t\t\t\tthrow(luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION, [self.config.error]));\r\n\t\t\t}\r\n\t\t\tcallBack.apply(null, [self.config.errormsg, self.config.formNode, textStatus, errorThrown, jqXHR]);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @throws\r\n\t\t */\r\n\t\tvar handleSuccess = function(textStatus, jqXHR){\r\n\t\t\tvar callBack = luga.lookupFunction(self.config.success);\r\n\t\t\tif(callBack === undefined){\r\n\t\t\t\tthrow(luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION, [self.config.success]));\r\n\t\t\t}\r\n\t\t\tcallBack.apply(null, [self.config.successmsg, self.config.formNode, textStatus, jqXHR]);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Perform the following actions:\r\n\t\t * 1) Invoke the before handler, if any\r\n\t\t * 2) Make the HTTP call, sending along the serialized form's content\r\n\t\t * 3) Invoke either the success or error handler\r\n\t\t * 4) Invoke the after handler, if any\r\n\t\t */\r\n\t\tthis.send = function(){\r\n\r\n\t\t\tvar formData = luga.form.toQueryString(self.config.formNode, true);\r\n\r\n\t\t\tif(self.config.before !== null){\r\n\t\t\t\thandleBefore();\r\n\t\t\t}\r\n\r\n\t\t\tjQuery.ajax({\r\n\t\t\t\tdata: formData,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"X-Requested-With\": luga.ajaxform.CONST.USER_AGENT\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown){\r\n\t\t\t\t\thandleError(textStatus, jqXHR, errorThrown);\r\n\t\t\t\t},\r\n\t\t\t\tmethod: self.config.method,\r\n\t\t\t\tsuccess: function(response, textStatus, jqXHR){\r\n\t\t\t\t\thandleSuccess(textStatus, jqXHR);\r\n\t\t\t\t},\r\n\t\t\t\ttimeout: self.config.timeout,\r\n\t\t\t\turl: self.config.action\r\n\t\t\t});\r\n\r\n\t\t\tif(self.config.after !== null){\r\n\t\t\t\thandleAfter();\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t AS above, just send  data as raw JSON\r\n\t\t */\r\n\t\tthis.sendJson = function(){\r\n\r\n\t\t\tvar formData = luga.form.toJson(self.config.formNode, true);\r\n\r\n\t\t\tif(self.config.before !== null){\r\n\t\t\t\thandleBefore();\r\n\t\t\t}\r\n\r\n\t\t\tjQuery.ajax({\r\n\t\t\t\tcontentType: \"application/json\",\r\n\t\t\t\tdata: JSON.stringify(formData),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"X-Requested-With\": luga.ajaxform.CONST.USER_AGENT\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown){\r\n\t\t\t\t\thandleError(textStatus, jqXHR, errorThrown);\r\n\t\t\t\t},\r\n\t\t\t\tmethod: self.config.method,\r\n\t\t\t\tsuccess: function(response, textStatus, jqXHR){\r\n\t\t\t\t\thandleSuccess(textStatus, jqXHR);\r\n\t\t\t\t},\r\n\t\t\t\ttimeout: self.config.timeout,\r\n\t\t\t\turl: self.config.action\r\n\t\t\t});\r\n\r\n\t\t\tif(self.config.after !== null){\r\n\t\t\t\thandleAfter();\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Attach form handlers to onSubmit events\r\n\t */\r\n\tluga.ajaxform.initForms = function(){\r\n\t\tjQuery(luga.ajaxform.CONST.FORM_SELECTOR).each(function(index, item){\r\n\t\t\tvar formNode = jQuery(item);\r\n\t\t\tformNode.submit(function(event){\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tvar formHandler = new luga.ajaxform.Sender({\r\n\t\t\t\t\tformNode: formNode\r\n\t\t\t\t});\r\n\t\t\t\tformHandler.send();\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tjQuery(document).ready(function(){\r\n\t\tluga.ajaxform.initForms();\r\n\t});\r\n\r\n}());"],"sourceRoot":"."}