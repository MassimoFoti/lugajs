/*! 
Luga JS 0.9.7 2018-04-08T06:53:41.440Z
http://www.lugajs.org
Copyright 2013-2018 Massimo Foti (massimo@massimocorner.com)
Licensed under the Apache License, Version 2.0 | http://www.apache.org/licenses/LICENSE-2.0
 */
if("undefined"==typeof luga&&(window.luga={}),function(){"use strict";luga.namespace=function(ns,rootObject){const parts=ns.split(".");void 0===rootObject&&(rootObject=window);for(let i=0;i<parts.length;i++)void 0===rootObject[parts[i]]&&(rootObject[parts[i]]={}),rootObject=rootObject[parts[i]];return rootObject},luga.namespace("luga.common"),luga.common.version="0.9.7",luga.extend=function(baseFunc,func,args){baseFunc.apply(func,args)},luga.isPlainObject=function(obj){if("[object Object]"!==Object.prototype.toString.call(obj))return!1;const proto=Object.getPrototypeOf(obj);if(null===proto)return!0;const constructor=Object.prototype.hasOwnProperty.call(proto,"constructor")&&proto.constructor;return!1!==constructor&&(typeof("function"===constructor)&&Function.toString.call(constructor)===Function.toString.call(Object))},luga.lookupFunction=function(path){if(!path)return;const reference=luga.lookupProperty(window,path);return"function"===luga.type(reference)?reference:void 0},luga.lookupProperty=function(object,path){if(!object||!path)return;if(void 0!==object[path])return object[path];let parts=path.split(".");for(;parts.length>0;){const part=parts.shift();if(void 0!==object[part]){if(0===parts.length)return object[part];object=object[part]}}},luga.merge=function(target,source){for(let x in source)!0===source.hasOwnProperty(x)&&(target[x]=source[x])},luga.setProperty=function(object,path,value){const parts=path.split(".");for(1===parts.length&&(object[path]=value);parts.length>0;){let part=parts.shift();if(void 0!==object[part]){if(0===parts.length){object[part]=value;break}object=object[part]}else parts.length>0?(object[part]={},object=object[part]):object[part]=value}},luga.TO_QUERY_STRING_CONST={ERROR_INPUT:"luga.toQueryString: Can serialize only plain objects"},luga.toQueryString=function(input){if(!1===luga.isPlainObject(input))throw luga.TO_QUERY_STRING_CONST.ERROR_INPUT;let str="";for(let x in input)!0===Array.isArray(input[x])?input[x].forEach(function(element){str=appendQueryString(str,x,element)}):str=appendQueryString(str,x,input[x]);return str};const class2type={};["Array","Boolean","Date","Error","Function","Number","Object","RegExp","String","Symbol"].forEach(function(element){class2type["[object "+element+"]"]=element.toLowerCase()}),luga.type=function(obj){if(null===obj)return"null";const rawType=typeof obj;if("object"===rawType||"function"===rawType){const stringType=Object.prototype.toString.call(obj);return class2type[stringType]}return rawType},luga.NOTIFIER_CONST={ERROR_MESSAGES:{NOTIFIER_ABSTRACT:"It's forbidden to use luga.Notifier directly, it must be used as a base class instead",INVALID_GENERIC_OBSERVER_PARAMETER:"addObserver(): observer parameter must be an object",INVALID_EVENT_OBSERVER_PARAMETER:"addObserver(): eventName and methodName must be strings",INVALID_DATA_PARAMETER:"notifyObserver(): data parameter is required and must be an object"}},luga.Notifier=function(){if(this.constructor===luga.Notifier)throw luga.NOTIFIER_CONST.ERROR_MESSAGES.NOTIFIER_ABSTRACT;this.observers=[],this.eventObservers={};this.addObserver=function(observer,eventName,methodName){if("object"!==luga.type(observer))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_GENERIC_OBSERVER_PARAMETER;if(1===arguments.length&&this.observers.push(observer),3===arguments.length){if("string"!==luga.type(eventName)||"string"!==luga.type(methodName))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_EVENT_OBSERVER_PARAMETER;const eventMap={observer:observer,methodName:methodName};void 0===this.eventObservers[eventName]?this.eventObservers[eventName]=[eventMap]:-1===findObserverIndex(this.eventObservers[eventName],eventMap)&&this.eventObservers[eventName].push(eventMap)}};const findObserverIndex=function(eventArray,eventMap){for(let i=0;i<eventArray.length;i++){const currentMap=eventArray[i];if(currentMap.observer===eventMap.observer&&currentMap.methodName===eventMap.methodName)return i}return-1};this.notifyObservers=function(eventName,payload){if("object"!==luga.type(payload))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_DATA_PARAMETER;const genericMethod=function(eventName){let str="on";return str+=eventName.charAt(0).toUpperCase(),str+=eventName.substring(1),str+="Handler"}(eventName);this.observers.forEach(function(element){void 0!==element[genericMethod]&&"function"===luga.type(element[genericMethod])&&element[genericMethod](payload)});const eventObservers=this.eventObservers[eventName];void 0!==eventObservers&&eventObservers.forEach(function(element){"function"===luga.type(element.observer[element.methodName])&&element.observer[element.methodName](payload)})},this.removeObserver=function(observer,eventName,methodName){if(1===arguments.length)for(let i=0;i<this.observers.length;i++)if(this.observers[i]===observer){this.observers.splice(i,1);break}if(3===arguments.length&&void 0!==this.eventObservers[eventName]){const eventMap={observer:observer,methodName:methodName},index=findObserverIndex(this.eventObservers[eventName],eventMap);-1!==index&&(this.eventObservers[eventName].splice(index,1),0===this.eventObservers[eventName].length&&delete this.eventObservers[eventName])}}},luga.namespace("luga.dom"),luga.dom.delegateEvent=function(node,eventType,selector,callback){node.addEventListener(eventType,function(event){const currentElement=event.target;!0===luga.dom.nodeMatches(currentElement,selector)&&callback(event,currentElement)})},luga.dom.nodeMatches=function(node,selector){let methodName="matches";return void 0===node.matches&&void 0!==node.msMatchesSelector&&(methodName="msMatchesSelector"),node[methodName](selector)},luga.dom.ready=function(fn){document.addEventListener("DOMContentLoaded",fn)};const getIteratorInstance=function(type,rootNode,filterFunc){const filter_acceptNode=function(node){return void 0!==filterFunc&&!1===filterFunc(node)?NodeFilter.FILTER_SKIP:NodeFilter.FILTER_ACCEPT},safeFilter=filter_acceptNode;return safeFilter.acceptNode=filter_acceptNode,"TreeWalker"===type?document.createTreeWalker(rootNode,NodeFilter.SHOW_ELEMENT,safeFilter,!1):document.createNodeIterator(rootNode,NodeFilter.SHOW_ELEMENT,safeFilter,!1)};luga.namespace("luga.dom.nodeIterator"),luga.dom.nodeIterator.getInstance=function(rootNode,filterFunc){return getIteratorInstance("NodeIterator",rootNode,filterFunc)},luga.namespace("luga.dom.treeWalker"),luga.dom.treeWalker.getInstance=function(rootNode,filterFunc){return getIteratorInstance("TreeWalker",rootNode,filterFunc)},luga.namespace("luga.form"),luga.form.CONST={FIELD_SELECTOR:"input,select,textarea",FAKE_INPUT_TYPES:{fieldset:!0,reset:!0},MESSAGES:{MISSING_FORM:"Unable to load form"}},luga.form.toMap=function(rootNode,demoronize){if(null===rootNode)throw luga.form.CONST.MESSAGES.MISSING_FORM;const map={},fields=luga.form.utils.getChildFields(rootNode);for(let i=0;i<fields.length;i++){const element=fields[i];if(!0===luga.form.utils.isSuccessfulField(element)){const fieldName=element.getAttribute("name");let fieldValue=null;switch(element.type){case"select-multiple":fieldValue=getMultiSelectValue(element);break;case"checkbox":case"radio":!0===element.checked&&(fieldValue=element.value);break;default:fieldValue=element.value}null!==fieldValue&&(!0===demoronize&&(fieldValue=luga.string.demoronize(fieldValue)),void 0===map[fieldName]?map[fieldName]=fieldValue:!0===Array.isArray(map[fieldName])?map[fieldName].push(fieldValue):map[fieldName]=[map[fieldName],fieldValue])}}return map};const getMultiSelectValue=function(node){const fieldValue=[],options=node.querySelectorAll("option:checked");for(let i=0;i<options.length;i++)fieldValue.push(options[i].value);return fieldValue};luga.form.toJson=function(rootNode){const flatData=luga.form.toMap(rootNode),jsonData={};for(let x in flatData)luga.setProperty(jsonData,x,flatData[x]);return jsonData},luga.form.toQueryString=function(rootNode,demoronize){if(null===rootNode)throw luga.form.CONST.MESSAGES.MISSING_FORM;let str="";const fields=luga.form.utils.getChildFields(rootNode);for(let i=0;i<fields.length;i++){const element=fields[i];if(!0===luga.form.utils.isSuccessfulField(element)){const fieldName=element.getAttribute("name");switch(element.type){case"select-multiple":const multiValues=getMultiSelectValue(element);for(let j=0;j<multiValues.length;j++)str=appendQueryString(str,fieldName,multiValues[i],demoronize);break;case"checkbox":case"radio":!0===element.checked&&(str=appendQueryString(str,fieldName,element.value,demoronize));break;default:str=appendQueryString(str,fieldName,element.value,demoronize)}}}return str};const appendQueryString=function(str,fieldName,fieldValue,demoronize){return""!==str&&(str+="&"),str+=encodeURIComponent(fieldName),str+="=",str+=!0===demoronize?encodeURIComponent(luga.string.demoronize(fieldValue)):encodeURIComponent(fieldValue)};luga.namespace("luga.form.utils"),luga.form.utils.isSuccessfulField=function(fieldNode){return!1!==luga.form.utils.isInputField(fieldNode)&&(!0!==fieldNode.disabled&&null!==fieldNode.getAttribute("name"))},luga.form.utils.isInputField=function(fieldNode){return void 0!==fieldNode.type&&!0!==luga.form.CONST.FAKE_INPUT_TYPES[fieldNode.type]},luga.form.utils.getFieldGroup=function(name,rootNode){void 0===rootNode&&(rootNode=document);const selector="input[name='"+name+"']",nodes=rootNode.querySelectorAll(selector);return Array.prototype.slice.call(nodes)},luga.form.utils.getChildFields=function(rootNode){const fields=[],nodes=rootNode.querySelectorAll(luga.form.CONST.FIELD_SELECTOR);for(let i=0;i<nodes.length;i++){const element=nodes[i];!0===luga.form.utils.isInputField(element)&&fields.push(element)}return fields},luga.namespace("luga.localStorage"),luga.localStorage.retrieve=function(root,path){return luga.lookupProperty(getRootState(root),path.toString())},luga.localStorage.persist=function(root,path,value){const json=getRootState(root);luga.setProperty(json,path.toString(),value),setRootState(root,json)};const setRootState=function(root,json){localStorage.setItem(root,JSON.stringify(json))},getRootState=function(root){const rootJson=localStorage.getItem(root);return null===rootJson?{}:JSON.parse(rootJson)};luga.namespace("luga.string"),luga.string.demoronize=function(str){return str=(str=(str=(str=(str=(str=(str=(str=(str=(str=(str=(str=str.replace(new RegExp(String.fromCharCode(710),"g"),"^")).replace(new RegExp(String.fromCharCode(732),"g"),"~")).replace(new RegExp(String.fromCharCode(8216),"g"),"'")).replace(new RegExp(String.fromCharCode(8217),"g"),"'")).replace(new RegExp(String.fromCharCode(8220),"g"),'"')).replace(new RegExp(String.fromCharCode(8221),"g"),'"')).replace(new RegExp(String.fromCharCode(8211),"g"),"-")).replace(new RegExp(String.fromCharCode(8212),"g"),"--")).replace(new RegExp(String.fromCharCode(8218),"g"),",")).replace(new RegExp(String.fromCharCode(8222),"g"),",,")).replace(new RegExp(String.fromCharCode(8226),"g"),"*")).replace(new RegExp(String.fromCharCode(8230),"g"),"...")},luga.string.format=function(str,args){let pattern=null;if(!0===Array.isArray(args))for(let i=0;i<args.length;i++)pattern=new RegExp("\\{"+i+"\\}","g"),str=str.replace(pattern,args[i]);if(!0===luga.isPlainObject(args))for(let x in args)pattern=new RegExp("\\{"+x+"\\}","g"),str=str.replace(pattern,args[x]);return str},luga.string.queryToMap=function(str){const map={};if("?"===str.charAt(0)&&(str=str.substring(1)),0===str.length)return map;const parts=str.split("&");for(let i=0;i<parts.length;i++){const tokens=parts[i].split("="),fieldName=decodeURIComponent(tokens[0]);let fieldValue="";2===tokens.length&&(fieldValue=decodeURIComponent(tokens[1])),void 0===map[fieldName]?map[fieldName]=fieldValue:!0===Array.isArray(map[fieldName])?map[fieldName].push(fieldValue):map[fieldName]=[map[fieldName],fieldValue]}return map};const propertyPattern=new RegExp("\\{([^}]*)}","g");luga.string.populate=function(str,obj){if(!0===luga.isPlainObject(obj)){let results;for(;null!==(results=propertyPattern.exec(str));){const property=luga.lookupProperty(obj,results[1]);if(void 0!==property){const pattern=new RegExp(results[0],"g");str=str.replace(pattern,property),propertyPattern.test(str)}}}return str},luga.namespace("luga.xhr"),luga.XHR_CONST={POST_CONTENT_TYPE:"application/x-www-form-urlencoded"},luga.xhr.Request=function(options){const config={method:"GET",success:function(res){console.debug(res)},error:function(res){console.debug(res)},timeout:5e3,async:!0,cache:!0,headers:[],requestedWith:"XMLHttpRequest",contentType:"text/plain"};void 0!==options&&luga.merge(config,options),"POST"===config.method.toUpperCase()&&(config.contentType=luga.XHR_CONST.POST_CONTENT_TYPE);const self=this;self.xhr=new XMLHttpRequest;const assembleResponse=function(){return{status:self.xhr.status,statusText:self.xhr.statusText,responseText:self.xhr.responseText,responseType:self.xhr.responseType,responseXML:self.xhr.responseXML,headers:function(str){const headers=str.split("\r\n");return headers.pop(),headers.map(function(item){const tokens=item.split(":"),ret={header:tokens[0]};return void 0!==tokens[1]&&(ret.value=tokens[1].substring(1)),ret})}(self.xhr.getAllResponseHeaders())}},checkReadyState=function(){if(4===self.xhr.readyState){const httpStatus=self.xhr.status;httpStatus>=200&&httpStatus<=300||304===httpStatus?config.success(assembleResponse()):config.error(assembleResponse())}};this.abort=function(){self.xhr.abort()},this.isRequestPending=function(){return 4!==self.xhr.readyState},this.send=function(url,params){void 0===params&&(params=null),url=function(url,params){let suffix="";return!1===config.cache&&(suffix+="_anti-cache="+Date.now()+"&"),null!==params&&"GET"===config.method.toUpperCase()&&(suffix+=params),""!==suffix&&(-1!==url.indexOf("?")?url+="&":url+="?"),url+suffix}(url,params),self.xhr.open(config.method,url,config.async),function(url){self.xhr.onreadystatechange=checkReadyState,self.xhr.timeout=config.timeout,self.xhr.setRequestHeader("Content-Type",config.contentType),"http"!==url.substring(0,4)&&self.xhr.setRequestHeader("X-Requested-With",config.requestedWith),config.headers.forEach(function(element){self.xhr.setRequestHeader(element.name,element.value)})}(url),self.xhr.send(params)}}}(),"undefined"==typeof luga)throw"Unable to find Luga JS Common";if(function(){"use strict";const isNumeric=function(input){return!1===isNaN(parseFloat(input))&&!0===isFinite(input)};luga.namespace("luga.validator"),luga.namespace("luga.validator.handlers"),luga.validator.handlers.errorAlert=function(formNode,validators){let errorMsg="",focusGiven=!1;for(let i=0;i<validators.length;i++)errorMsg+=validators[i].message+"\n",!1===focusGiven&&validators[i].getFocus&&(validators[i].getFocus(),focusGiven=!0);""!==errorMsg&&alert(errorMsg)},luga.validator.handlers.errorBox=function(formNode,validators){if(0===validators.length)return void luga.validator.utils.removeDisplayBox(formNode);let focusGiven=!1,htmlStr="<ul>";for(let i=0;i<validators.length;i++)htmlStr+="<li><em>"+validators[i].name+": </em> "+validators[i].message+"</li>",!1===focusGiven&&validators[i].getFocus&&(validators[i].getFocus(),focusGiven=!0);htmlStr+="</ul>",luga.validator.utils.displayErrorMessage(formNode,htmlStr)},luga.validator.CONST={FORM_SELECTOR:"form[data-lugavalidator-validate]",RULE_PREFIX:"data-lugavalidator-",DEFAULT_DATE_PATTERN:"YYYY-MM-DD",CUSTOM_ATTRIBUTES:{VALIDATE:"data-lugavalidator-validate",ERROR:"data-lugavalidator-error",BEFORE:"data-lugavalidator-before",AFTER:"data-lugavalidator-after",BLOCK_SUBMIT:"data-lugavalidator-blocksubmit",MESSAGE:"data-lugavalidator-message",ERROR_CLASS:"data-lugavalidator-errorclass",REQUIRED:"data-lugavalidator-required",PATTERN:"data-lugavalidator-pattern",MIN_LENGTH:"data-lugavalidator-minlength",MAX_LENGTH:"data-lugavalidator-maxlength",MIN_NUMBER:"data-lugavalidator-minnumber",MAX_NUMBER:"data-lugavalidator-maxnumber",DATE_PATTERN:"data-lugavalidator-datepattern",MIN_DATE:"data-lugavalidator-mindate",MAX_DATE:"data-lugavalidator-maxdate",EQUAL_TO:"data-lugavalidator-equalto",MIN_CHECKED:"data-lugavalidator-minchecked",MAX_CHECKED:"data-lugavalidator-maxchecked",INVALID_INDEX:"data-lugavalidator-invalidindex",INVALID_VALUE:"data-lugavalidator-invalidvalue",DISABLED_MESSAGE:"data-lugavalidator-disabledlabel"},MESSAGES:{MISSING_FORM:"luga.validator was unable to load form",MISSING_FIELD:"luga.validator was unable to load field",MISSING_FUNCTION:"luga.validator was unable to find a function named: {0}",BASE_VALIDATOR_ABSTRACT:"luga.validator.BaseFieldValidator is an abstract class",GROUP_VALIDATOR_ABSTRACT:"luga.validator.BaseGroupValidator is an abstract class",FIELD_CANT_BE_VALIDATED:"This field can't be validated",PATTERN_NOT_FOUND:"luga.validator failed to retrieve pattern: {0}",INVALID_INDEX_PARAMETER:"data-lugavalidator-invalidindex accept only numbers",MISSING_EQUAL_TO_FIELD:"data-lugavalidator-equalto was unable to find field with id = {0}"},HANDLERS:{FORM_ERROR:"luga.validator.handlers.errorAlert"}},luga.validator.FormValidator=function(options){if(null===options.formNode)throw luga.validator.CONST.MESSAGES.MISSING_FORM;this.config={blocksubmit:options.formNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.BLOCK_SUBMIT)||"true",error:options.formNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR)||luga.validator.CONST.HANDLERS.FORM_ERROR,before:options.formNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.BEFORE)||null,after:options.formNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.AFTER)||null},luga.merge(this.config,options),this.config.blocksubmit=JSON.parse(this.config.blocksubmit);const self=this;self.validators=[],self.dirtyValidators=[],this.init=function(){self.validators=[],self.dirtyValidators=[];const formDom=self.config.formNode;for(let i=0;i<formDom.elements.length;i++)!0===luga.form.utils.isInputField(formDom.elements[i])&&self.validators.push(luga.validator.fieldValidatorFactory.getInstance({fieldNode:formDom.elements[i],formNode:self.config.formNode}))},this.validate=function(event){self.init(),self.before(self.config.formNode,event);const executedValidators={};for(let i=0;i<self.validators.length;i++)if(void 0!==self.validators[i]&&void 0!==self.validators[i].validate){if(void 0!==executedValidators[self.validators[i].name])continue;!0===self.validators[i].validate()&&self.dirtyValidators.push(self.validators[i]),executedValidators[self.validators[i].name]=!0}return!1===self.isValid()?(self.error(),void 0!==event&&event.preventDefault()):(!0===this.config.blocksubmit&&self.disableSubmit(),self.after(self.config.formNode,event)),self.dirtyValidators},this.disableSubmit=function(){const buttons=self.config.formNode.querySelectorAll("input[type=submit]");for(let i=0;i<buttons.length;i++){const buttonNode=buttons[i];null!==buttonNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.DISABLED_MESSAGE)&&(buttonNode.value=buttonNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.DISABLED_MESSAGE))}},this.isValid=function(){return 0===self.dirtyValidators.length},this.before=function(formNode,event){if(null!==self.config.before){const callBack=luga.lookupFunction(self.config.before);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.before]);callBack.apply(null,[self.config.formNode,event])}},this.error=function(){const callBack=luga.lookupFunction(self.config.error);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.error]);callBack.apply(null,[self.config.formNode,self.dirtyValidators])},this.after=function(formNode,event){if(null!==self.config.after){const callBack=luga.lookupFunction(self.config.after);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.after]);callBack.apply(null,[self.config.formNode,event])}}},luga.namespace("luga.validator.fieldValidatorFactory"),luga.validator.fieldValidatorFactory.getInstance=function(options){this.config={},luga.merge(this.config,options);if(!1===luga.form.utils.isInputField(this.config.fieldNode))return null;switch(this.config.fieldNode.type){case"select-multiple":case"select-one":return new luga.validator.SelectValidator(this.config);case"radio":return new luga.validator.RadioValidator({inputGroup:luga.form.utils.getFieldGroup(this.config.fieldNode.name,this.config.formNode)});case"checkbox":return new luga.validator.CheckboxValidator({inputGroup:luga.form.utils.getFieldGroup(this.config.fieldNode.name,this.config.formNode)});default:return new luga.validator.TextValidator(this.config)}},luga.validator.BaseFieldValidator=function(options){if(this.constructor===luga.validator.BaseFieldValidator)throw luga.validator.CONST.MESSAGES.BASE_VALIDATOR_ABSTRACT;this.config={message:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)||"",errorclass:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS)||""},luga.merge(this.config,options),this.node=options.fieldNode,this.message=this.config.message,this.name="",null!==this.node.getAttribute("name")?this.name=this.node.getAttribute("name"):null!==this.node.getAttribute("id")&&(this.name=this.node.getAttribute("id")),this.isValid=function(){},this.flagInvalid=function(){""!==this.config.errorclass&&this.node.classList.add(this.config.errorclass),this.node.setAttribute("title",this.message)},this.flagValid=function(){""!==this.config.errorclass&&this.node.classList.remove(this.config.errorclass),this.node.removeAttribute("title")},this.validate=function(){return!0===this.node.disabled?(this.flagValid(),!1):!1===this.isValid()?(this.flagInvalid(),!0):(this.flagValid(),!1)}},luga.validator.TextValidator=function(options){if(null===options.fieldNode)throw luga.validator.CONST.MESSAGES.MISSING_FIELD;if(this.config={required:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED),pattern:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.PATTERN),minlength:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_LENGTH),maxlength:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_LENGTH),minnumber:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_NUMBER),maxnumber:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_NUMBER),datepattern:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.DATE_PATTERN)||luga.validator.CONST.DEFAULT_DATE_PATTERN,mindate:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_DATE),maxdate:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_DATE),equalto:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.EQUAL_TO)},luga.merge(this.config,options),luga.extend(luga.validator.BaseFieldValidator,this,[this.config]),void 0!==this.config.required)try{this.config.required=JSON.parse(this.config.required)}catch(e){}const self=this;self.node=options.fieldNode,self.type="text",this.getFocus=function(){try{self.node.focus(),self.node.select()}catch(e){}},this.isEmpty=function(){return""===self.node.value},this.isRequired=function(){const requiredAtt=this.config.required;if(!0===requiredAtt)return!0;if(!1===requiredAtt||null===requiredAtt)return!1;const functionReference=luga.lookupFunction(requiredAtt);if(void 0!==functionReference)return functionReference.apply(null,[self.node]);throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[requiredAtt])},this.isValid=function(){if(self.isEmpty())return!0!==self.isRequired();for(let rule in luga.validator.rules)if(null!==self.node.getAttribute(luga.validator.CONST.RULE_PREFIX+rule)&&!1===luga.validator.rules[rule].apply(null,[self.node,self]))return!1;return!0}},luga.validator.SelectValidator=function(options){if(null===options.fieldNode)throw luga.validator.CONST.MESSAGES.MISSING_FIELD;this.config={invalidindex:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.INVALID_INDEX),invalidvalue:options.fieldNode.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.INVALID_VALUE)},luga.merge(this.config,options),luga.extend(luga.validator.BaseFieldValidator,this,[this.config]);const self=this;if(self.type="select",self.node=options.fieldNode,null!==self.config.invalidindex&&!1===isNumeric(self.config.invalidindex))throw luga.validator.CONST.MESSAGES.INVALID_INDEX_PARAMETER;let currentIndex=self.node.selectedIndex;-1===currentIndex&&(currentIndex=0),currentIndex=parseInt(currentIndex,10),this.isValid=function(){return currentIndex!==parseInt(self.config.invalidindex,10)&&self.node.value!==self.config.invalidvalue}},luga.validator.BaseGroupValidator=function(options){if(this.constructor===luga.validator.BaseGroupValidator)throw luga.validator.CONST.MESSAGES.GROUP_VALIDATOR_ABSTRACT;this.config={},luga.merge(this.config,options),this.inputGroup=this.config.inputGroup,this.config.inputGroup.length>0&&null!==this.config.inputGroup[0].getAttribute("name")&&(this.name=this.config.inputGroup[0].getAttribute("name")),this.message="",this.errorclass="";for(let i=0;i<this.inputGroup.length;i++){const field=this.inputGroup[i];null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)&&(this.message=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)),null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS)&&(this.errorclass=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS))}this.isValid=function(){},this.flagInvalid=function(){if(""!==this.errorclass)for(let i=0;i<this.inputGroup.length;i++){const field=this.inputGroup[i];field.classList.add(this.errorclass),field.setAttribute("title",this.message)}},this.flagValid=function(){if(""!==this.errorclass)for(let i=0;i<this.inputGroup.length;i++){const field=this.inputGroup[i];field.classList.remove(this.errorclass),field.removeAttribute("title")}},this.validate=function(){return!0===this.isValid()?(this.flagValid(),!1):(this.flagInvalid(),!0)}},luga.validator.RadioValidator=function(options){this.config={},luga.merge(this.config,options),luga.extend(luga.validator.BaseGroupValidator,this,[this.config]),this.type="radio",this.isRequired=function(){let requiredFlag=!1;const fieldGroup=this.inputGroup;for(let i=0;i<fieldGroup.length;i++){const field=fieldGroup[i];!1===field.disabled&&null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED)&&(requiredFlag=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED))}return requiredFlag},this.isValid=function(){if("true"===this.isRequired()){const fieldGroup=this.inputGroup;for(let i=0;i<fieldGroup.length;i++){if(!0===fieldGroup[i].checked)return!0}return!1}return!0}},luga.validator.CheckboxValidator=function(options){this.config={},luga.merge(this.config,options),luga.extend(luga.validator.BaseGroupValidator,this,[this.config]),this.type="checkbox",this.minchecked=0,this.maxchecked=this.config.inputGroup.length;for(let i=0;i<this.inputGroup.length;i++){const field=this.inputGroup[i];!1===field.disabled&&(null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_CHECKED)&&(this.minchecked=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_CHECKED)),null!==field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_CHECKED)&&(this.maxchecked=field.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_CHECKED)))}this.isValid=function(){let checkCounter=0;const fieldGroup=this.inputGroup;for(let i=0;i<fieldGroup.length;i++){const field=this.inputGroup[i];!1===field.disabled&&!0===field.checked&&checkCounter++}return checkCounter>=this.minchecked&&checkCounter<=this.maxchecked}},luga.namespace("luga.validator.rules"),luga.validator.rules.email=function(fieldNode,validator){const fieldValue=fieldNode.value,containsAt=-1!==fieldValue.indexOf("@"),containDot=-1!==fieldValue.indexOf(".");return!0===containsAt&&!0===containDot},luga.validator.rules.equalto=function(fieldNode,validator){const secondFieldNode=document.getElementById(validator.config.equalto);if(null===secondFieldNode)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_EQUAL_TO_FIELD,[validator.config.equalto]);return fieldNode.value===secondFieldNode.value},luga.validator.rules.datepattern=function(fieldNode,validator){return null!==luga.validator.dateStrToObj(fieldNode.value,validator.config.datepattern)},luga.validator.rules.maxdate=function(fieldNode,validator){const pattern=validator.config.datepattern,valueDate=luga.validator.dateStrToObj(fieldNode.value,pattern),maxDate=luga.validator.dateStrToObj(validator.config.maxdate,pattern);return null!==valueDate&&null!==maxDate&&valueDate<=maxDate},luga.validator.rules.mindate=function(fieldNode,validator){const pattern=validator.config.datepattern,valueDate=luga.validator.dateStrToObj(fieldNode.value,pattern),minDate=luga.validator.dateStrToObj(validator.config.mindate,pattern);return null!==valueDate&&null!==minDate&&valueDate>=minDate},luga.validator.rules.maxlength=function(fieldNode,validator){return!(fieldNode.value.length>validator.config.maxlength)},luga.validator.rules.minlength=function(fieldNode,validator){return!(fieldNode.value.length<validator.config.minlength)},luga.validator.rules.maxnumber=function(fieldNode,validator){return!1!==isNumeric(fieldNode.value)&&parseFloat(fieldNode.value)<=parseFloat(validator.config.maxnumber)},luga.validator.rules.minnumber=function(fieldNode,validator){return!1!==isNumeric(fieldNode.value)&&parseFloat(fieldNode.value)>=parseFloat(validator.config.minnumber)},luga.validator.rules.pattern=function(fieldNode,validator){const regExpObj=luga.validator.patterns[validator.config.pattern];if(void 0!==regExpObj)return regExpObj.test(fieldNode.value);throw luga.string.format(luga.validator.CONST.MESSAGES.PATTERN_NOT_FOUND,[validator.config.pattern])},luga.namespace("luga.validator.patterns"),luga.validator.patterns.lettersonly=new RegExp("^[a-zA-Z]*$"),luga.validator.patterns.alphanumeric=new RegExp("^\\w*$"),luga.validator.patterns.integer=new RegExp("^-?[1-9][0-9]*$"),luga.validator.patterns.positiveinteger=new RegExp("^\\d\\d*$"),luga.validator.patterns.number=new RegExp("^-?(\\d\\d*\\.\\d*$)|(^-?\\d\\d*$)|(^-?\\.\\d\\d*$)"),luga.validator.patterns.filepath_pdf=new RegExp("[\\w_]*\\.([pP][dD][fF])$"),luga.validator.patterns.filepath_jpg=new RegExp("[\\w_]*\\.([jJ][pP][eE]?[gG])$"),luga.validator.patterns.filepath_zip=new RegExp("[\\w_]*\\.([zZ][iI][pP])$"),luga.validator.patterns.filepath=new RegExp("[\\w_]*\\.\\w{3}$"),luga.validator.patterns.time=new RegExp("([0-1][0-9]|2[0-3]):[0-5][0-9]$"),luga.namespace("luga.validator.dateSpecs"),luga.validator.createDateSpecObj=function(rex,year,month,day,separator){const infoObj={};return infoObj.rex=new RegExp(rex),infoObj.y=year,infoObj.m=month,infoObj.d=day,infoObj.s=separator,infoObj},luga.validator.dateStrToObj=function(dateStr,dateSpecKey){const dateSpecObj=luga.validator.dateSpecs[dateSpecKey];if(void 0!==dateSpecObj){if(!dateSpecObj.rex.test(dateStr))return null;const dateBits=dateStr.split(dateSpecObj.s),testDate=new Date(dateBits[dateSpecObj.y],dateBits[dateSpecObj.m]-1,dateBits[dateSpecObj.d]),yearMatches=testDate.getFullYear()===parseInt(dateBits[dateSpecObj.y],10),monthMatches=testDate.getMonth()===parseInt(dateBits[dateSpecObj.m]-1,10),dayMatches=testDate.getDate()===parseInt(dateBits[dateSpecObj.d],10);return!0===yearMatches&&!0===monthMatches&&!0===dayMatches?testDate:null}return null},luga.validator.dateSpecs["YYYY-MM-DD"]=luga.validator.createDateSpecObj("^([0-9]{4})-([0-1][0-9])-([0-3][0-9])$",0,1,2,"-"),luga.validator.dateSpecs["YYYY-M-D"]=luga.validator.createDateSpecObj("^([0-9]{4})-([0-1]?[0-9])-([0-3]?[0-9])$",0,1,2,"-"),luga.validator.dateSpecs["MM.DD.YYYY"]=luga.validator.createDateSpecObj("^([0-1][0-9]).([0-3][0-9]).([0-9]{4})$",2,0,1,"."),luga.validator.dateSpecs["M.D.YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9]).([0-3]?[0-9]).([0-9]{4})$",2,0,1,"."),luga.validator.dateSpecs["MM/DD/YYYY"]=luga.validator.createDateSpecObj("^([0-1][0-9])/([0-3][0-9])/([0-9]{4})$",2,0,1,"/"),luga.validator.dateSpecs["M/D/YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9])/([0-3]?[0-9])/([0-9]{4})$",2,0,1,"/"),luga.validator.dateSpecs["MM-DD-YYYY"]=luga.validator.createDateSpecObj("^([0-21][0-9])-([0-3][0-9])-([0-9]{4})$",2,0,1,"-"),luga.validator.dateSpecs["M-D-YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9])-([0-3]?[0-9])-([0-9]{4})$",2,0,1,"-"),luga.validator.dateSpecs["DD.MM.YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9]).([0-1][0-9]).([0-9]{4})$",2,1,0,"."),luga.validator.dateSpecs["D.M.YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9]).([0-1]?[0-9]).([0-9]{4})$",2,1,0,"."),luga.validator.dateSpecs["DD/MM/YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9])/([0-1][0-9])/([0-9]{4})$",2,1,0,"/"),luga.validator.dateSpecs["D/M/YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9])/([0-1]?[0-9])/([0-9]{4})$",2,1,0,"/"),luga.validator.dateSpecs["DD-MM-YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9])-([0-1][0-9])-([0-9]{4})$",2,1,0,"-"),luga.validator.dateSpecs["D-M-YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9])-([0-1]?[0-9])-([0-9]{4})$",2,1,0,"-"),luga.validator.initForms=function(rootNode){void 0===rootNode&&(rootNode=document.body);const nodes=rootNode.querySelectorAll(luga.validator.CONST.FORM_SELECTOR);for(let i=0;i<nodes.length;i++){const element=nodes[i];"true"===element.getAttribute(luga.validator.CONST.CUSTOM_ATTRIBUTES.VALIDATE)&&element.addEventListener("submit",function(event){new luga.validator.FormValidator({formNode:element}).validate(event)},!1)}},luga.namespace("luga.validator.utils"),luga.validator.utils.CONST={CSS_CLASSES:{MESSAGE:"luga-message",ERROR_MESSAGE:"luga-error-message"},MSG_BOX_ID:"lugaMessageBox"};const generateBoxId=function(node){let boxId=luga.validator.utils.CONST.MSG_BOX_ID;return void 0!==node&&(null===node.getAttribute("id")?boxId+=node.getAttribute("id"):null!==node.getAttribute("name")&&(boxId+=node.getAttribute("name"))),boxId};luga.validator.utils.removeDisplayBox=function(node){const boxId=generateBoxId(node),oldBox=document.getElementById(boxId);null!==oldBox&&(oldBox.outerHTML="")},luga.validator.utils.displayMessage=function(node,html){return luga.validator.utils.displayBox(node,html,luga.validator.utils.CONST.CSS_CLASSES.MESSAGE)},luga.validator.utils.displayErrorMessage=function(node,html){return luga.validator.utils.displayBox(node,html,luga.validator.utils.CONST.CSS_CLASSES.ERROR_MESSAGE)},luga.validator.utils.displayBox=function(node,html,cssClass){if(void 0===node)return;void 0===cssClass&&(cssClass=luga.validator.utils.CONST.CSS_CLASSES.MESSAGE);const boxId=generateBoxId(node),box=document.createElement("div");box.setAttribute("id",boxId),box.classList.add(cssClass),box.innerHTML=html;const oldBox=document.getElementById(boxId);return null!==oldBox?oldBox.outerHTML=box.outerHTML:node.insertBefore(box,null),box},luga.namespace("luga.validator.api"),luga.validator.api.validateForm=function(options){const formValidator=new luga.validator.FormValidator(options);return formValidator.validate(),formValidator.isValid()},luga.validator.api.validateField=function(options){if(!1===luga.form.utils.isInputField(options.fieldNode))throw luga.validator.CONST.MESSAGES.FIELD_CANT_BE_VALIDATED;void 0===options.error&&(options.error=luga.validator.CONST.HANDLERS.FORM_ERROR);const dirtyValidators=[],fieldValidator=luga.validator.fieldValidatorFactory.getInstance(options);if(fieldValidator.validate(null),!0!==fieldValidator.isValid()){const callBack=luga.lookupFunction(options.error);dirtyValidators.push(fieldValidator),callBack(options.fieldNode,dirtyValidators)}return fieldValidator.isValid()},luga.validator.api.validateFields=function(options){options.error||(options.error=luga.validator.CONST.HANDLERS.FORM_ERROR);const validators=[],executedValidators={},dirtyValidators=[];for(let i=0;i<options.fields.length;i++)!0===luga.form.utils.isInputField(options.fields[i])&&validators.push(luga.validator.fieldValidatorFactory.getInstance({fieldNode:options.fields[i]}));for(let j=0;j<validators.length;j++)if(validators[j]&&validators[j].validate){if(void 0!==executedValidators[validators[j].name])continue;!0===validators[j].validate()&&dirtyValidators.push(validators[j]),executedValidators[validators[j].name]=!0}if(dirtyValidators.length>0){luga.lookupFunction(options.error).apply(null,[options.formNode,dirtyValidators])}return 0===dirtyValidators.length},luga.validator.api.validateChildFields=function(options){const fields=luga.form.utils.getChildFields(options.rootNode);return luga.validator.api.validateFields({fields:fields,error:options.error})},luga.dom.ready(function(){luga.validator.initForms()})}(),"undefined"==typeof luga)throw"Unable to find Luga JS Common";!function(){"use strict";luga.namespace("luga.data"),luga.data.dataSourceRegistry={},luga.data.CONST={COL_TYPES:["date","number","string"],EVENTS:{CURRENT_ROW_CHANGED:"currentRowChanged",DATA_CHANGED:"dataChanged",DATA_SORTED:"dataSorted",DATA_LOADING:"dataLoading",PRE_DATA_SORTED:"preDataSorted",STATE_CHANGED:"stateChanged",XHR_ERROR:"xhrError"},ERROR_MESSAGES:{DUPLICATED_UUID:"Unable to register dataSource. The uuuid was already used: {0}",INVALID_FILTER_PARAMETER:"Invalid filter. You must use a function as filter",INVALID_FILTER_ACTION:"Invalid action from a filter function. A filter must return either a plain object or null (undefined, primitives etc are not valid return values)",INVALID_UPDATER_PARAMETER:"Invalid updater. You must use a function as updater",INVALID_UPDATER_ACTION:"Invalid action from an updater function. An updater must return a plain object (null, undefined, primitives etc are not valid return values)",INVALID_STATE:"luga.data.utils.assembleStateDescription: Unsupported state: {0}"},PK_KEY:"lugaRowId",PK_KEY_PREFIX:"lugaPk_",XHR_TIMEOUT:1e4},luga.data.getDataSource=function(uuid){return void 0!==luga.data.dataSourceRegistry[uuid]?luga.data.dataSourceRegistry[uuid]:null},luga.data.setDataSource=function(uuid,dataSource){if(null!==luga.data.getDataSource(uuid))throw luga.string.format(luga.data.CONST.ERROR_MESSAGES.DUPLICATED_UUID,[uuid]);luga.data.dataSourceRegistry[uuid]=dataSource},luga.data.STATE={ERROR:"error",LOADING:"loading",READY:"ready"},luga.namespace("luga.data.utils"),luga.data.utils.assembleStateDescription=function(state){if(null!==state&&!1===luga.data.utils.isValidState(state))throw luga.string.format(luga.data.CONST.ERROR_MESSAGES.INVALID_STATE,[state]);return{state:state,isStateError:state===luga.data.STATE.ERROR,isStateLoading:state===luga.data.STATE.LOADING,isStateReady:state===luga.data.STATE.READY}},luga.data.utils.filter=function(rows,filter,dataset){if("function"!==luga.type(filter))throw luga.data.CONST.ERROR_MESSAGES.INVALID_FILTER_PARAMETER;const retRows=[];for(let i=0;i<rows.length;i++){const filteredRow=filter(rows[i],i,dataset);if(null!==filteredRow){if(!1===luga.isPlainObject(filteredRow))throw luga.data.CONST.ERROR_MESSAGES.INVALID_FILTER_ACTION;retRows.push(filteredRow)}}return retRows},luga.data.utils.update=function(rows,formatter,dataset){if("function"!==luga.type(formatter))throw luga.data.CONST.ERROR_MESSAGES.INVALID_UPDATER_ACTION;for(let i=0;i<rows.length;i++){const formattedRow=formatter(rows[i],i,dataset);if(!1===luga.isPlainObject(formattedRow))throw luga.data.CONST.ERROR_MESSAGES.INVALID_UPDATER_ACTION}},luga.data.utils.isValidState=function(state){for(let key in luga.data.STATE)if(luga.data.STATE[key]===state)return!0;return!1}}(),function(){"use strict";function getTextValue(node){const child=node.childNodes[0];if(3===child.nodeType||4===child.nodeType)return child.data}function nodeHasText(node){const child=node.childNodes[0];return null!==child&&null===child.nextSibling&&(3===child.nodeType||4===child.nodeType)}luga.namespace("luga.data.xml"),luga.data.xml.MIME_TYPE="application/xml",luga.data.xml.ATTRIBUTE_PREFIX="_",luga.data.xml.DOM_ACTIVEX_NAME="MSXML2.DOMDocument.6.0",luga.data.xml.evaluateXPath=function(node,path){const retArray=[];if(void 0!==window.XPathEvaluator){const result=(new XPathEvaluator).evaluate(path,node,null,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);let currentNode=result.iterateNext();for(;null!==currentNode;)retArray.push(currentNode),currentNode=result.iterateNext()}else if(void 0!==window.ActiveXObject){const selectedNodes=node.selectNodes(path);for(let i=0;i<selectedNodes.length;i++)retArray.push(selectedNodes[i])}return retArray},luga.data.xml.nodeToHash=function(node){const obj={};return function(node,obj){if(null===node.attributes||void 0===node.attributes)return;for(let i=0;i<node.attributes.length;i++){const attr=node.attributes[i];obj[luga.data.xml.ATTRIBUTE_PREFIX+attr.name]=attr.value}}(node,obj),function(node,obj){for(let i=0;i<node.childNodes.length;i++){const child=node.childNodes[i];if(1===child.nodeType){let isArray=!1;const tagName=child.nodeName;if(void 0!==obj[tagName]){if(obj[tagName].constructor!==Array){const curValue=obj[tagName];obj[tagName]=[],obj[tagName].push(curValue)}isArray=!0}if(!0===nodeHasText(child))obj[child.nodeName]=getTextValue(child);else{const childObj=luga.data.xml.nodeToHash(child);!0===isArray?obj[tagName].push(childObj):obj[tagName]=childObj}}}}(node,obj),obj},luga.data.xml.nodeToString=function(node){if(void 0!==window.ActiveXObject)return node.xml;return(new XMLSerializer).serializeToString(node,luga.data.xml.MIME_TYPE)},luga.data.xml.parseFromString=function(xmlStr){let xmlParser;if(void 0!==window.ActiveXObject){const xmlDOMObj=new ActiveXObject(luga.data.xml.DOM_ACTIVEX_NAME);return xmlDOMObj.async=!1,xmlDOMObj.setProperty("SelectionLanguage","XPath"),xmlDOMObj.loadXML(xmlStr),xmlDOMObj}return(xmlParser=new DOMParser).parseFromString(xmlStr,luga.data.xml.MIME_TYPE)}}(),function(){"use strict";luga.data.DataSet=function(options){const CONST_ERROR_MESSAGES={INVALID_COL_TYPE:"luga.DataSet.setColumnType(): Invalid type passed {0}",INVALID_UUID_PARAMETER:"luga.DataSet: uuid parameter is required",INVALID_FORMATTER_PARAMETER:"luga.DataSet: invalid formatter. You must use a function as formatter",INVALID_FILTER_PARAMETER:"luga.DataSet: invalid filter. You must use a function as filter",INVALID_PRIMITIVE:"luga.DataSet: records can be either an array of objects or a single object. Primitives are not accepted",INVALID_PRIMITIVE_ARRAY:"luga.DataSet: records can be either an array of name/value pairs or a single object. Array of primitives are not accepted",INVALID_ROW_PARAMETER:"luga.DataSet: invalid row parameter. No available record matches the given row",INVALID_ROW_ID_PARAMETER:"luga.DataSet: invalid rowId parameter",INVALID_ROW_INDEX_PARAMETER:"luga.DataSet: invalid parameter. Row index is out of range",INVALID_SORT_COLUMNS:"luga.DataSet.sort(): Unable to sort dataSet. You must supply one or more column name",INVALID_SORT_ORDER:"luga.DataSet.sort(): Unable to sort dataSet. Invalid sort order passed {0}",INVALID_STATE:"luga.DataSet: Unsupported state: {0}"};if(void 0===options.uuid)throw CONST_ERROR_MESSAGES.INVALID_UUID_PARAMETER;if(void 0!==options.formatter&&"function"!==luga.type(options.formatter))throw CONST_ERROR_MESSAGES.INVALID_FORMATTER_PARAMETER;if(void 0!==options.filter&&"function"!==luga.type(options.filter))throw CONST_ERROR_MESSAGES.INVALID_FILTER_PARAMETER;luga.extend(luga.Notifier,this);const self=this;this.uuid=options.uuid,this.records=[],this.recordsHash={},this.formatter=null,void 0!==options.formatter&&(this.formatter=options.formatter),this.filteredRecords=null,this.filter=null,this.state=null,this.currentRowId=null,this.columnTypes={},this.lastSortColumns=[],this.lastSortOrder="",luga.data.setDataSource(this.uuid,this);const applyFilter=function(){!0===hasFilter()&&(self.filteredRecords=luga.data.utils.filter(self.records,self.filter,self),self.resetCurrentRow())},hasFilter=function(){return null!==self.filter},hasFormatter=function(){return null!==self.formatter},selectAll=function(){return!0===hasFilter()?self.filteredRecords:self.records};this.clearFilter=function(){this.filter=null,this.filteredRecords=null,this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.delete=function(filter){if(void 0===filter)self.filteredRecords=null,self.records=[],self.recordsHash={};else{if("function"!==luga.type(filter))throw CONST_ERROR_MESSAGES.INVALID_FILTER_PARAMETER;const orig=this.records;for(let i=0;i<orig.length;i++)if(null===filter(orig[i],i,this)){const rowToDelete=orig[i];this.records.splice(i,1),delete this.recordsHash[rowToDelete[luga.data.CONST.PK_KEY]]}applyFilter()}this.resetCurrentRow(),this.setState(luga.data.STATE.READY),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.getColumnType=function(columnName){return void 0!==this.columnTypes[columnName]?this.columnTypes[columnName]:"string"},this.getContext=function(){const context={entities:self.select(),recordCount:self.getRecordsCount()},stateDesc=luga.data.utils.assembleStateDescription(self.getState());return luga.merge(context,stateDesc),context},this.getCurrentRow=function(){return this.getRowById(this.getCurrentRowId())},this.getCurrentRowId=function(){return this.currentRowId},this.getCurrentRowIndex=function(){const row=this.getCurrentRow();return this.getRowIndex(row)},this.getRecordsCount=function(){return selectAll().length},this.getRowById=function(rowId){const targetRow=this.recordsHash[rowId];return void 0===targetRow?null:!0===hasFilter()?-1!==this.filteredRecords.indexOf(targetRow)?targetRow:null:targetRow},this.getRowByIndex=function(index){let fetchedRow;if(void 0===(fetchedRow=!0===hasFilter()?this.filteredRecords[index]:this.records[index]))throw CONST_ERROR_MESSAGES.INVALID_ROW_INDEX_PARAMETER;return fetchedRow},this.getRowIndex=function(row){return!0===hasFilter()?this.filteredRecords.indexOf(row):this.records.indexOf(row)},this.getSortColumn=function(){return this.lastSortColumns&&this.lastSortColumns.length>0?this.lastSortColumns[0]:""},this.getSortOrder=function(){return this.lastSortOrder?this.lastSortOrder:""},this.getState=function(){return this.state},this.insert=function(records){let recordsHolder=[];if(!0===Array.isArray(records))recordsHolder=records;else{if(!1===luga.isPlainObject(records))throw CONST_ERROR_MESSAGES.INVALID_PRIMITIVE;recordsHolder.push(records)}for(let i=0;i<recordsHolder.length;i++){if(!1===luga.isPlainObject(recordsHolder[i]))throw CONST_ERROR_MESSAGES.INVALID_PRIMITIVE_ARRAY;const recordID=luga.data.CONST.PK_KEY_PREFIX+this.records.length;recordsHolder[i][luga.data.CONST.PK_KEY]=recordID,this.recordsHash[recordID]=recordsHolder[i],this.records.push(recordsHolder[i])}!0===hasFormatter()&&luga.data.utils.update(self.records,self.formatter,self),applyFilter(),this.resetCurrentRow(),this.setState(luga.data.STATE.READY),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.resetCurrentRow=function(){if(null!==this.currentRowId){if(null!==this.getRowById(this.currentRowId))return void this.setCurrentRowId(this.currentRowId)}this.resetCurrentRowToFirst()},this.resetCurrentRowToFirst=function(){if(!0===hasFilter())return null===this.filteredRecords||0===this.filteredRecords.length?void this.setCurrentRowId(null):void this.setCurrentRowId(this.filteredRecords[0][luga.data.CONST.PK_KEY]);this.records.length>0?this.setCurrentRowId(this.records[0][luga.data.CONST.PK_KEY]):this.setCurrentRowId(null)},this.select=function(filter){if(void 0===filter)return selectAll();if("function"!==luga.type(filter))throw CONST_ERROR_MESSAGES.INVALID_FILTER_PARAMETER;return luga.data.utils.filter(selectAll(),filter,self)},this.setColumnType=function(columnNames,columnType){!1===Array.isArray(columnNames)&&(columnNames=[columnNames]);for(let i=0;i<columnNames.length;i++){const colName=columnNames[i];if(-1===luga.data.CONST.COL_TYPES.indexOf(columnType))throw luga.string.format(CONST_ERROR_MESSAGES.INVALID_COL_TYPE,[colName]);this.columnTypes[colName]=columnType}},this.setCurrentRowId=function(rowId){if(this.currentRowId===rowId)return;const notificationData={oldRowId:this.getCurrentRowId(),oldRow:this.getRowById(this.currentRowId),currentRowId:rowId,currentRow:this.getRowById(rowId),dataSet:this};if(null===rowId&&null!==this.currentRowId)return this.currentRowId=null,void this.notifyObservers(luga.data.CONST.EVENTS.CURRENT_ROW_CHANGED,notificationData);if(null===this.getRowById(rowId))throw CONST_ERROR_MESSAGES.INVALID_ROW_ID_PARAMETER;this.currentRowId=rowId,this.notifyObservers(luga.data.CONST.EVENTS.CURRENT_ROW_CHANGED,notificationData)},this.setCurrentRow=function(row){const fetchedRowId=this.getRowIndex(row);if(-1===fetchedRowId)throw CONST_ERROR_MESSAGES.INVALID_ROW_PARAMETER;this.setCurrentRowId(luga.data.CONST.PK_KEY_PREFIX+fetchedRowId)},this.setCurrentRowIndex=function(index){this.setCurrentRow(this.getRowByIndex(index))},this.setFilter=function(filter){if("function"!==luga.type(filter))throw CONST_ERROR_MESSAGES.INVALID_FILTER_PARAMETER;this.filter=filter,applyFilter(),this.setState(luga.data.STATE.READY),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.setState=function(newState){if(!1===luga.data.utils.isValidState(newState))throw luga.string.format(CONST_ERROR_MESSAGES.INVALID_STATE,[newState]);const oldState=this.state;this.state=newState;const notificationData={oldState:oldState,currentState:this.state,dataSet:this};this.notifyObservers(luga.data.CONST.EVENTS.STATE_CHANGED,notificationData)},this.sort=function(columnNames,sortOrder){if(void 0===columnNames||null===columnNames)throw CONST_ERROR_MESSAGES.INVALID_SORT_COLUMNS;if(void 0===sortOrder&&(sortOrder=luga.data.sort.ORDER.TOG),!1===luga.data.sort.isValidSortOrder(sortOrder))throw luga.string.format(CONST_ERROR_MESSAGES.INVALID_SORT_ORDER,[sortOrder]);const sortColumns=assembleSortColumns(columnNames);sortOrder===luga.data.sort.ORDER.TOG&&(sortOrder=defineToggleSortOrder(sortColumns));const notificationData={dataSet:this,oldSortColumns:this.lastSortColumns,oldSortOrder:this.lastSortOrder,newSortColumns:sortColumns,newSortOrder:sortOrder};this.notifyObservers(luga.data.CONST.EVENTS.PRE_DATA_SORTED,notificationData);const sortColumnName=sortColumns[sortColumns.length-1],sortColumnType=this.getColumnType(sortColumnName);let sortFunction=luga.data.sort.getSortStrategy(sortColumnType,sortOrder);for(let i=sortColumns.length-2;i>=0;i--){const columnToSortName=sortColumns[i],columnToSortType=this.getColumnType(columnToSortName),sortStrategy=luga.data.sort.getSortStrategy(columnToSortType,sortOrder);sortFunction=buildSecondarySortFunction(sortStrategy(columnToSortName),sortFunction)}this.records.sort(sortFunction),applyFilter(),this.resetCurrentRowToFirst(),this.setState(luga.data.STATE.READY),this.notifyObservers(luga.data.CONST.EVENTS.DATA_SORTED,notificationData),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this}),this.lastSortColumns=sortColumns.slice(0),this.lastSortOrder=sortOrder};const buildSecondarySortFunction=function(funcA,funcB){return function(a,b){let ret=funcA(a,b);return 0===ret&&(ret=funcB(a,b)),ret}},assembleSortColumns=function(columnNames){return!1===Array.isArray(columnNames)?[columnNames,luga.data.CONST.PK_KEY]:columnNames.length<2&&columnNames[0]!==luga.data.CONST.PK_KEY?(columnNames.push(luga.data.CONST.PK_KEY),columnNames):columnNames},defineToggleSortOrder=function(sortColumns){return self.lastSortColumns.length>0&&self.lastSortColumns[0]===sortColumns[0]&&self.lastSortOrder===luga.data.sort.ORDER.ASC?luga.data.sort.ORDER.DESC:luga.data.sort.ORDER.ASC};this.update=function(filter,updater){const filteredRecords=luga.data.utils.filter(this.records,filter,this);luga.data.utils.update(filteredRecords,updater,this),this.resetCurrentRow(),this.setState(luga.data.STATE.READY),this.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},void 0!==options.filter&&this.setFilter(options.filter),void 0!==options.records&&this.insert(options.records)}}(),function(){"use strict";luga.data.DetailSet=function(options){const CONST_ERROR_MESSAGES={INVALID_UUID_PARAMETER:"luga.data.DetailSet: id parameter is required",INVALID_DS_PARAMETER:"luga.data.DetailSet: parentDataSet parameter is required"};if(void 0===options.uuid)throw CONST_ERROR_MESSAGES.INVALID_UUID_PARAMETER;if(void 0===options.parentDataSet)throw CONST_ERROR_MESSAGES.INVALID_DS_PARAMETER;luga.extend(luga.Notifier,this);const self=this;this.uuid=options.uuid,this.parentDataSet=options.parentDataSet,this.parentDataSet.addObserver(this),this.row=null,luga.data.setDataSource(this.uuid,this),this.getContext=function(){const context={entity:self.row},stateDesc=luga.data.utils.assembleStateDescription(self.getState());return luga.merge(context,stateDesc),context},this.getState=function(){return self.parentDataSet.getState()},this.fetchRow=function(){self.row=self.parentDataSet.getCurrentRow(),self.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.onDataChangedHandler=function(data){self.fetchRow()},this.onCurrentRowChangedHandler=function(data){self.fetchRow()},this.onStateChangedHandler=function(data){self.fetchRow()},self.row=self.parentDataSet.getCurrentRow()}}(),function(){"use strict";luga.data.HttpDataSet=function(options){luga.extend(luga.data.DataSet,this,[options]);const self=this,CONST_ERROR_MESSAGES={HTTP_DATA_SET_ABSTRACT:"luga.data.HttpDataSet is an abstract class",XHR_FAILURE:"Failed to retrieve: {0}. HTTP status: {1}. Error: {2}",NEED_URL_TO_LOAD:"Unable to call loadData(). DataSet is missing a URL"};if(this.constructor===luga.data.HttpDataSet)throw CONST_ERROR_MESSAGES.HTTP_DATA_SET_ABSTRACT;this.url=null,void 0!==options.url&&(this.url=options.url),this.timeout=luga.data.CONST.XHR_TIMEOUT,void 0!==options.timeout&&(this.timeout=options.timeout),this.cache=!0,void 0!==options.cache&&(this.cache=options.cache),this.headers=[],void 0!==options.headers&&(this.headers=options.headers),this.incrementalLoad=!1,void 0!==options.incrementalLoad&&(this.incrementalLoad=options.incrementalLoad),this.contentType="text/plain",this.xhrRequest=null;this.cancelRequest=function(){null!==this.xhrRequest&&(this.xhrRequest.abort(),this.xhrRequest=null)},this.getUrl=function(){return this.url},this.loadData=function(){if(null===this.url)throw CONST_ERROR_MESSAGES.NEED_URL_TO_LOAD;this.setState(luga.data.STATE.LOADING),this.notifyObservers(luga.data.CONST.EVENTS.DATA_LOADING,{dataSet:this}),this.cancelRequest(),function(){const xhrOptions={url:self.url,success:function(response){!1===self.incrementalLoad&&self.delete(),self.loadRecords(response)},contentType:self.contentType,timeout:self.timeout,cache:self.cache,headers:self.headers,error:self.xhrError};self.xhrRequest=new luga.xhr.Request(xhrOptions),self.xhrRequest.send(self.url)}()},this.loadRecords=function(response){},this.setUrl=function(newUrl){this.url=newUrl},this.xhrError=function(response){self.setState(luga.data.STATE.ERROR),self.notifyObservers(luga.data.CONST.EVENTS.XHR_ERROR,{dataSet:self,message:luga.string.format(CONST_ERROR_MESSAGES.XHR_FAILURE,[self.url,response.status]),response:response})}}}(),function(){"use strict";luga.data.JsonDataSet=function(options){luga.extend(luga.data.HttpDataSet,this,[options]);const self=this;this.contentType="application/json",this.path=null,void 0!==options.path&&(this.path=options.path),this.rawJson=null,this.getRawJson=function(){return this.rawJson},this.getPath=function(){return this.path},this.loadRawJson=function(json){self.delete(),loadFromJson(json)},this.loadRecords=function(response){loadFromJson(JSON.parse(response.responseText))};const loadFromJson=function(json){if(self.rawJson=json,null===self.path)self.insert(json);else{const records=luga.lookupProperty(json,self.path);void 0!==records&&self.insert(records)}};this.setPath=function(path){this.path=path}}}(),function(){"use strict";luga.data.XmlDataSet=function(options){luga.extend(luga.data.HttpDataSet,this,[options]);const self=this;this.contentType="application/xml",this.path="/",void 0!==options.path&&(this.path=options.path),this.rawXml=null,this.getRawXml=function(){return this.rawXml},this.getPath=function(){return this.path},this.loadRawXml=function(xmlStr){self.delete(),self.loadRecords({responseText:xmlStr})},this.loadRecords=function(response){const xmlDoc=luga.data.xml.parseFromString(response.responseText);self.rawXml=xmlDoc;const nodes=luga.data.xml.evaluateXPath(xmlDoc,self.path),records=[];for(let i=0;i<nodes.length;i++)records.push(luga.data.xml.nodeToHash(nodes[i]));self.insert(records)},this.setPath=function(path){this.path=path}}}(),function(){"use strict";luga.data.Rss2Dataset=function(options){luga.extend(luga.data.XmlDataSet,this,[options]);const self=this;this.rawXml=null,this.channelElements=["title","link","description","language","copyright","managingEditor","webMaster","pubDate","lastBuildDate","category","generator","docs","cloud","ttl","image","textInput","skipHours","skipDays"],this.itemElements=["title","link","description","author","category","comments","enclosure","guid","pubDate","source"],this.channelMeta={};const extractRecords=function(nodes){const records=[];return nodes.forEach(function(element){records.push(function(item){const rec={};for(let i=0;i<self.itemElements.length;i++){const element=self.itemElements[i],nodes=luga.data.xml.evaluateXPath(item,element);nodes.length>0&&(rec[element]=getTextValue(nodes[0]))}return rec}(element))}),records};function getTextValue(node){const child=node.childNodes[0];if(3===child.nodeType)return child.data}this.getContext=function(){const context={items:self.select(),recordCount:self.getRecordsCount()},stateDesc=luga.data.utils.assembleStateDescription(self.getState());return luga.merge(context,stateDesc),luga.merge(context,self.channelMeta),context},this.loadRecords=function(response){const xmlDoc=luga.data.xml.parseFromString(response.responseText);self.rawXml=xmlDoc,function(channel){for(let i=0;i<self.channelElements.length;i++){const element=self.channelElements[i],nodes=luga.data.xml.evaluateXPath(channel,element);nodes.length>0&&(self.channelMeta[element]=getTextValue(nodes[0]))}}(luga.data.xml.evaluateXPath(xmlDoc,"//channel")[0]);const items=luga.data.xml.evaluateXPath(xmlDoc,"//item"),records=extractRecords(items);self.insert(records)}}}(),function(){"use strict";luga.data.ChildJsonDataSet=function(options){const CONST_ERROR_MESSAGES={MISSING_PARENT_DS:"luga.data.ChildJsonDataSet: parentDataSet parameter is required",MISSING_URL:"luga.data.ChildJsonDataSet: url parameter is required",FAILED_URL_BINDING:"luga.data.ChildJsonDataSet: unable to generate valid URL: {0}"};if(void 0===options.parentDataSet)throw CONST_ERROR_MESSAGES.MISSING_PARENT_DS;if(void 0===options.url)throw CONST_ERROR_MESSAGES.MISSING_URL;luga.extend(luga.data.JsonDataSet,this,[options]);const self=this;this.parentDataSet=options.parentDataSet,this.parentDataSet.addObserver(this),this.url=null,this.urlPattern=options.url,this.fetchData=function(row){const bindUrl=luga.string.populate(self.urlPattern,row);if(bindUrl===self.urlPattern)throw luga.string.format(CONST_ERROR_MESSAGES.FAILED_URL_BINDING,[bindUrl]);self.setUrl(bindUrl),self.loadData()},this.onCurrentRowChangedHandler=function(data){null!==data.currentRow?self.fetchData(data.currentRow):self.delete()}}}(),function(){"use strict";luga.data.ChildXmlDataSet=function(options){const CONST_ERROR_MESSAGES={MISSING_PARENT_DS:"luga.data.ChildXmlDataSet: parentDataSet parameter is required",MISSING_URL:"luga.data.ChildXmlDataSet: url parameter is required",FAILED_URL_BINDING:"luga.data.ChildXmlDataSet: unable to generate valid URL: {0}"};if(void 0===options.parentDataSet)throw CONST_ERROR_MESSAGES.MISSING_PARENT_DS;if(void 0===options.url)throw CONST_ERROR_MESSAGES.MISSING_URL;luga.extend(luga.data.XmlDataSet,this,[options]);const self=this;this.parentDataSet=options.parentDataSet,this.parentDataSet.addObserver(this),this.url=null,this.urlPattern=options.url,this.fetchData=function(row){const bindUrl=luga.string.populate(self.urlPattern,row);if(bindUrl===self.urlPattern)throw luga.string.format(CONST_ERROR_MESSAGES.FAILED_URL_BINDING,[bindUrl]);self.setUrl(bindUrl),self.loadData()},this.onCurrentRowChangedHandler=function(data){null!==data.currentRow?self.fetchData(data.currentRow):self.delete()}}}(),function(){"use strict";luga.data.PagedView=function(options){const CONST_ERROR_MESSAGES={INVALID_UUID_PARAMETER:"luga.data.PagedView: id parameter is required",INVALID_DS_PARAMETER:"luga.data.PagedView: parentDataSet parameter is required"};if(void 0===options.uuid)throw CONST_ERROR_MESSAGES.INVALID_UUID_PARAMETER;if(void 0===options.parentDataSet)throw CONST_ERROR_MESSAGES.INVALID_DS_PARAMETER;luga.extend(luga.Notifier,this);const self=this;this.uuid=options.uuid,this.parentDataSet=options.parentDataSet,this.parentDataSet.addObserver(this),luga.data.setDataSource(this.uuid,this);let pageSize=10;void 0!==options.pageSize&&(pageSize=options.pageSize);let currentPage=1,currentOffsetStart=0;this.getContext=function(){const context=self.parentDataSet.getContext();return context.entities=context.entities.slice(self.getCurrentOffsetStart(),self.getCurrentOffsetEnd()+1),context.currentPageNumber=self.getCurrentPageIndex(),context.currentPageRecordCount=context.entities.length,context.currentOffsetEnd=self.getCurrentOffsetEnd(),context.currentOffsetStart=self.getCurrentOffsetStart(),context.pageSize=self.getPageSize(),context.pageCount=self.getPagesCount(),context},this.getCurrentOffsetEnd=function(){let offSet=self.getCurrentOffsetStart()+self.getPageSize()-1;return offSet>self.getRecordsCount()&&(offSet=self.getRecordsCount()),offSet},this.getCurrentOffsetStart=function(){return currentOffsetStart},this.getCurrentPageIndex=function(){return currentPage},this.getPagesCount=function(){return parseInt((self.parentDataSet.getRecordsCount()+self.getPageSize()-1)/self.getPageSize())},this.getPageSize=function(){return pageSize},this.goToPage=function(pageNumber){!1!==self.isPageInRange(pageNumber)&&pageNumber!==self.getCurrentPageIndex()&&(currentPage=pageNumber,currentOffsetStart=(pageNumber-1)*self.getPageSize(),self.setCurrentRowIndex(self.getCurrentOffsetStart()),self.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this}))},this.goToNextPage=function(){self.goToPage(self.getCurrentPageIndex()+1)},this.goToPrevPage=function(){self.goToPage(self.getCurrentPageIndex()-1)},this.isPageInRange=function(pageNumber){return!(pageNumber<1||pageNumber>self.getPagesCount())},this.isPagedView=function(){return!0},this.getCurrentRowIndex=function(){return self.parentDataSet.getCurrentRowIndex()},this.getRecordsCount=function(){return self.parentDataSet.getRecordsCount()},this.loadData=function(){void 0!==self.parentDataSet.loadData&&self.parentDataSet.loadData()},this.setCurrentRowId=function(rowId){self.parentDataSet.setCurrentRowId(rowId)},this.setCurrentRowIndex=function(index){self.parentDataSet.setCurrentRowIndex(index)},this.setState=function(newState){self.parentDataSet.setState(newState)},this.sort=function(columnNames,sortOrder){self.parentDataSet.sort(columnNames,sortOrder),self.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.onDataChangedHandler=function(data){self.notifyObservers(luga.data.CONST.EVENTS.DATA_CHANGED,{dataSource:this})},this.onStateChangedHandler=function(data){self.notifyObservers(luga.data.CONST.EVENTS.STATE_CHANGED,{dataSource:this})}}}(),function(){"use strict";luga.namespace("luga.data.region"),luga.data.region.CONST={CUSTOM_ATTRIBUTES:{DATA_SOURCE_UUID:"data-lugaregion-datasource-uuid",REGION:"data-lugaregion",REGION_TYPE:"data-lugaregion-type",TEMPLATE_ID:"data-lugaregion-template-id",TRAITS:"data-lugaregion-traits",REGION_REFERENCE:"luga-region-reference"},DEFAULT_REGION_TYPE:"luga.data.region.Handlebars",DEFAULT_TRAITS:["luga.data.region.traits.select","luga.data.region.traits.setRowId","luga.data.region.traits.setRowIndex","luga.data.region.traits.sort"],ERROR_MESSAGES:{MISSING_DATA_SOURCE_ATTRIBUTE:"Missing required data-lugaregion-datasource-uuid attribute inside region",MISSING_DATA_SOURCE:"Unable to find datasource {0}",MISSING_REGION_TYPE_FUNCTION:"Failed to create region. Unable to find a constructor function named: {0}"},EVENTS:{REGION_RENDERED:"regionRendered"},SELECTORS:{REGION:"*[data-lugaregion='true']"}};const config={autoregister:!0};luga.data.region.setup=function(options){return luga.merge(config,options),config},luga.data.region.getReferenceFromNode=function(node){return node[luga.data.region.CONST.CUSTOM_ATTRIBUTES.REGION_REFERENCE]},luga.data.region.init=function(node){const dataSourceId=node.getAttribute(luga.data.region.CONST.CUSTOM_ATTRIBUTES.DATA_SOURCE_UUID);if(null===dataSourceId)throw luga.data.region.CONST.ERROR_MESSAGES.MISSING_DATA_SOURCE_ATTRIBUTE;if(null===luga.data.getDataSource(dataSourceId))throw luga.string.format(luga.data.region.CONST.ERROR_MESSAGES.MISSING_DATA_SOURCE,[dataSourceId]);let regionType=node.getAttribute(luga.data.region.CONST.CUSTOM_ATTRIBUTES.REGION_TYPE);null===regionType&&(regionType=luga.data.region.CONST.DEFAULT_REGION_TYPE);const RegionClass=luga.lookupFunction(regionType);if(void 0===RegionClass)throw luga.string.format(luga.data.region.CONST.ERROR_MESSAGES.MISSING_REGION_TYPE_FUNCTION,[regionType]);new RegionClass({node:node})},luga.data.region.initRegions=function(rootNode){if(void 0===rootNode&&(rootNode=document.querySelector("body")),null!==rootNode){const nodes=rootNode.querySelectorAll(luga.data.region.CONST.SELECTORS.REGION);for(let i=0;i<nodes.length;i++)luga.data.region.init(nodes[i])}},luga.namespace("luga.data.region.utils"),luga.data.region.utils.assembleRegionDescription=function(region){return{node:region.config.node,ds:region.dataSource}},luga.dom.ready(function(){!0===config.autoregister&&luga.data.region.initRegions()})}(),function(){"use strict";luga.data.region.Base=function(options){if(luga.extend(luga.Notifier,this),this.CONST={ERROR_MESSAGES:{INVALID_TRAIT:"luga.data.region invalid trait: {0} is not a function",MISSING_NODE:"luga.data.region was unable find the region node"}},void 0===options.node)throw this.CONST.ERROR_MESSAGES.MISSING_NODE;this.config={node:null,dsUuid:options.node.getAttribute(luga.data.region.CONST.CUSTOM_ATTRIBUTES.DATA_SOURCE_UUID)||null,templateId:options.node.getAttribute(luga.data.region.CONST.CUSTOM_ATTRIBUTES.TEMPLATE_ID)||null,traits:options.traits||null,ds:null},luga.merge(this.config,options);const self=this;if(this.dataSource=null,null!==this.config.ds?this.dataSource=this.config.ds:this.dataSource=luga.data.getDataSource(this.config.dsUuid),null===this.dataSource)throw luga.string.format(luga.data.region.CONST.ERROR_MESSAGES.MISSING_DATA_SOURCE,[this.config.dsId]);this.dataSource.addObserver(this),this.traits=luga.data.region.CONST.DEFAULT_TRAITS;const attrTraits=this.config.node.getAttribute(luga.data.region.CONST.CUSTOM_ATTRIBUTES.TRAITS);null!==attrTraits&&(this.traits=this.traits.concat(attrTraits.split(","))),null!==this.config.traits&&(this.traits=this.traits.concat(this.config.traits)),this.config.node[luga.data.region.CONST.CUSTOM_ATTRIBUTES.REGION_REFERENCE]=this,this.applyTraits=function(){const traitData={node:this.config.node,dataSource:this.dataSource};for(let i=0;i<this.traits.length;i++){const func=luga.lookupFunction(this.traits[i]);if(void 0===func)throw luga.string.format(this.CONST.ERROR_MESSAGES.INVALID_TRAIT,[this.traits[i]]);func(traitData)}},this.render=function(){const desc=luga.data.region.utils.assembleRegionDescription(this);this.notifyObservers(luga.data.region.CONST.EVENTS.REGION_RENDERED,desc)},this.onCurrentRowChangedHandler=function(data){self.applyTraits()},this.onDataChangedHandler=function(data){self.render()},this.onStateChangedHandler=function(data){self.render()}}}(),function(){"use strict";luga.data.region.Handlebars=function(options){luga.extend(luga.data.region.Base,this,[options]);const self=this;self.CONST.HANDLEBARS_ERROR_MESSAGES={MISSING_HANDLEBARS:"Unable to find Handlebars",MISSING_TEMPLATE_FILE:"luga.data.region.Handlebars was unable to retrieve file: {0} containing an Handlebars template",MISSING_TEMPLATE_NODE:"luga.data.region.Handlebars was unable find an HTML element with id: {0} containing an Handlebars template"},this.template="";this.generateHtml=function(){return this.template(this.dataSource.getContext())},this.render=function(){if(""!==this.template){this.config.node.innerHTML=this.generateHtml(),this.applyTraits();const desc=luga.data.region.utils.assembleRegionDescription(this);this.notifyObservers(luga.data.region.CONST.EVENTS.REGION_RENDERED,desc)}},function(node){if(null===self.config.templateId)self.template=Handlebars.compile(node.innerHTML);else{const templateNode=document.getElementById(self.config.templateId);if(null===templateNode)throw luga.string.format(self.CONST.HANDLEBARS_ERROR_MESSAGES.MISSING_TEMPLATE_NODE,[self.config.templateId]);const templateSrc=templateNode.getAttribute("src");if(null===templateSrc)self.template=Handlebars.compile(templateNode.innerHTML);else{const xhrOptions={success:function(response){self.template=Handlebars.compile(response.responseText),self.render()},error:function(response){throw luga.string.format(self.CONST.HANDLEBARS_ERROR_MESSAGES.MISSING_TEMPLATE_FILE,[templateSrc])}};new luga.xhr.Request(xhrOptions).send(templateSrc)}}}(this.config.node)}}(),function(){"use strict";luga.namespace("luga.data.region.traits");const CONST_CUSTOM_ATTRIBUTES={SELECT:"data-lugaregion-select",SET_ROW_ID:"data-lugaregion-setrowid",SET_ROW_INDEX:"data-lugaregion-setrowindex",SORT:"data-lugaregion-sort"},CONST_SELECTORS={SELECT:"*[data-lugaregion-select]",SET_ROW_ID:"*[data-lugaregion-setrowid]",SET_ROW_INDEX:"*[data-lugaregion-setrowindex]",SORT:"*[data-lugaregion-sort]"},removeCssClass=function(nodeList,className){nodeList.forEach(function(item){item.classList.remove(className)})};luga.data.region.traits.select=function(options){if(void 0===options.dataSource.getCurrentRowIndex)return;let nodes=options.node.querySelectorAll(CONST_SELECTORS.SELECT);if((nodes=Array.prototype.slice.call(nodes)).length>0){const cssClass=nodes[0].getAttribute(CONST_CUSTOM_ATTRIBUTES.SELECT);nodes[0].classList.remove(cssClass);let index=0;-1===options.dataSource.getCurrentRowIndex()?removeCssClass(nodes,cssClass):(index=options.dataSource.getCurrentRowIndex(),nodes[index].classList.add(cssClass)),nodes.forEach(function(item){item.addEventListener("click",function(event){event.preventDefault(),removeCssClass(nodes,cssClass),item.classList.add(cssClass)},!1)})}},luga.data.region.traits.setRowId=function(options){let nodes=options.node.querySelectorAll(CONST_SELECTORS.SET_ROW_ID);(nodes=Array.prototype.slice.call(nodes)).forEach(function(item){item.addEventListener("click",function(event){event.preventDefault();const rowId=item.getAttribute(CONST_CUSTOM_ATTRIBUTES.SET_ROW_ID);options.dataSource.setCurrentRowId(rowId)},!1)})},luga.data.region.traits.setRowIndex=function(options){let nodes=options.node.querySelectorAll(CONST_SELECTORS.SET_ROW_INDEX);(nodes=Array.prototype.slice.call(nodes)).forEach(function(item){item.addEventListener("click",function(event){event.preventDefault();const rowIndex=parseInt(item.getAttribute(CONST_CUSTOM_ATTRIBUTES.SET_ROW_INDEX),10);options.dataSource.setCurrentRowIndex(rowIndex)},!1)})},luga.data.region.traits.sort=function(options){let nodes=options.node.querySelectorAll(CONST_SELECTORS.SORT);(nodes=Array.prototype.slice.call(nodes)).forEach(function(item){item.addEventListener("click",function(event){event.preventDefault();const sortCol=item.getAttribute(CONST_CUSTOM_ATTRIBUTES.SORT);options.dataSource.sort(sortCol)},!1)})}}(),function(){"use strict";luga.namespace("luga.data.sort"),luga.data.sort.ORDER={ASC:"ascending",DESC:"descending",TOG:"toggle"};const CONST_ERROR_MESSAGES={UNSUPPORTED_DATA_TYPE:"luga.data.sort. Unsupported dataType: {0",UNSUPPORTED_SORT_ORDER:"luga.data.sort. Unsupported sortOrder: {0}"};luga.data.sort.isValidSortOrder=function(sortOrder){for(let key in luga.data.sort.ORDER)if(luga.data.sort.ORDER[key]===sortOrder)return!0;return!1},luga.data.sort.getSortStrategy=function(dataType,sortOrder){if(void 0===luga.data.sort[dataType])throw luga.string.format(CONST_ERROR_MESSAGES.UNSUPPORTED_DATA_TYPE,[dataType]);if(void 0===luga.data.sort[dataType][sortOrder])throw luga.string.format(CONST_ERROR_MESSAGES.UNSUPPORTED_SORT_ORDER,[sortOrder]);return luga.data.sort[dataType][sortOrder]},luga.namespace("luga.data.sort.date"),luga.data.sort.date.ascending=function(prop){return function(a,b){let dA=luga.lookupProperty(a,prop),dB=luga.lookupProperty(b,prop);return(dA=dA?new Date(dA):0)-(dB=dB?new Date(dB):0)}},luga.data.sort.date.descending=function(prop){return function(a,b){let dA=luga.lookupProperty(a,prop),dB=luga.lookupProperty(b,prop);return dA=dA?new Date(dA):0,(dB=dB?new Date(dB):0)-dA}},luga.namespace("luga.data.sort.number"),luga.data.sort.number.ascending=function(prop){return function(a,b){return a=luga.lookupProperty(a,prop),b=luga.lookupProperty(b,prop),void 0===a||void 0===b?a===b?0:a?1:-1:a-b}},luga.data.sort.number.descending=function(prop){return function(a,b){return a=luga.lookupProperty(a,prop),b=luga.lookupProperty(b,prop),void 0===a||void 0===b?a===b?0:a?-1:1:b-a}},luga.namespace("luga.data.sort.string"),luga.data.sort.string.ascending=function(prop){return function(a,b){if(a=luga.lookupProperty(a,prop),b=luga.lookupProperty(b,prop),void 0===a||void 0===b)return a===b?0:a?1:-1;const tA=a.toString(),tB=b.toString(),tAlower=tA.toLowerCase(),tBlower=tB.toLowerCase(),minLen=tA.length>tB.length?tB.length:tA.length;for(let i=0;i<minLen;i++){const aLowerChar=tAlower.charAt(i),bLowerChar=tBlower.charAt(i),aChar=tA.charAt(i),bChar=tB.charAt(i);if(aLowerChar>bLowerChar)return 1;if(aLowerChar<bLowerChar)return-1;if(aChar>bChar)return 1;if(aChar<bChar)return-1}return tA.length===tB.length?0:tA.length>tB.length?1:-1}},luga.data.sort.string.descending=function(prop){return function(a,b){if(a=luga.lookupProperty(a,prop),b=luga.lookupProperty(b,prop),void 0===a||void 0===b)return a===b?0:a?-1:1;const tA=a.toString(),tB=b.toString(),tAlower=tA.toLowerCase(),tBlower=tB.toLowerCase(),minLen=tA.length>tB.length?tB.length:tA.length;for(let i=0;i<minLen;i++){const aLowerChar=tAlower.charAt(i),bLowerChar=tBlower.charAt(i),aChar=tA.charAt(i),bChar=tB.charAt(i);if(aLowerChar>bLowerChar)return-1;if(aLowerChar<bLowerChar)return 1;if(aChar>bChar)return-1;if(aChar<bChar)return 1}return tA.length===tB.length?0:tA.length>tB.length?-1:1}}}(),function(){"use strict";luga.namespace("luga.data.widgets"),luga.data.PAGING_STYLE={LINKS:"luga-pagingBarLinks",PAGES:"luga-pagingBarPages"};luga.data.widgets.PagingBar=function(options){const CONST_CSS_BASE_CLASS="luga-pagingBar",CONST_SAFE_HREF="javascript:;",CONST_LINKS_SEPARATOR=" - ",CONST_ERROR_MESSAGES={INVALID_PAGED_VIEW_PARAMETER:"luga.data.widgets.PagingBar: pagedView parameter is required. Must be an instance of luga.data.PagedView",INVALID_NODE_PARAMETER:"luga.data.widgets.PagingBar: node parameter is required. Must be a DOM Element",INVALID_STYLE_PARAMETER:"luga.data.widgets.PagingBar: style parameter must be of type luga.data.PAGING_STYLE"};if(void 0===options.pagedView||void 0===options.pagedView.isPagedView||!1===options.pagedView.isPagedView())throw CONST_ERROR_MESSAGES.INVALID_PAGED_VIEW_PARAMETER;if(void 0===options.node||options.node instanceof Element==!1)throw CONST_ERROR_MESSAGES.INVALID_NODE_PARAMETER;if(void 0!==options.style&&!1===function(style){for(let key in luga.data.PAGING_STYLE)if(luga.data.PAGING_STYLE[key]===style)return!0;return!1}(options.style))throw CONST_ERROR_MESSAGES.INVALID_STYLE_PARAMETER;this.config={pagedView:void 0,node:void 0,style:luga.data.PAGING_STYLE.LINKS,nextText:">",prevText:"<",separator:" | ",maxLinks:10},luga.merge(this.config,options);const self=this,pagedView=self.config.pagedView,node=self.config.node;pagedView.addObserver(this),node.classList.add(CONST_CSS_BASE_CLASS),node.classList.add(self.config.style);const renderPrevLink=function(text,pageIndex){const textNode=document.createTextNode(text),linkNode=document.createElement("a");linkNode.setAttribute("href",CONST_SAFE_HREF),linkNode.appendChild(textNode),addGoToPageEvent(linkNode,pageIndex-1),1!==pageIndex?node.appendChild(linkNode):node.appendChild(textNode),node.appendChild(document.createTextNode(" "))},renderNextLink=function(text,pageIndex){node.appendChild(document.createTextNode(" "));const textNode=document.createTextNode(text),linkNode=document.createElement("a");linkNode.setAttribute("href",CONST_SAFE_HREF),linkNode.appendChild(textNode),addGoToPageEvent(linkNode,pageIndex+1),pageIndex!==pagedView.getPagesCount()?node.appendChild(linkNode):node.appendChild(textNode)},renderMainLinks=function(maxLinks,style){const pageSize=pagedView.getPageSize(),recordsCount=pagedView.getRecordsCount(),pagesCount=pagedView.getPagesCount(),currentPageIndex=pagedView.getCurrentPageIndex(),endIndex=getEndIndex(currentPageIndex,maxLinks,pagesCount);for(let i=1;i<endIndex+1;i++){const labelText=getLabelText(i,style,pageSize,pagesCount,recordsCount);i!==currentPageIndex?renderCurrentLink(i,labelText):renderCurrentText(labelText),i<endIndex&&renderSeparator()}},renderCurrentLink=function(i,linkText){const textNode=document.createTextNode(linkText),linkNode=document.createElement("a");linkNode.appendChild(textNode),linkNode.setAttribute("href",CONST_SAFE_HREF),addGoToPageEvent(linkNode,i),node.appendChild(linkNode)},renderCurrentText=function(labelText){const textNode=document.createTextNode(labelText),strongNode=document.createElement("strong");strongNode.appendChild(textNode),node.appendChild(strongNode)},renderSeparator=function(){const separatorNode=document.createTextNode(self.config.separator);node.appendChild(separatorNode)},addGoToPageEvent=function(linkNode,pageNumber){linkNode.addEventListener("click",function(event){event.preventDefault(),pagedView.goToPage(pageNumber)})},getEndIndex=function(currentPageIndex,maxLinks,pagesCount){let startIndex=parseInt(currentPageIndex-parseInt(maxLinks/2));startIndex<1&&(startIndex=1);const tempPos=startIndex+maxLinks-1;let endIndex=pagesCount;return tempPos<pagesCount&&(endIndex=tempPos),endIndex},getLabelText=function(i,style,pageSize,pagesCount,recordsCount){let labelText="";if(style===luga.data.PAGING_STYLE.PAGES&&(labelText=i),style===luga.data.PAGING_STYLE.LINKS){let startText="",endText="";labelText=(startText=1!==i?pageSize*(i-1)+1:1)+CONST_LINKS_SEPARATOR+(endText=i<pagesCount?startText+pageSize-1:recordsCount)}return labelText};this.onDataChangedHandler=function(data){!function(){node.innerHTML="";const currentPageIndex=pagedView.getCurrentPageIndex();pagedView.getPagesCount()>1&&(renderPrevLink(self.config.prevText,currentPageIndex),renderMainLinks(self.config.maxLinks,self.config.style),renderNextLink(self.config.nextText,currentPageIndex))}()}}}(),function(){"use strict";luga.namespace("luga.data.widgets"),luga.data.widgets.ShowMore=function(options){this.CONST={ERROR_MESSAGES:{INVALID_DATASET_PARAMETER:"luga.data.widgets.ShowMore: dataSet parameter is required",INVALID_URL_PARAMETER:"luga.data.widgets.ShowMore: url parameter is required"}},this.config={dataSet:void 0,paramPath:"",url:void 0},luga.merge(this.config,options);const self=this;if(void 0===this.config.dataSet)throw this.CONST.ERROR_MESSAGES.INVALID_DATASET_PARAMETER;if(void 0===this.config.url)throw this.CONST.ERROR_MESSAGES.INVALID_URL_PARAMETER;let isEnabled=!1;this.config.dataSet.addObserver(this),this.assembleUrl=function(){let bindingObj=this.config.dataSet.getRawJson();return""!==this.config.paramPath&&(bindingObj=luga.lookupProperty(bindingObj,this.config.paramPath)),luga.string.populate(this.config.url,bindingObj)},this.disable=function(){},this.enable=function(){},this.fetch=function(){const newUrl=this.assembleUrl();newUrl!==this.config.url?(this.config.dataSet.setUrl(newUrl),this.config.dataSet.loadData()):this.disable()},this.isEnabled=function(){return isEnabled},this.updateState=function(){this.config.dataSet.getState()===luga.data.STATE.READY?(isEnabled=!0,this.enable()):(isEnabled=!1,this.disable())},this.onStateChangedHandler=function(data){self.updateState()},this.updateState()},luga.data.widgets.ShowMoreButton=function(options){this.config={dataSet:void 0,paramPath:"",url:void 0,button:void 0,disabledClass:"disabled"},luga.merge(this.config,options),luga.extend(luga.data.widgets.ShowMore,this,[this.config]);const self=this;if(self.CONST.BUTTON_ERROR_MESSAGES={MISSING_BUTTON:"luga.data.widgets.ShowMoreButton was unable find the button node"},null===self.config.button)throw this.CONST.BUTTON_ERROR_MESSAGES.MISSING_BUTTON;this.attachEvents=function(){self.config.button.addEventListener("click",function(event){event.preventDefault(),!0===self.isEnabled()&&self.fetch()},!1)},this.disable=function(){self.config.button.classList.add(this.config.disabledClass)},this.enable=function(){self.config.button.classList.remove(this.config.disabledClass)},this.attachEvents()}}();
//# sourceMappingURL=luga.min.js.map
