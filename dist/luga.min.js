/*! 
Luga JS  2016-07-05T14:57:13.535Z
Copyright 2013-2016 Massimo Foti (massimo@massimocorner.com)
Licensed under the Apache License, Version 2.0 | http://www.apache.org/licenses/LICENSE-2.0
 */
if("undefined"==typeof jQuery)throw"Unable to find jQuery";if("undefined"==typeof luga)var luga={};if(function(){"use strict";function attributesToProperties(node,obj){if(null!==node.attributes&&void 0!==node.attributes)for(var i=0;i<node.attributes.length;i++){var attr=node.attributes[i];obj[luga.xml.ATTRIBUTE_PREFIX+attr.name]=attr.value}}function childrenToProperties(node,obj){for(var i=0;i<node.childNodes.length;i++){var child=node.childNodes[i];if(1===child.nodeType){var isArray=!1,tagName=child.nodeName;if(void 0!==obj[tagName]){if(obj[tagName].constructor!==Array){var curValue=obj[tagName];obj[tagName]=[],obj[tagName].push(curValue)}isArray=!0}if(nodeHasText(child)===!0)obj[child.nodeName]=getTextValue(child);else{var childObj=luga.xml.nodeToHash(child);isArray===!0?obj[tagName].push(childObj):obj[tagName]=childObj}}}}function getTextValue(node){var child=node.childNodes[0];return 3===child.nodeType||4===child.nodeType?child.data:void 0}function nodeHasText(node){var child=node.childNodes[0];return null===child||null!==child.nextSibling||3!==child.nodeType&&4!==child.nodeType?!1:!0}luga.version="0.5.0",luga.namespace=function(ns,rootObject){var parts=ns.split(".");void 0===rootObject&&(rootObject=window);for(var i=0;i<parts.length;i++)void 0===rootObject[parts[i]]&&(rootObject[parts[i]]={}),rootObject=rootObject[parts[i]];return rootObject},luga.extend=function(baseFunc,func,args){baseFunc.apply(func,args)},luga.isArray=function(obj){return Array.isArray(obj)},luga.isFunction=function(obj){return"function"===luga.type(obj)},luga.isPlainObject=function(obj){if("[object Object]"!==Object.prototype.toString.call(obj))return!1;var proto=Object.getPrototypeOf(obj);if(null===proto)return!0;var constructor=Object.prototype.hasOwnProperty.call(proto,"constructor")&&proto.constructor;return typeof("function"===constructor)&&Function.toString.call(constructor)===Function.toString.call(Object)},luga.lookupFunction=function(path){if(!path)return void 0;var reference=luga.lookupProperty(window,path);return luga.isFunction(reference)===!0?reference:void 0},luga.lookupProperty=function(object,path){if(!object||!path)return void 0;if(void 0!==object[path])return object[path];for(var parts=path.split(".");parts.length>0;){var part=parts.shift();if(void 0!==object[part]){if(0===parts.length)return object[part];object=object[part]}}return void 0},luga.merge=function(target,obj){for(var x in obj)target[x]=obj[x]},luga.setProperty=function(object,path,value){for(var parts=path.split(".");parts.length>0;){var part=parts.shift();void 0!==object[part]?object=object[part]:parts.length>0?(object[part]={},object=object[part]):object[part]=value}},luga.NOTIFIER_CONST={ERROR_MESSAGES:{NOTIFIER_ABSTRACT:"It's forbidden to use luga.Notifier directly, it must be used as a base class instead",INVALID_OBSERVER_PARAMETER:"addObserver(): observer parameter must be an object",INVALID_DATA_PARAMETER:"notifyObserver(): data parameter is required and must be an object"}},luga.Notifier=function(){if(this.constructor===luga.Notifier)throw luga.NOTIFIER_CONST.ERROR_MESSAGES.NOTIFIER_ABSTRACT;this.observers=[];var prefix="on",suffix="Handler",generateMethodName=function(eventName){var str=prefix;return str+=eventName.charAt(0).toUpperCase(),str+=eventName.substring(1),str+=suffix};this.addObserver=function(observer){if("object"!==luga.type(observer))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_OBSERVER_PARAMETER;this.observers.push(observer)},this.notifyObservers=function(eventName,data){if("object"!==luga.type(data))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_DATA_PARAMETER;for(var method=generateMethodName(eventName),i=0;i<this.observers.length;i++){var observer=this.observers[i];observer[method]&&luga.isFunction(observer[method])&&observer[method](data)}},this.removeObserver=function(observer){for(var i=0;i<this.observers.length;i++)if(this.observers[i]===observer){this.observers.splice(i,1);break}}};var class2type={};["Array","Boolean","Date","Error","Function","Number","Object","RegExp","String","Symbol"].forEach(function(element,i,collection){class2type["[object "+element+"]"]=element.toLowerCase()}),luga.type=function(obj){if(null===obj)return"null";var rawType=typeof obj;if("object"===rawType||"function"===rawType){var stringType=Object.prototype.toString.call(obj);return class2type[stringType]}return rawType},luga.namespace("luga.dom.treeWalker"),luga.dom.treeWalker.getInstance=function(rootNode,filterFunc){var filter={acceptNode:function(node){return void 0!==filterFunc&&filterFunc(node)===!1?NodeFilter.FILTER_SKIP:NodeFilter.FILTER_ACCEPT}},safeFilter=filter.acceptNode;return safeFilter.acceptNode=filter.acceptNode,document.createTreeWalker(rootNode,NodeFilter.SHOW_ELEMENT,safeFilter,!1)},luga.namespace("luga.form"),luga.form.CONST={FIELD_SELECTOR:"input,select,textarea",FAKE_INPUT_TYPES:{fieldset:!0,reset:!0},MESSAGES:{MISSING_FORM:"Unable to load form"}},luga.form.toHash=function(rootNode,demoronize){if(0===rootNode.length)throw luga.form.CONST.MESSAGES.MISSING_FORM;for(var map={},fields=luga.form.utils.getChildFields(rootNode),i=0;i<fields.length;i++)if(luga.form.utils.isSuccessfulField(fields[i])===!0){var fieldName=jQuery(fields[i]).attr("name"),fieldValue=null,fieldType=jQuery(fields[i]).prop("type");switch(fieldType){case"select-multiple":fieldValue=jQuery(fields[i]).val();break;case"checkbox":case"radio":jQuery(fields[i]).prop("checked")===!0&&(fieldValue=jQuery(fields[i]).val());break;default:fieldValue=jQuery(fields[i]).val()}null!==fieldValue&&(demoronize===!0&&(fieldValue=luga.string.demoronize(fieldValue)),void 0===map[fieldName]?map[fieldName]=fieldValue:luga.isArray(map[fieldName])===!0?map[fieldName].push(fieldValue):map[fieldName]=[map[fieldName],fieldValue])}return map},luga.form.toJson=function(rootNode){var flatData=luga.form.toHash(rootNode),jsonData={};for(var x in flatData)luga.setProperty(jsonData,x,flatData[x]);return jsonData},luga.form.toQueryString=function(rootNode,demoronize){if(0===rootNode.length)throw luga.form.CONST.MESSAGES.MISSING_FORM;for(var str="",fields=luga.form.utils.getChildFields(rootNode),i=0;i<fields.length;i++)if(luga.form.utils.isSuccessfulField(fields[i])===!0){var fieldName=jQuery(fields[i]).attr("name"),fieldValue=jQuery(fields[i]).val(),fieldType=jQuery(fields[i]).prop("type");switch(fieldType){case"select-multiple":for(var j=0;j<fieldValue.length;j++)str=appendQueryString(str,fieldName,fieldValue[j],demoronize);break;case"checkbox":case"radio":jQuery(fields[i]).prop("checked")===!0&&(str=appendQueryString(str,fieldName,fieldValue,demoronize));break;default:str=appendQueryString(str,fieldName,fieldValue,demoronize)}}return str};var appendQueryString=function(str,fieldName,fieldValue,demoronize){return""!==str&&(str+="&"),str+=encodeURIComponent(fieldName),str+="=",str+=demoronize===!0?encodeURIComponent(luga.string.demoronize(fieldValue)):encodeURIComponent(fieldValue)};luga.namespace("luga.form.utils"),luga.form.utils.isSuccessfulField=function(fieldNode){return luga.form.utils.isInputField(fieldNode)===!1?!1:jQuery(fieldNode).prop("disabled")===!0?!1:void 0===jQuery(fieldNode).attr("name")?!1:!0},luga.form.utils.isInputField=function(fieldNode){return void 0===jQuery(fieldNode).prop("type")?!1:luga.form.CONST.FAKE_INPUT_TYPES[jQuery(fieldNode).prop("type")]===!0?!1:!0},luga.form.utils.getFieldGroup=function(name,rootNode){var selector="input[name="+name+"]";return jQuery(selector,rootNode)},luga.form.utils.getChildFields=function(rootNode){var fields=[];return jQuery(rootNode).find(luga.form.CONST.FIELD_SELECTOR).each(function(index,item){luga.form.utils.isInputField(item)&&fields.push(item)}),fields},luga.namespace("luga.string"),luga.string.demoronize=function(str){return str=str.replace(new RegExp(String.fromCharCode(710),"g"),"^"),str=str.replace(new RegExp(String.fromCharCode(732),"g"),"~"),str=str.replace(new RegExp(String.fromCharCode(8216),"g"),"'"),str=str.replace(new RegExp(String.fromCharCode(8217),"g"),"'"),str=str.replace(new RegExp(String.fromCharCode(8220),"g"),'"'),str=str.replace(new RegExp(String.fromCharCode(8221),"g"),'"'),str=str.replace(new RegExp(String.fromCharCode(8211),"g"),"-"),str=str.replace(new RegExp(String.fromCharCode(8212),"g"),"--"),str=str.replace(new RegExp(String.fromCharCode(8218),"g"),","),str=str.replace(new RegExp(String.fromCharCode(8222),"g"),",,"),str=str.replace(new RegExp(String.fromCharCode(8226),"g"),"*"),str=str.replace(new RegExp(String.fromCharCode(8230),"g"),"...")},luga.string.format=function(str,args){var pattern=null;if(luga.isArray(args)===!0)for(var i=0;i<args.length;i++)pattern=new RegExp("\\{"+i+"\\}","g"),str=str.replace(pattern,args[i]);if(luga.isPlainObject(args)===!0)for(var x in args)pattern=new RegExp("\\{"+x+"\\}","g"),str=str.replace(pattern,args[x]);return str},luga.string.queryToHash=function(str){var map={};if("?"===str.charAt(0)&&(str=str.substring(1)),0===str.length)return map;for(var parts=str.split("&"),i=0;i<parts.length;i++){var tokens=parts[i].split("="),fieldName=decodeURIComponent(tokens[0]),fieldValue="";2===tokens.length&&(fieldValue=decodeURIComponent(tokens[1])),void 0===map[fieldName]?map[fieldName]=fieldValue:luga.isArray(map[fieldName])===!0?map[fieldName].push(fieldValue):map[fieldName]=[map[fieldName],fieldValue]}return map};var propertyPattern=new RegExp("\\{([^}]*)}","g");luga.string.replaceProperty=function(str,obj){if(luga.isPlainObject(obj)===!0)for(var results;null!==(results=propertyPattern.exec(str));){var property=luga.lookupProperty(obj,results[1]);if(void 0!==property){var pattern=new RegExp(results[0],"g");str=str.replace(pattern,property),propertyPattern.test(str)}}return str},luga.namespace("luga.utils"),luga.utils.CONST={CSS_CLASSES:{MESSAGE:"luga-message",ERROR_MESSAGE:"luga-error-message"},MSG_BOX_ID:"lugaMessageBox"};var generateBoxId=function(node){var boxId=luga.utils.CONST.MSG_BOX_ID;return void 0===node.attr("id")?boxId+=node.attr("id"):void 0!==node.attr("name")&&(boxId+=node.attr("name")),boxId};luga.utils.removeDisplayBox=function(node){var boxId=generateBoxId(jQuery(node)),oldBox=jQuery("#"+boxId);oldBox.length>0&&oldBox.remove()},luga.utils.displayMessage=function(node,html){return luga.utils.displayBox(node,html,luga.utils.CONST.CSS_CLASSES.MESSAGE)},luga.utils.displayErrorMessage=function(node,html){return luga.utils.displayBox(node,html,luga.utils.CONST.CSS_CLASSES.ERROR_MESSAGE)},luga.utils.displayBox=function(node,html,cssClass){void 0===cssClass&&(cssClass=luga.utils.CONST.CSS_CLASSES.MESSAGE);var boxId=generateBoxId(jQuery(node)),box=jQuery("<div></div>");box.attr("id",boxId),box.addClass(cssClass),box.html(html);var oldBox=jQuery("#"+boxId);return oldBox.length>0?oldBox.replaceWith(box):jQuery(node).before(box),box},luga.namespace("luga.xml"),luga.xml.MIME_TYPE="application/xml",luga.xml.ATTRIBUTE_PREFIX="_",luga.xml.DOM_ACTIVEX_NAME="MSXML2.DOMDocument.4.0",luga.xml.evaluateXPath=function(node,path){var retArray=[];if(void 0!==window.ActiveXObject){for(var selectedNodes=node.selectNodes(path),i=0;i<selectedNodes.length;i++)retArray.push(selectedNodes[i]);return retArray}for(var evaluator=new XPathEvaluator,result=evaluator.evaluate(path,node,null,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),currentNode=result.iterateNext();null!==currentNode;)retArray.push(currentNode),currentNode=result.iterateNext();return retArray},luga.xml.nodeToHash=function(node){var obj={};return attributesToProperties(node,obj),childrenToProperties(node,obj),obj},luga.xml.nodeToString=function(node){if(void 0!==window.ActiveXObject)return node.xml;var serializer=new XMLSerializer;return serializer.serializeToString(node,luga.xml.MIME_TYPE)},luga.xml.parseFromString=function(xmlStr){var xmlParser;if(void 0!==window.ActiveXObject){var xmlDOMObj=new ActiveXObject(luga.xml.DOM_ACTIVEX_NAME);return xmlDOMObj.async=!1,xmlDOMObj.loadXML(xmlStr),xmlDOMObj}xmlParser=new DOMParser;var domDoc=xmlParser.parseFromString(xmlStr,luga.xml.MIME_TYPE);return domDoc}}(),"undefined"==typeof luga)throw"Unable to find Luga JS Core";if(function(){"use strict";luga.namespace("luga.ajaxform"),luga.ajaxform.version="0.7.5",luga.namespace("luga.ajaxform.handlers"),luga.ajaxform.handlers.replaceForm=function(msg,formNode,textStatus,jqXHR){jQuery(formNode).empty(),jQuery(formNode).html(msg)},luga.ajaxform.handlers.errorAlert=function(msg,formNode,textStatus,errorThrown,jqXHR){alert(msg)},luga.ajaxform.handlers.errorBox=function(msg,formNode,textStatus,errorThrown,jqXHR){luga.utils.removeDisplayBox(formNode),luga.utils.displayErrorMessage(formNode,msg)},luga.ajaxform.handlers.afterValidation=function(formNode,event){event.preventDefault();var sender=new luga.ajaxform.Sender({formNode:formNode});sender.send()},luga.ajaxform.CONST={FORM_SELECTOR:"form[data-lugajax-form='true']",DEFAULT_METHOD:"GET",DEFAULT_TIME_OUT:3e4,CUSTOM_ATTRIBUTES:{AJAX:"data-lugajax-form",ACTION:"data-lugajax-action",METHOD:"data-lugajax-method",TIME_OUT:"data-lugajax-timeout",SUCCESS:"data-lugajax-success",SUCCESS_MSG:"data-lugajax-successmsg",ERROR:"data-lugajax-error",ERROR_MSG:"data-lugajax-errormsg",BEFORE:"data-lugajax-before",AFTER:"data-lugajax-after",HEADERS:"data-lugajax-headers"},MESSAGES:{SUCCESS:"Thanks for submitting the form",ERROR:"Failed to submit the form",MISSING_FORM:"luga.ajaxform was unable to load form",MISSING_FUNCTION:"luga.ajaxform was unable to find a function named: {0}"},HANDLERS:{SUCCESS:"luga.ajaxform.handlers.replaceForm",ERROR:"luga.ajaxform.handlers.errorAlert"}},luga.ajaxform.Sender=function(options){options.formNode=jQuery(options.formNode),this.config={formNode:null,action:options.formNode.attr("action")||options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ACTION)||document.location.href,method:options.formNode.attr("method")||options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.METHOD)||luga.ajaxform.CONST.DEFAULT_METHOD,timeout:options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.TIME_OUT)||luga.ajaxform.CONST.DEFAULT_TIME_OUT,success:options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.SUCCESS)||luga.ajaxform.CONST.HANDLERS.SUCCESS,error:options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ERROR)||luga.ajaxform.CONST.HANDLERS.ERROR,successmsg:options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.SUCCESS_MSG)||luga.ajaxform.CONST.MESSAGES.SUCCESS,errormsg:options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.ERROR_MSG)||luga.ajaxform.CONST.MESSAGES.ERROR,before:options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.BEFORE)||null,after:options.formNode.attr(luga.ajaxform.CONST.CUSTOM_ATTRIBUTES.AFTER)||null,headers:null},luga.merge(this.config,options),this.config.timeout=parseInt(this.config.timeout,10);var self=this;if(0===self.config.formNode.length)throw luga.ajaxform.CONST.MESSAGES.MISSING_FORM;var handleAfter=function(){if(null!==self.config.after){var callBack=luga.lookupFunction(self.config.after);if(void 0===callBack)throw luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION,[self.config.after]);callBack.apply(null,[self.config.formNode])}},handleBefore=function(){if(null!==self.config.before){var callBack=luga.lookupFunction(self.config.before);if(void 0===callBack)throw luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION,[self.config.before]);callBack.apply(null,[self.config.formNode])}},handleError=function(textStatus,jqXHR,errorThrown){var callBack=luga.lookupFunction(self.config.error);if(void 0===callBack)throw luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION,[self.config.error]);callBack.apply(null,[self.config.errormsg,self.config.formNode,textStatus,errorThrown,jqXHR])},handleSuccess=function(textStatus,jqXHR){var callBack=luga.lookupFunction(self.config.success);if(void 0===callBack)throw luga.string.format(luga.ajaxform.CONST.MESSAGES.MISSING_FUNCTION,[self.config.success]);callBack.apply(null,[self.config.successmsg,self.config.formNode,textStatus,jqXHR])};this.send=function(){var formData=luga.form.toQueryString(self.config.formNode,!0);null!==self.config.before&&handleBefore(),jQuery.ajax({data:formData,error:function(jqXHR,textStatus,errorThrown){handleError(textStatus,jqXHR,errorThrown)},method:self.config.method,headers:self.config.headers,success:function(response,textStatus,jqXHR){handleSuccess(textStatus,jqXHR)},timeout:self.config.timeout,url:self.config.action}),null!==self.config.after&&handleAfter()},this.sendJson=function(){var formData=luga.form.toJson(self.config.formNode,!0);null!==self.config.before&&handleBefore(),jQuery.ajax({contentType:"application/json",data:JSON.stringify(formData),error:function(jqXHR,textStatus,errorThrown){handleError(textStatus,jqXHR,errorThrown)},method:self.config.method,headers:self.config.headers,success:function(response,textStatus,jqXHR){handleSuccess(textStatus,jqXHR)},timeout:self.config.timeout,url:self.config.action}),null!==self.config.after&&handleAfter()}},luga.ajaxform.initForms=function(){jQuery(luga.ajaxform.CONST.FORM_SELECTOR).each(function(index,item){var formNode=jQuery(item);formNode.submit(function(event){event.preventDefault();var formHandler=new luga.ajaxform.Sender({formNode:formNode});formHandler.send()})})},jQuery(document).ready(function(){luga.ajaxform.initForms()})}(),"undefined"==typeof luga)throw"Unable to find Luga JS Core";if(function(){"use strict";luga.namespace("luga.csi"),luga.csi.version="1.1.2",luga.csi.CONST={NODE_SELECTOR:"div[data-lugacsi]",URL_ATTRIBUTE:"data-lugacsi",AFTER_ATTRIBUTE:"data-lugacsi-after",MESSAGES:{FILE_NOT_FOUND:"luga.csi failed to retrieve text from: {0}"}},luga.csi.Include=function(options){var onSuccess=function(response,textStatus,jqXHR){jQuery(config.rootNode).html(response)},onError=function(qXHR,textStatus,errorThrown){throw luga.string.format(luga.csi.CONST.MESSAGES.FILE_NOT_FOUND,[config.url])},config={url:jQuery(options.rootNode).attr(luga.csi.CONST.URL_ATTRIBUTE),after:jQuery(options.rootNode).attr(luga.csi.CONST.AFTER_ATTRIBUTE),success:onSuccess,error:onError,xhrTimeout:5e3};luga.merge(config,options),this.load=function(){jQuery.ajax({url:config.url,timeout:config.XHR_TIMEOUT,success:function(response,textStatus,jqXHR){config.success.apply(null,[response,textStatus,jqXHR]);var afterHandler=luga.lookupFunction(config.after);void 0!==afterHandler&&afterHandler.apply(null,[config.rootNode,config.url,response])},error:function(jqXHR,textStatus,errorThrown){config.error.apply(null,[jqXHR,textStatus,errorThrown])}})}},luga.csi.loadIncludes=function(){jQuery(luga.csi.CONST.NODE_SELECTOR).each(function(index,item){var includeObj=new luga.csi.Include({rootNode:item});includeObj.load()})},jQuery(document).ready(function(){luga.csi.loadIncludes()})}(),"undefined"==typeof luga)throw"Unable to find Luga JS Core";!function(){"use strict";luga.namespace("luga.validator"),luga.validator.version="0.9.2",luga.namespace("luga.validator.handlers"),luga.validator.handlers.errorAlert=function(formNode,validators){for(var errorMsg="",focusGiven=!1,i=0;i<validators.length;i++)errorMsg+=validators[i].message+"\n",focusGiven===!1&&validators[i].getFocus&&(validators[i].getFocus(),focusGiven=!0);""!==errorMsg&&alert(errorMsg)},luga.validator.handlers.errorBox=function(formNode,validators){if(0===validators.length)return void luga.utils.removeDisplayBox(formNode);for(var focusGiven=!1,htmlStr="<ul>",i=0;i<validators.length;i++)htmlStr+="<li><em>"+validators[i].name+": </em> "+validators[i].message+"</li>",focusGiven===!1&&validators[i].getFocus&&(validators[i].getFocus(),focusGiven=!0);htmlStr+="</ul>",luga.utils.displayErrorMessage(formNode,htmlStr)},luga.validator.handlers.bootstrap=function(formNode,validators){var ERROR_SELECTOR=".has-error",ERROR_CLASS="has-error",ALERT_SELECTOR=".alert-danger",FAILED_UPDATE='<div class="alert alert-danger" role="alert"><span style="padding-right:10px" class="glyphicon glyphicon-exclamation-sign"></span>{0}</div>';jQuery(formNode).find(ERROR_SELECTOR).removeClass(ERROR_CLASS),jQuery(formNode).find(ALERT_SELECTOR).remove();for(var focusGiven=!1,i=0;i<validators.length;i++){var fieldNode=jQuery(validators[i].node);fieldNode.parent().addClass(ERROR_CLASS),fieldNode.before(jQuery(luga.string.format(FAILED_UPDATE,[validators[i].message]))),focusGiven===!1&&validators[i].getFocus&&(validators[i].getFocus(),focusGiven=!0)}},luga.validator.CONST={FORM_SELECTOR:"form[data-lugavalidator-validate]",RULE_PREFIX:"data-lugavalidator-",DEFAULT_DATE_PATTERN:"YYYY-MM-DD",CUSTOM_ATTRIBUTES:{VALIDATE:"data-lugavalidator-validate",ERROR:"data-lugavalidator-error",BEFORE:"data-lugavalidator-before",AFTER:"data-lugavalidator-after",BLOCK_SUBMIT:"data-lugavalidator-blocksubmit",MESSAGE:"data-lugavalidator-message",ERROR_CLASS:"data-lugavalidator-errorclass",REQUIRED:"data-lugavalidator-required",PATTERN:"data-lugavalidator-pattern",MIN_LENGTH:"data-lugavalidator-minlength",MAX_LENGTH:"data-lugavalidator-maxlength",MIN_NUMBER:"data-lugavalidator-minnumber",MAX_NUMBER:"data-lugavalidator-maxnumber",DATE_PATTERN:"data-lugavalidator-datepattern",MIN_DATE:"data-lugavalidator-mindate",MAX_DATE:"data-lugavalidator-maxdate",EQUAL_TO:"data-lugavalidator-equalto",MIN_CHECKED:"data-lugavalidator-minchecked",MAX_CHECKED:"data-lugavalidator-maxchecked",INVALID_INDEX:"data-lugavalidator-invalidindex",INVALID_VALUE:"data-lugavalidator-invalidvalue",DISABLED_MESSAGE:"data-lugavalidator-disabledlabel"},MESSAGES:{MISSING_FORM:"luga.validator was unable to load form",MISSING_FIELD:"luga.validator was unable to load field",MISSING_FUNCTION:"luga.validator was unable to find a function named: {0}",BASE_VALIDATOR_ABSTRACT:"luga.validator.BaseFieldValidator is an abstract class",GROUP_VALIDATOR_ABSTRACT:"luga.validator.BaseGroupValidator is an abstract class",FIELD_CANT_BE_VALIDATED:"This field can't be validated",PATTERN_NOT_FOUND:"luga.validator failed to retrieve pattern: {0}",INVALID_INDEX_PARAMETER:"data-lugavalidator-invalidindex accept only numbers",MISSING_EQUAL_TO_FIELD:"data-lugavalidator-equalto was unable to find field with id = {0}"},HANDLERS:{FORM_ERROR:"luga.validator.handlers.errorAlert"}},luga.validator.FormValidator=function(options){this.config={blocksubmit:jQuery(options.formNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.BLOCK_SUBMIT)||"true",error:jQuery(options.formNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR)||luga.validator.CONST.HANDLERS.FORM_ERROR,before:jQuery(options.formNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.BEFORE)||null,after:jQuery(options.formNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.AFTER)||null},luga.merge(this.config,options),this.config.blocksubmit=JSON.parse(this.config.blocksubmit);var self=this;if(self.validators=[],self.dirtyValidators=[],self.config.formNode=jQuery(self.config.formNode),0===jQuery(self.config.formNode).length)throw luga.validator.CONST.MESSAGES.MISSING_FORM;this.init=function(){self.validators=[],self.dirtyValidators=[];for(var formDom=self.config.formNode[0],i=0;i<formDom.elements.length;i++)luga.form.utils.isInputField(formDom.elements[i])===!0&&self.validators.push(luga.validator.fieldValidatorFactory.getInstance({fieldNode:formDom.elements[i],formNode:self.config.formNode}))},this.validate=function(event){self.init(),self.before(event);for(var executedValidators={},i=0;i<self.validators.length;i++)if(void 0!==self.validators[i]&&void 0!==self.validators[i].validate){if(void 0!==executedValidators[self.validators[i].name])continue;self.validators[i].validate()===!0&&self.dirtyValidators.push(self.validators[i]),executedValidators[self.validators[i].name]=!0}return self.isValid()===!1?(self.error(),void 0!==event&&event.preventDefault()):(this.config.blocksubmit===!0&&self.disableSubmit(),self.after(event)),self.dirtyValidators},this.disableSubmit=function(){var buttons=jQuery("input[type=submit]",self.config.formNode);jQuery(buttons).each(function(index,item){var buttonNode=jQuery(item);void 0!==buttonNode.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.DISABLED_MESSAGE)&&buttonNode.val(buttonNode.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.DISABLED_MESSAGE))})},this.isValid=function(){return 0===self.dirtyValidators.length},this.before=function(event){if(null!==self.config.before){var callBack=luga.lookupFunction(self.config.before);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.before]);callBack.apply(null,[self.config.formNode,event])}},this.error=function(){var callBack=luga.lookupFunction(self.config.error);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.error]);callBack.apply(null,[self.config.formNode,self.dirtyValidators])},this.after=function(event){if(null!==self.config.after){var callBack=luga.lookupFunction(self.config.after);if(void 0===callBack)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[self.config.after]);callBack.apply(null,[self.config.formNode,event])}}},luga.namespace("luga.validator.fieldValidatorFactory"),luga.validator.fieldValidatorFactory.getInstance=function(options){this.config={},luga.merge(this.config,options);var self=this;if(luga.form.utils.isInputField(self.config.fieldNode)===!1)return null;var fieldType=jQuery(self.config.fieldNode).prop("type");switch(fieldType){case"select-multiple":return new luga.validator.SelectValidator(this.config);case"select-one":return new luga.validator.SelectValidator(this.config);case"radio":if(void 0!==jQuery(this.config.fieldNode).attr("name"))return new luga.validator.RadioValidator({inputGroup:luga.form.utils.getFieldGroup(jQuery(this.config.fieldNode).attr("name"),this.config.formNode)});break;case"checkbox":if(void 0!==jQuery(this.config.fieldNode).attr("name"))return new luga.validator.CheckboxValidator({inputGroup:luga.form.utils.getFieldGroup(jQuery(this.config.fieldNode).attr("name"),this.config.formNode)});break;default:return new luga.validator.TextValidator(this.config)}},luga.validator.BaseFieldValidator=function(options){if(this.constructor===luga.validator.BaseFieldValidator)throw luga.validator.CONST.MESSAGES.BASE_VALIDATOR_ABSTRACT;this.config={message:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)||"",errorclass:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS)||""},luga.merge(this.config,options),this.node=jQuery(options.fieldNode),this.message=this.config.message,this.name="",void 0!==this.node.attr("name")?this.name=this.node.attr("name"):void 0!==this.node.attr("id")&&(this.name=this.node.attr("id")),this.isValid=function(){},this.flagInvalid=function(){this.node.addClass(this.config.errorclass),this.node.attr("title",this.message)},this.flagValid=function(){this.node.removeClass(this.config.errorclass),this.node.removeAttr("title")},this.validate=function(){return this.node.prop("disabled")===!0?(this.flagValid(),!1):this.isValid()===!1?(this.flagInvalid(),!0):(this.flagValid(),!1)}},luga.validator.TextValidator=function(options){if(this.config={required:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED),pattern:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.PATTERN),minlength:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_LENGTH),maxlength:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_LENGTH),minnumber:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_NUMBER),maxnumber:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_NUMBER),datepattern:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.DATE_PATTERN)||luga.validator.CONST.DEFAULT_DATE_PATTERN,mindate:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_DATE),maxdate:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_DATE),equalto:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.EQUAL_TO)},luga.merge(this.config,options),luga.extend(luga.validator.BaseFieldValidator,this,[this.config]),void 0!==this.config.required)try{this.config.required=JSON.parse(this.config.required)}catch(e){}var self=this;if(self.node=jQuery(options.fieldNode),0===self.node.length)throw luga.validator.CONST.MESSAGES.MISSING_FIELD;self.type="text",this.getFocus=function(){try{self.node.focus(),self.node.select()}catch(e){}},this.isEmpty=function(){return""===self.node.val()},this.isRequired=function(){var requiredAtt=this.config.required;if(requiredAtt===!0)return!0;if(requiredAtt===!1)return!1;var functionReference=luga.lookupFunction(requiredAtt);if(void 0!==functionReference)return functionReference.apply(null,[self.node]);throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_FUNCTION,[requiredAtt])},this.isValid=function(){if(self.isEmpty())return self.isRequired()===!0?!1:!0;for(var rule in luga.validator.rules)if(void 0!==self.node.attr(luga.validator.CONST.RULE_PREFIX+rule)&&luga.validator.rules[rule].apply(null,[self.node,self])===!1)return!1;return!0}},luga.validator.SelectValidator=function(options){this.config={invalidindex:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.INVALID_INDEX),invalidvalue:jQuery(options.fieldNode).attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.INVALID_VALUE)},luga.merge(this.config,options),luga.extend(luga.validator.BaseFieldValidator,this,[this.config]);var self=this;if(self.type="select",self.node=jQuery(options.fieldNode),0===self.node.length)throw luga.validator.CONST.MESSAGES.MISSING_FIELD;if(void 0!==self.config.invalidindex&&!jQuery.isNumeric(self.config.invalidindex))throw luga.validator.CONST.MESSAGES.INVALID_INDEX_PARAMETER;var currentIndex=self.node.prop("selectedIndex");-1===currentIndex&&(currentIndex=0),currentIndex=parseInt(currentIndex,10),this.isValid=function(){return currentIndex===parseInt(self.config.invalidindex,10)?!1:self.node.val()===self.config.invalidvalue?!1:!0}},luga.validator.BaseGroupValidator=function(options){if(this.constructor===luga.validator.BaseGroupValidator)throw luga.validator.CONST.MESSAGES.GROUP_VALIDATOR_ABSTRACT;this.config={},luga.merge(this.config,options),this.inputGroup=this.config.inputGroup,this.name=jQuery(this.config.inputGroup).attr("name"),this.message="",this.errorclass="";for(var i=0;i<this.inputGroup.length;i++){var field=jQuery(this.inputGroup[i]);void 0!==field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)&&(this.message=field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MESSAGE)),void 0!==field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS)&&(this.errorclass=field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.ERROR_CLASS))}this.isValid=function(){},this.flagInvalid=function(){if(""!==this.errorclass)for(var i=0;i<this.inputGroup.length;i++){var field=jQuery(this.inputGroup[i]);field.addClass(this.errorclass),field.attr("title",this.message)}},this.flagValid=function(){if(""!==this.errorclass)for(var i=0;i<this.inputGroup.length;i++){var field=jQuery(this.inputGroup[i]);field.removeClass(this.errorclass),field.removeAttr("title")}},this.validate=function(){return this.isValid()===!0?(this.flagValid(),!1):(this.flagInvalid(),!0)}},luga.validator.RadioValidator=function(options){this.config={},luga.merge(this.config,options),luga.extend(luga.validator.BaseGroupValidator,this,[this.config]),this.type="radio",this.isRequired=function(){for(var requiredFlag=!1,fieldGroup=this.inputGroup,i=0;i<fieldGroup.length;i++){var field=jQuery(fieldGroup[i]);field.prop("disabled")===!1&&field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED)&&(requiredFlag=field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.REQUIRED))}return requiredFlag},this.isValid=function(){if("true"===this.isRequired()){for(var fieldGroup=this.inputGroup,i=0;i<fieldGroup.length;i++){var field=jQuery(fieldGroup[i]);if(field.prop("checked")===!0)return!0}return!1}return!0}},luga.validator.CheckboxValidator=function(options){this.config={},
luga.merge(this.config,options),luga.extend(luga.validator.BaseGroupValidator,this,[this.config]),this.type="checkbox",this.minchecked=0,this.maxchecked=this.config.inputGroup.length;for(var i=0;i<this.inputGroup.length;i++){var field=jQuery(this.inputGroup[i]);field.prop("disabled")===!1&&(void 0!==field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_CHECKED)&&(this.minchecked=field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MIN_CHECKED)),void 0!==field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_CHECKED)&&(this.maxchecked=field.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.MAX_CHECKED)))}this.isValid=function(){for(var checkCounter=0,fieldGroup=this.inputGroup,i=0;i<fieldGroup.length;i++){var field=jQuery(this.inputGroup[i]);field.prop("disabled")===!1&&field.prop("checked")===!0&&checkCounter++}return checkCounter>=this.minchecked&&checkCounter<=this.maxchecked}},luga.namespace("luga.validator.rules"),luga.validator.rules.email=function(fieldNode,validator){var fieldValue=fieldNode.val(),containsAt=-1!==fieldValue.indexOf("@"),containDot=-1!==fieldValue.indexOf(".");return containsAt===!0&&containDot===!0?!0:!1},luga.validator.rules.equalto=function(fieldNode,validator){var secondFieldNode=jQuery("#"+validator.config.equalto);if(0===secondFieldNode.length)throw luga.string.format(luga.validator.CONST.MESSAGES.MISSING_EQUAL_TO_FIELD,[validator.config.equalto]);return fieldNode.val()===secondFieldNode.val()},luga.validator.rules.datepattern=function(fieldNode,validator){var datObj=luga.validator.dateStrToObj(fieldNode.val(),validator.config.datepattern);return null!==datObj?!0:!1},luga.validator.rules.maxdate=function(fieldNode,validator){var pattern=validator.config.datepattern,valueDate=luga.validator.dateStrToObj(fieldNode.val(),pattern),maxDate=luga.validator.dateStrToObj(validator.config.maxdate,pattern);return null!==valueDate&&null!==maxDate?maxDate>=valueDate:!1},luga.validator.rules.mindate=function(fieldNode,validator){var pattern=validator.config.datepattern,valueDate=luga.validator.dateStrToObj(fieldNode.val(),pattern),minDate=luga.validator.dateStrToObj(validator.config.mindate,pattern);return null!==valueDate&&null!==minDate?valueDate>=minDate:!1},luga.validator.rules.maxlength=function(fieldNode,validator){return fieldNode.val().length>validator.config.maxlength?!1:!0},luga.validator.rules.minlength=function(fieldNode,validator){return fieldNode.val().length<validator.config.minlength?!1:!0},luga.validator.rules.maxnumber=function(fieldNode,validator){return jQuery.isNumeric(fieldNode.val())===!1?!1:parseFloat(fieldNode.val())<=parseFloat(validator.config.maxnumber)?!0:!1},luga.validator.rules.minnumber=function(fieldNode,validator){return jQuery.isNumeric(fieldNode.val())===!1?!1:parseFloat(fieldNode.val())>=parseFloat(validator.config.minnumber)?!0:!1},luga.validator.rules.pattern=function(fieldNode,validator){var regExpObj=luga.validator.patterns[validator.config.pattern];if(void 0!==regExpObj)return regExpObj.test(fieldNode.val());throw luga.string.format(luga.validator.CONST.MESSAGES.PATTERN_NOT_FOUND,[validator.config.pattern])},luga.namespace("luga.validator.patterns"),luga.validator.patterns.lettersonly=new RegExp("^[a-zA-Z]*$"),luga.validator.patterns.alphanumeric=new RegExp("^\\w*$"),luga.validator.patterns.integer=new RegExp("^-?[1-9][0-9]*$"),luga.validator.patterns.positiveinteger=new RegExp("^\\d\\d*$"),luga.validator.patterns.number=new RegExp("^-?(\\d\\d*\\.\\d*$)|(^-?\\d\\d*$)|(^-?\\.\\d\\d*$)"),luga.validator.patterns.filepath_pdf=new RegExp("[\\w_]*\\.([pP][dD][fF])$"),luga.validator.patterns.filepath_jpg=new RegExp("[\\w_]*\\.([jJ][pP][eE]?[gG])$"),luga.validator.patterns.filepath_zip=new RegExp("[\\w_]*\\.([zZ][iI][pP])$"),luga.validator.patterns.filepath=new RegExp("[\\w_]*\\.\\w{3}$"),luga.validator.patterns.time=new RegExp("([0-1][0-9]|2[0-3]):[0-5][0-9]$"),luga.namespace("luga.validator.dateSpecs"),luga.validator.createDateSpecObj=function(rex,year,month,day,separator){var infoObj={};return infoObj.rex=new RegExp(rex),infoObj.y=year,infoObj.m=month,infoObj.d=day,infoObj.s=separator,infoObj},luga.validator.dateStrToObj=function(dateStr,dateSpecKey){var dateSpecObj=luga.validator.dateSpecs[dateSpecKey];if(void 0!==dateSpecObj){if(!dateSpecObj.rex.test(dateStr))return null;var dateBits=dateStr.split(dateSpecObj.s),testDate=new Date(dateBits[dateSpecObj.y],dateBits[dateSpecObj.m]-1,dateBits[dateSpecObj.d]),yearMatches=testDate.getFullYear()===parseInt(dateBits[dateSpecObj.y],10),monthMatches=testDate.getMonth()===parseInt(dateBits[dateSpecObj.m]-1,10),dayMatches=testDate.getDate()===parseInt(dateBits[dateSpecObj.d],10);return yearMatches===!0&&monthMatches===!0&&dayMatches===!0?testDate:null}return null},luga.validator.dateSpecs["YYYY-MM-DD"]=luga.validator.createDateSpecObj("^([0-9]{4})-([0-1][0-9])-([0-3][0-9])$",0,1,2,"-"),luga.validator.dateSpecs["YYYY-M-D"]=luga.validator.createDateSpecObj("^([0-9]{4})-([0-1]?[0-9])-([0-3]?[0-9])$",0,1,2,"-"),luga.validator.dateSpecs["MM.DD.YYYY"]=luga.validator.createDateSpecObj("^([0-1][0-9]).([0-3][0-9]).([0-9]{4})$",2,0,1,"."),luga.validator.dateSpecs["M.D.YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9]).([0-3]?[0-9]).([0-9]{4})$",2,0,1,"."),luga.validator.dateSpecs["MM/DD/YYYY"]=luga.validator.createDateSpecObj("^([0-1][0-9])/([0-3][0-9])/([0-9]{4})$",2,0,1,"/"),luga.validator.dateSpecs["M/D/YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9])/([0-3]?[0-9])/([0-9]{4})$",2,0,1,"/"),luga.validator.dateSpecs["MM-DD-YYYY"]=luga.validator.createDateSpecObj("^([0-21][0-9])-([0-3][0-9])-([0-9]{4})$",2,0,1,"-"),luga.validator.dateSpecs["M-D-YYYY"]=luga.validator.createDateSpecObj("^([0-1]?[0-9])-([0-3]?[0-9])-([0-9]{4})$",2,0,1,"-"),luga.validator.dateSpecs["DD.MM.YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9]).([0-1][0-9]).([0-9]{4})$",2,1,0,"."),luga.validator.dateSpecs["D.M.YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9]).([0-1]?[0-9]).([0-9]{4})$",2,1,0,"."),luga.validator.dateSpecs["DD/MM/YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9])/([0-1][0-9])/([0-9]{4})$",2,1,0,"/"),luga.validator.dateSpecs["D/M/YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9])/([0-1]?[0-9])/([0-9]{4})$",2,1,0,"/"),luga.validator.dateSpecs["DD-MM-YYYY"]=luga.validator.createDateSpecObj("^([0-3][0-9])-([0-1][0-9])-([0-9]{4})$",2,1,0,"-"),luga.validator.dateSpecs["D-M-YYYY"]=luga.validator.createDateSpecObj("^([0-3]?[0-9])-([0-1]?[0-9])-([0-9]{4})$",2,1,0,"-"),luga.validator.initForms=function(){jQuery(luga.validator.CONST.FORM_SELECTOR).each(function(index,item){var formNode=jQuery(item);"true"===formNode.attr(luga.validator.CONST.CUSTOM_ATTRIBUTES.VALIDATE)&&formNode.submit(function(event){var formValidator=new luga.validator.FormValidator({formNode:formNode});formValidator.validate(event)})})},luga.namespace("luga.validator.api"),luga.validator.api.validateForm=function(options){var formValidator=new luga.validator.FormValidator(options);return formValidator.validate(),formValidator.isValid()},luga.validator.api.validateField=function(options){if(luga.form.utils.isInputField(options.fieldNode)===!1)throw luga.validator.CONST.MESSAGES.FIELD_CANT_BE_VALIDATED;void 0===options.error&&(options.error=luga.validator.CONST.HANDLERS.FORM_ERROR);var dirtyValidators=[],fieldValidator=new luga.validator.fieldValidatorFactory.getInstance(options);if(fieldValidator.validate(null),fieldValidator.isValid()===!0){var callBack=luga.lookupFunction(options.error);dirtyValidators.push(fieldValidator),callBack(null,[])}return fieldValidator.isValid()},luga.validator.api.validateFields=function(options){options.error||(options.error=luga.validator.CONST.HANDLERS.FORM_ERROR);for(var validators=[],executedValidators={},dirtyValidators=[],i=0;i<options.fields.length;i++)luga.form.utils.isInputField(options.fields[i])===!0&&validators.push(luga.validator.fieldValidatorFactory.getInstance({fieldNode:options.fields[i]}));for(var j=0;j<validators.length;j++)if(validators[j]&&validators[j].validate){if(void 0!==executedValidators[validators[j].name])continue;validators[j].validate()===!0&&dirtyValidators.push(validators[j]),executedValidators[validators[j].name]=!0}if(dirtyValidators.length>0){var callBack=luga.lookupFunction(options.error);callBack.apply(null,[options.formNode,dirtyValidators])}return 0===dirtyValidators.length},luga.validator.api.validateChildFields=function(options){var fields=luga.form.utils.getChildFields(options.rootNode);return luga.validator.api.validateFields({fields:fields,error:options.error})},jQuery(document).ready(function(){luga.validator.initForms()})}();
//# sourceMappingURL=luga.min.js.map
