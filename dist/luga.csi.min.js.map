{"version":3,"sources":["luga.csi.min.js","luga.csi.js"],"names":["luga","namespace","csi","version","CONST","NODE_SELECTOR","URL_ATTRIBUTE","AFTER_ATTRIBUTE","USER_AGENT","MESSAGES","FILE_NOT_FOUND","Include","options","onSuccess","response","textStatus","jqXHR","jQuery","config","rootNode","html","onError","qXHR","errorThrown","string","format","url","attr","after","success","error","xhrTimeout","merge","this","load","ajax","timeout","XHR_TIMEOUT","headers","X-Requested-With","apply","afterHandler","lookupFunction","undefined","loadIncludes","each","index","item","includeObj","document","ready"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,ACLA,GAAoB,mBAAX,MACR,KAAK,+BAGL,WACA,YAEAA,MAAKC,UAAU,YAEfD,KAAKE,IAAIC,QAAU,QAEnBH,KAAKE,IAAIE,OACRC,cAAe,oBACfC,cAAe,eACfC,gBAAiB,qBACjBC,WAAY,WACZC,UACCC,eAAgB,+CAsBlBV,KAAKE,IAAIS,QAAU,SAASC,SAE3B,GAAIC,WAAY,SAASC,SAAUC,WAAYC,OAC9CC,OAAOC,OAAOC,UAAUC,KAAKN,WAS1BO,QAAU,SAASC,KAAMP,WAAYQ,aACxC,KAAMvB,MAAKwB,OAAOC,OAAOzB,KAAKE,IAAIE,MAAMK,SAASC,gBAAiBQ,OAAOQ,OAGtER,QACHQ,IAAKT,OAAOL,QAAQO,UAAUQ,KAAK3B,KAAKE,IAAIE,MAAME,eAClDsB,MAAOX,OAAOL,QAAQO,UAAUQ,KAAK3B,KAAKE,IAAIE,MAAMG,iBACpDsB,QAAShB,UACTiB,MAAOT,QACPU,WAAY,IAEb/B,MAAKgC,MAAMd,OAAQN,SAEnBqB,KAAKC,KAAO,WACXjB,OAAOkB,MACNT,IAAKR,OAAOQ,IACZU,QAASlB,OAAOmB,YAChBC,SACCC,mBAAoBvC,KAAKE,IAAIE,MAAMI,YAEpCqB,QAAS,SAASf,SAAUC,WAAYC,OACvCE,OAAOW,QAAQW,MAAM,MAAO1B,SAAUC,WAAYC,OAClD,IAAIyB,cAAezC,KAAK0C,eAAexB,OAAOU,MAC1Be,UAAjBF,cACFA,aAAaD,MAAM,MAAOtB,OAAOC,SAAUD,OAAOQ,IAAKZ,YAGzDgB,MAAO,SAASd,MAAOD,WAAYQ,aAClCL,OAAOY,MAAMU,MAAM,MAAOxB,MAAOD,WAAYQ,mBAUjDvB,KAAKE,IAAI0C,aAAe,WACvB3B,OAAOjB,KAAKE,IAAIE,MAAMC,eAAewC,KAAK,SAASC,MAAOC,MACzD,GAAIC,YAAa,GAAIhD,MAAKE,IAAIS,SAASQ,SAAU4B,MACjDC,YAAWd,UAIbjB,OAAOgC,UAAUC,MAAM,WACtBlD,KAAKE,IAAI0C","file":"luga.csi.min.js","sourcesContent":[null,"if(typeof(luga) === \"undefined\"){\r\n\tthrow(\"Unable to find Luga JS Core\");\r\n}\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\r\n\tluga.namespace(\"luga.csi\");\r\n\r\n\tluga.csi.version = \"1.1.1\";\r\n\r\n\tluga.csi.CONST = {\r\n\t\tNODE_SELECTOR: \"div[data-lugacsi]\",\r\n\t\tURL_ATTRIBUTE: \"data-lugacsi\",\r\n\t\tAFTER_ATTRIBUTE: \"data-lugacsi-after\",\r\n\t\tUSER_AGENT: \"luga.csi\",\r\n\t\tMESSAGES: {\r\n\t\t\tFILE_NOT_FOUND: \"luga.csi failed to retrieve text from: {0}\"\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @typedef {object} luga.csi.Include.options\r\n\t *\r\n\t * @property {jquery}   rootNode     Root node for widget (DOM reference). Required\r\n\t * @property {string}   url          Url to be included. Optional. Default to the value of the \"data-lugacsi\" attribute inside rootNode\r\n\t * @property {function} success      Function that will be invoked once the url is successfully fetched. Optional, default to the internal \"onSuccess\" method\r\n\t * @property {function} after        Function that will be invoked once the include is successfully performed.\r\n\t *                                   It will be called with the handler(rootNode, url, response) signature. Optional, it can be set using the \"data-lugacsi-after\" attribute\r\n\t * @property {function} error        Function that will be invoked if the url request fails. Optional, default to the internal \"onError\" method\r\n\t * @property {int}      xhrTimeout   Timeout for XHR call (ms). Optional. Default to 5000 ms\r\n\t */\r\n\r\n\t/**\r\n\t * Client-side Include widget\r\n\t *\r\n\t * @param {luga.csi.Include.options} options\r\n\t * @constructor\r\n\t */\r\n\tluga.csi.Include = function(options){\r\n\r\n\t\tvar onSuccess = function(response, textStatus, jqXHR){\r\n\t\t\tjQuery(config.rootNode).html(response);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @param {object}   jqXHR        jQuery wrapper around XMLHttpRequest\r\n\t\t * @param {string}   textStatus   HTTP status\r\n\t\t * @param {string}   errorThrown\r\n\t\t * @throws\r\n\t\t */\r\n\t\tvar onError = function(qXHR, textStatus, errorThrown){\r\n\t\t\tthrow(luga.string.format(luga.csi.CONST.MESSAGES.FILE_NOT_FOUND, [config.url]));\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\t\t\turl: jQuery(options.rootNode).attr(luga.csi.CONST.URL_ATTRIBUTE),\r\n\t\t\tafter: jQuery(options.rootNode).attr(luga.csi.CONST.AFTER_ATTRIBUTE),\r\n\t\t\tsuccess: onSuccess,\r\n\t\t\terror: onError,\r\n\t\t\txhrTimeout: 5000\r\n\t\t};\r\n\t\tluga.merge(config, options);\r\n\r\n\t\tthis.load = function(){\r\n\t\t\tjQuery.ajax({\r\n\t\t\t\turl: config.url,\r\n\t\t\t\ttimeout: config.XHR_TIMEOUT,\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"X-Requested-With\": luga.csi.CONST.USER_AGENT\r\n\t\t\t\t},\r\n\t\t\t\tsuccess: function(response, textStatus, jqXHR){\r\n\t\t\t\t\tconfig.success.apply(null, [response, textStatus, jqXHR]);\r\n\t\t\t\t\tvar afterHandler = luga.lookupFunction(config.after);\r\n\t\t\t\t\tif(afterHandler !== undefined){\r\n\t\t\t\t\t\tafterHandler.apply(null, [config.rootNode, config.url, response]);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown){\r\n\t\t\t\t\tconfig.error.apply(null, [jqXHR, textStatus, errorThrown]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoke this to programmatically load CSI inside the current document\r\n\t */\r\n\tluga.csi.loadIncludes = function(){\r\n\t\tjQuery(luga.csi.CONST.NODE_SELECTOR).each(function(index, item){\r\n\t\t\tvar includeObj = new luga.csi.Include({rootNode: item});\r\n\t\t\tincludeObj.load();\r\n\t\t});\r\n\t};\r\n\r\n\tjQuery(document).ready(function(){\r\n\t\tluga.csi.loadIncludes();\r\n\t});\r\n\r\n}());"],"sourceRoot":"."}