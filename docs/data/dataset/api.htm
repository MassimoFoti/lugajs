<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>
<link rel="shortcut icon" type="image/png" href="../../luga-favicon.png"/>
	<title>Luga Data :: DataSet :: API Syntax reference</title>

	<!-- Libs -->
	<script src="../../../lib/jquery/jquery.min.js"></script>
	<script src="../../../lib/handlebars.min.js"></script>
	<link rel="stylesheet" href="../../../lib/bootstrap/css/bootstrap.min.css"/>
	<script src="../../../lib/bootstrap/js/bootstrap.min.js"></script>
	<link rel="stylesheet" href="../../../lib/prism/prism.css"/>
	<script src="../../../lib/prism/prism.js"></script>

	<!-- Luga JS -->
	<link rel="stylesheet" href="../../../src/luga.css"/>
	<script src="../../../dist/luga.min.js"></script>
	<script src="../../../dist/luga.data.min.js"></script>

	<!-- Docs -->
	<link rel="stylesheet" href="../../luga.docs.css"/>
	<script src="../../luga-docs.js"></script>

</head>

<body class="luga-docs">

<div data-lugacsi="../../luga-docs-nav-main.inc" data-lugacsi-after="luga.docs.initMainNav"></div>

<div class="container-fluid">
	<div class="col-xs-12 col-sm-12 col-md-9 col-lg-9">

		<div class="panel panel-default">
			<div id="constructor" class="panel-heading luga-docs-api-heading">luga.data.DataSet(options)</div>
			<div class="panel-body">
				<p>
					DataSet's constructor. This class triggers the following notifications:

				<ul class="luga-docs-list">
				    <li>"dataChanged" every time its data changes.</li>
					<li>"currentRowChanged" every time its currentRow changes.</li>
					<li>"dataSorted" once its data is sorted.</li>
					<li>"preDataSorted" before it attempts to sort its data.</li>
				</ul>

				</p>
			</div>
			<table class="table table-bordered luga-docs-api">
				<th colspan="3">Parameters</th>
				<tr>
					<td>options.uuid</td>
					<td>
						{string}
					</td>
					<td>
						Unique identifier. Required
					</td>
				</tr>
				<tr>
					<td>options.records</td>
					<td class="luga-docs-type">
						{array.&lt;object&gt;|object}
					</td>
					<td>
						Records to be loaded, either one single object containing value/name pairs, or an array of name/value pairs. Optional.
					</td>
				</tr>
				<tr>
					<td>options.filter</td>
					<td>
						{function}
					</td>
					<td>
						A filter functions to be called once for each row in the dataSet. Default to null.
					</td>
				</tr>
			</table>
			<table class="table table-bordered luga-docs-api">
				<th>Examples</th>
			</table>

<pre><code class="line-numbers language-javascript">var testDs = new luga.data.DataSet({uuid: "test"});
</code></pre>

		</div>

		<div class="panel panel-default">
			<div id="clearFilter" class="panel-heading luga-docs-api-heading">.clearFilter()</div>
			<div class="panel-body">
				<p>
					Remove the current filter function from the dataSet, then triggers a "dataChanged" notification.
					<a href="filter.htm">See examples</a>
				</p>
			</div>
		</div>

		<div id="insert" class="panel panel-default">
			<div class="panel-heading luga-docs-api-heading">.insert(records)</div>
			<div class="panel-body">
				Adds rows to a dataSet, then triggers a "dataChanged" notification.
				Be aware that the dataSet use passed data by reference.
				That is, it uses those objects as its row object internally. It does not make a copy.
			</div>
			<table class="table table-bordered luga-docs-api">
				<th colspan="3">Parameters</th>
				<tr>
					<td>records</td>
					<td class="luga-docs-type">
						{array.&lt;object&gt;|object}
					</td>
					<td>
						Records to be loaded, either one single object containing value/name pairs, or an array of objects. Required
					</td>
				</tr>
			</table>
			<table class="table table-bordered luga-docs-api">
				<th>Examples</th>
			</table>

<pre><code class="language-javascript">var testDs = new luga.data.DataSet({uuid: "test"});
 // Add one single record
testDs.insert({
	"firstName": "Nicole",
	"lastName": "Kidman"
});
// Add more records in one single pass
testDs.insert([
	{ "firstName": "Kate", "lastName": "Beckinsale" },
	{ "firstName": "Jennifer", "lastName": "Connelly" },
	{ "firstName": "Salma", "lastName": "Hayek" }
]);</code></pre>

		</div>

		<div class="panel panel-default">
			<div id="setFilter" class="panel-heading luga-docs-api-heading">.setFilter(filter)</div>
			<div class="panel-body">
				<p>
					Replace current filter with a new filter functions, apply the new filter, then triggers a "dataChanged" notification.
				</p>
				<p>
					The filter function is used to non-destructively filter the dataSet based on the function return value.
					The function is called once for each row in the dataSet.
					If the filter wishes to add the row to the filtered view of the dataSet, then it must return the row object passed into the function.
					If it does not want the row to be in the filtered view of the dataSet, then it must return null.
				</p>
				<p>
					<a href="filter.htm">See examples</a>
				</p>
			</div>
			<table class="table table-bordered luga-docs-api">
				<th colspan="3">Parameters</th>
				<tr>
					<td>filter</td>
					<td>
						{function}
					</td>
					<td>
						A filter functions to be called once for each row in the data set. Required.<br>
						The function is going to be called with this signature: myFilter(row, rowIndex, dataSet)
					</td>
				</tr>
			</table>
		</div>

	</div>

	<div data-lugacsi="../nav-local.inc"></div>

	<div data-lugacsi="../../luga-docs-footer.inc"></div>

</div>

</body>
</html>