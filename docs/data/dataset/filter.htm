<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>
	<link rel="shortcut icon" type="image/png" href="../../luga-favicon.png"/>
	<title>Luga Data :: DataSet :: Filtering</title>

	<!-- Libs -->
	<script src="../../../lib/jquery/jquery.min.js"></script>
	<script src="../../../lib/handlebars.min.js"></script>
	<link rel="stylesheet" href="../../../lib/bootstrap/css/bootstrap.min.css"/>
	<script src="../../../lib/bootstrap/js/bootstrap.min.js"></script>
	<link rel="stylesheet" href="../../../lib/prism/prism.css"/>
	<script src="../../../lib/prism/prism.js"></script>

	<!-- Luga JS -->
	<link rel="stylesheet" href="../../../src/luga.css"/>
	<script src="../../../dist/luga.min.js"></script>
	<script src="../../../dist/luga.data.js"></script>

	<!-- Docs -->
	<link rel="stylesheet" href="../../luga.docs.css"/>
	<script src="../../luga-docs.js"></script>

	<style>
		#statesRegion {
			height: 300px;
			margin-bottom: 30px;
			margin-top: 20px;
			overflow: auto;
			width: 450px;
		}
	</style>

	<script>
		(function(){
			"use strict";

			var dateFilter = function(row, rowIndex, dataSet){
				var dateObj = new Date(row.birthDate);
				// Turn date into a reasonable string rapresentation
				// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString
				var dateStr = dateObj.toUTCString();
				var trimmedStr = dateStr.substring(0, dateStr.length -12);
				row.birthDateFormatted = trimmedStr;
				return row;
			};

			var ladies = new luga.data.JsonDataSet({
				uuid: "ladiesDs",
				url: "../../../test/fixtures/data/ladies.json",
				filter: dateFilter
			});

			var states = new luga.data.JsonDataSet({
				uuid: "statesDs",
				url: "../../../test/fixtures/data/usa-states.json"
			});

			jQuery(document).ready(function(){

				// Fetch JSON data
				ladies.loadData();
				states.loadData();

				jQuery("#searchButton").on("click", function(event){
					event.preventDefault();
					var criteria = jQuery("#searchCriteria").val().toLowerCase();
					// Assemble a filter function on the fly
					states.setFilter(function(row, rowIndex, dataSet){
						if(row.name.toLowerCase().search(criteria) === -1){
							// Filter out non matching row by returning null
							return null;
						}
						// Return matching row
						return row;
					});
				});

				jQuery("#clearButton").on("click", function(event){
					event.preventDefault();
					// Clear the filter, full data will be visible again
					states. clearFilter();
					jQuery("#searchCriteria").val("");
				});

			});
		}());
	</script>
	
	<script id="ladiesTemplate" type="text/x-handlebars-template">
		<table class="table table-bordered table-striped">
			<th>
				Name
			</th>
			<th>
				Birth date (original)
			</th>
			<th>
				Birth date (formatted)
			</th>
			{{#each entities}}
			<tr>
				<td>{{firstName}} {{lastName}}</td>
				<td>{{birthDate}}</td>
				<td>{{birthDateFormatted}}</td>
			</tr>
			{{/each}}
		</table>
	</script>
	
	<script id="statesTemplate" type="text/x-handlebars-template">
		<ul>
			{{#if recordCount}}
				{{#each entities}}
					<li>{{name}}</li>
				{{/each}}
			{{else}}
				<li>No matching record found</li>
			{{/if}}
		</ul>
	</script>

</head>

<body class="luga-docs">

<div data-lugacsi="../../luga-docs-nav-main.inc" data-lugacsi-after="luga.docs.initMainNav"></div>

<div class="container-fluid">
	<div class="col-xs-12 col-sm-12 col-md-9 col-lg-9">

		<div class="panel panel-default">
			<div class="panel-heading">Using filter functions</div>
			<div class="panel-body">
				<p>
					A dataSet can use a function to non-destructively filter its data.
					The filter can be either passed to the <a href="api.htm#constructor">constructor</a>
					or applied on the fly calling <a href="api.htm#setFilter">.setFilter(filter)</a>.
				</p>
				<p>
					The filter is called once for each row in the dataSet.
					If the filter wishes to add the row to the filtered view of the dataSet, then it must return the row object passed into the function.
				</p>
			</div>
		</div>

		<div class="panel panel-default">
			<div class="panel-heading">Use filter to add/format data</div>
			<div class="panel-body">
				<p>
					Sometimes you have data that is not suited for a GUI.
					A typical case is a date in YYYY-MM-DD format, not the most human-readable format.
					So you want to modify it. The safer approach is to store a formatted copy inside another field.
					A filter is the perfect solution for such a job.
				</p>
				<p>
					This approach may help whenever you have to <a href="sort.htm#dateSort">sort your data</a> too.
				</p>

				<div id="ladiesRegion"
					 data-lugaregion="true"
					 data-lugaregion-datasource-uuid="ladiesDs"
					 data-lugaregion-template-id="ladiesTemplate"></div>

				<p>
					In this case we want to apply the very same filter to each row in the dataset.
					It's better to pass the filter to the constructor:
				</p>

<pre><code class="line-numbers language-javascript">var dateFilter = function(row, rowIndex, dataSet){
	var dateObj = new Date(row.birthDate);
	// Turn date into a reasonable string rapresentation
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString
	var dateStr = dateObj.toUTCString();
	var trimmedStr = dateStr.substring(0, dateStr.length -12);
	row.birthDateFormatted = trimmedStr;
	return row;
};

var ladies = new luga.data.JsonDataSet({
	uuid: "ladiesDs",
	url: "../../../test/fixtures/data/ladies.json",
	filter: dateFilter
});
</code></pre>
				
				<p>
					The template can use the additional field added by the filter:
				</p>
				
<pre><code class="line-numbers language-markup">&lt;table class="table table-bordered table-striped"&gt;
	&lt;th&gt;
		Name
	&lt;/th&gt;
	&lt;th&gt;
		Birth date (original)
	&lt;/th&gt;
	&lt;th&gt;
		Birth date (formatted)
	&lt;/th&gt;
	{{#each entities}}
	&lt;tr&gt;
		&lt;td&gt;{{firstName}} {{lastName}}&lt;/td&gt;
		&lt;td&gt;{{birthDate}}&lt;/td&gt;
		&lt;td&gt;{{birthDateFormatted}}&lt;/td&gt;
	&lt;/tr&gt;
	{{/each}}
&lt;/table&gt;
</code></pre>				

			</div>
		</div>

		<div class="panel panel-default">
			<div class="panel-heading">Use filter for local search</div>
			<div class="panel-body">

				<p>
					The most powerful search features usually require server-side programming,
					yet sometimes you are dealing with a limited amount of data, in this scenarios a filter can do the job.
					The implementation is pretty simple and interaction is very fast:
				</p>
				
				<form class="form-inline">
					<div class="form-group">
						<input type="text" class="form-control" id="searchCriteria" placeholder="type search criteria">
					</div>
					<button type="submit" class="btn btn-info" id="clearButton">Clear filter</button>
					<button type="submit" class="btn btn-primary" id="searchButton">Filter dataSet</button>
				</form>

				<div id="statesRegion"
					 data-lugaregion="true"
					 data-lugaregion-datasource-uuid="statesDs"
					 data-lugaregion-template-id="statesTemplate"></div>

				<p>
					Here you have to assemble the filter function on the fly. A closure will do the job:
				</p>

<pre><code class="line-numbers language-javascript">jQuery("#searchButton").on("click", function(event){
	event.preventDefault();
	var criteria = jQuery("#searchCriteria").val().toLowerCase();
	// Assemble a filter function on the fly
	states.setFilter(function(row, rowIndex, dataSet){
		if(row.name.toLowerCase().search(criteria) === -1){
			// Filter out non matching row by returning null
			return null;
		}
		// Return matching row
		return row;
	});
});

jQuery("#clearButton").on("click", function(event){
	event.preventDefault();
	// Clear the filter, full data will be visible again
	states. clearFilter();
	jQuery("#searchCriteria").val("");
});
</code></pre>

				<p>
					The template looks like this:
				</p>
				
<pre><code class="line-numbers language-markup">&lt;ul&gt;
	{{#if recordCount}}
		{{#each entities}}
			&lt;li&gt;{{name}}&lt;/li&gt;
		{{/each}}
	{{else}}
		&lt;li&gt;No matching record found&lt;/li&gt;
	{{/if}}
&lt;/ul&gt;
</code></pre>
				
			</div>
		</div>

	</div>

	<div data-lugacsi="../nav-local.inc"></div>

	<div data-lugacsi="../../luga-docs-footer.inc"></div>

</div>

</body>
</html>