<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>
	<link rel="shortcut icon" type="image/png" href="../../luga-favicon.png"/>
	<title>Luga Data :: DataSet :: Formatting</title>

	<!-- Libs -->
	<script src="../../../lib/jquery/jquery.min.js"></script>
	<script src="../../../lib/handlebars.min.js"></script>
	<link rel="stylesheet" href="../../../lib/bootstrap/css/bootstrap.min.css"/>
	<script src="../../../lib/bootstrap/js/bootstrap.min.js"></script>
	<link rel="stylesheet" href="../../../lib/prism/prism.css"/>
	<script src="../../../lib/prism/prism.js"></script>

	<!-- Luga JS -->
	<link rel="stylesheet" href="../../../src/luga.css"/>
	<script src="../../../dist/luga.min.js"></script>
	<script src="../../../dist/luga.data.js"></script>

	<!-- Docs -->
	<link rel="stylesheet" href="../../luga.docs.css"/>
	<script src="../../luga-docs.js"></script>

	<script>
		(function(){
			"use strict";

			var dateFormatter = function(row, rowIndex, dataSet){
				var dateObj = new Date(row.birthDate);
				// Turn date into a reasonable string rapresentation
				// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString
				var dateStr = dateObj.toUTCString();
				var trimmedStr = dateStr.substring(0, dateStr.length -12);
				row.birthDateFormatted = trimmedStr;
				return row;
			};

			var ladies = new luga.data.JsonDataSet({
				uuid: "ladiesDs",
				url: "../../../test/fixtures/data/ladies.json",
				formatter: dateFormatter
			});

			jQuery(document).ready(function(){
				// Fetch JSON data
				ladies.loadData();
			});
		}());
	</script>
	
	<script id="ladiesTemplate" type="text/x-handlebars-template">
		<table class="table table-bordered table-striped">
			<th>
				Name
			</th>
			<th>
				Birth date (original)
			</th>
			<th>
				Birth date (formatted)
			</th>
			{{#each entities}}
			<tr>
				<td>{{firstName}} {{lastName}}</td>
				<td>{{birthDate}}</td>
				<td>{{birthDateFormatted}}</td>
			</tr>
			{{/each}}
		</table>
	</script>

</head>

<body class="luga-docs">

<div data-lugacsi="../../luga-docs-nav-main.inc" data-lugacsi-after="luga.docs.initMainNav"></div>

<div class="container-fluid">
	<div class="col-xs-12 col-sm-12 col-md-9 col-lg-9">

		<div class="panel panel-default">
			<div class="panel-heading">Using a formatter functions</div>
			<div class="panel-body">
				<p>
					A dataSet can use a function to format its data.
					The formatter must be passed to the <a href="api.htm#constructor">constructor</a>,
					unlike a filter, you can't apply it on the fly.
				</p>
				<p>
					The formatter is called once for each row in the dataSet.
					The formatter can alter rows, add or manipulate fields, then it must return the row object passed into the function.
				</p>
			</div>
		</div>

		<div class="panel panel-default">
			<div class="panel-heading">Use formatter to add data</div>
			<div class="panel-body">
				<p>
					Sometimes you have data that is not suited for a GUI.
					A typical case is a date in YYYY-MM-DD format, not the most human-readable format.
					So you want to modify it. The safer approach is to store a formatted copy inside another field.
					A formatter is the perfect solution for such a job.
				</p>
				<p>
					This approach may help whenever you have to <a href="sort.htm#dateSort">sort your data</a> too.
				</p>

				<div id="ladiesRegion"
					 data-lugaregion="true"
					 data-lugaregion-datasource-uuid="ladiesDs"
					 data-lugaregion-template-id="ladiesTemplate"></div>

				<p>
					Just pass the formatter to the constructor.
					The formatter is called once for each row in the dataSet, with this signature: myFilter(row, rowIndex, dataSet):
				</p>

<pre><code class="line-numbers language-javascript">var dateFormatter = function(row, rowIndex, dataSet){
	var dateObj = new Date(row.birthDate);
	// Turn date into a reasonable string rapresentation
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString
	var dateStr = dateObj.toUTCString();
	var trimmedStr = dateStr.substring(0, dateStr.length -12);
	row.birthDateFormatted = trimmedStr;
	return row;
};

var ladies = new luga.data.JsonDataSet({
	uuid: "ladiesDs",
	url: "../../../test/fixtures/data/ladies.json",
	formatter: dateFormatter
});
</code></pre>
				
				<p>
					The template can use the additional field added by the formatter:
				</p>
				
<pre><code class="line-numbers language-markup">&lt;table class="table table-bordered table-striped"&gt;
	&lt;th&gt;
		Name
	&lt;/th&gt;
	&lt;th&gt;
		Birth date (original)
	&lt;/th&gt;
	&lt;th&gt;
		Birth date (formatted)
	&lt;/th&gt;
	{{#each entities}}
	&lt;tr&gt;
		&lt;td&gt;{{firstName}} {{lastName}}&lt;/td&gt;
		&lt;td&gt;{{birthDate}}&lt;/td&gt;
		&lt;td&gt;{{birthDateFormatted}}&lt;/td&gt;
	&lt;/tr&gt;
	{{/each}}
&lt;/table&gt;
</code></pre>				

			</div>
		</div>

	</div>

	<div data-lugacsi="../nav-local.inc"></div>

	<div data-lugacsi="../../luga-docs-footer.inc"></div>

</div>

</body>
</html>