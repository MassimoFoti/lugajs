<script>

	/* global tippy */

	/**
	 * Attach a tooltip to any node that has attribute: data-trait-tooltip='true']
	 * @param {luga.data.region.traits.options} options
	 */
	function tooltipTrait(options){
		const SELECTOR = "*[data-trait-tooltip='true']";
		const nodes = options.node.querySelectorAll(SELECTOR);
		// Add a tooltip to all nodes
		// https://atomiks.github.io/tippyjs/
		tippy(nodes);
	}

	(function(){
		"use strict";

		const ladies = new luga.data.JsonDataSet({
			uuid: "ladiesDs",
			url: "../test/fixtures/data/ladies.json"
		});

		luga.dom.ready(function(){
			// Fetch JSON data
			ladies.loadData();
		});
	}());

</script>

<script id="ladiesTemplate" type="text/x-handlebars-template">
	<ul class="luga-docs-list">
		{{#each entities}}
		<li title="{{birthDate}}" data-trait-tooltip="true">
			{{firstName}} {{lastName}}
		</li>
		{{/each}}
	</ul>
</script>

<div class="panel panel-default">
	<div class="panel-heading">Writing custom traits</div>
	<div class="panel-body">
		<p>
			You can write your own, custom <a href="#data/region/traits">trait.</a>
			A trait is essentially just a function with a specific signature.
			It gets invoked with a single options arguments, containing two keys:
		<ul class="luga-docs-list">
			<li>
				<strong>node</strong>: an HTMLElement.
			</li>
			<li>
				<strong>dataSource</strong>: either a dataSet or a detailSet.
			</li>
		</ul>
		The function is invoked every time a region render, generating its HTML.
		</p>
	</div>
</div>

<div class="panel panel-default">
	<div class="panel-heading">The JavaScript code</div>
	<div class="panel-body">
		<p>
			For this example we are going to write a custom trait that add tooltips using
			<a href="https://atomiks.github.io/tippyjs/">Tippy</a>.
		</p>

<pre><code class="language-javascript">/**
 * Attach a tooltip to any node that has attribute: data-trait-tooltip='true']
 * @param {luga.data.region.traits.options} options
 */
function tooltipTrait(options){
	const SELECTOR = "*[data-trait-tooltip='true']";
	const nodes = options.node.querySelectorAll(SELECTOR);
	// Add a tooltip to all nodes
	// https://atomiks.github.io/tippyjs/
	tippy(nodes);
}
</code></pre>

		<p>
			The code looks inside the region, for elements that match the "*[data-trait-tooltip='true']" selector.
			For each of them, if any, initialize the tooltip.
		</p>

	</div>
</div>

<div class="panel panel-default">
	<div class="panel-heading">Custom trait in action</div>
	<div class="panel-body">
		<p>
			Your region code is going to look like this,
			with the <strong> data-lugaregion-traits</strong> attribute containing a comma-delimited list of function
			names:
		</p>

		<pre><code class="language-markup">&lt;div id="ladiesRegion"
	data-lugaregion="true"
	data-lugaregion-datasource-uuid="ladiesDs"
	data-lugaregion-template-id="ladiesTemplate"
	data-lugaregion-traits="tooltipTrait"&gt;&lt;/div&gt;
</code></pre>

		<div id="ladiesRegion"
			 data-lugaregion="true"
			 data-lugaregion-datasource-uuid="ladiesDs"
			 data-lugaregion-template-id="ladiesTemplate"
			 data-lugaregion-traits="tooltipTrait"></div>

	</div>

</div>