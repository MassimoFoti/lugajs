<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Luga Core</title>

	<!-- Libs -->
	<script src="../../../lib/jquery/jquery.min.js"></script>
	<script src="../../../lib/handlebars.min.js"></script>
	<link rel="stylesheet" href="../../../lib/bootstrap/css/bootstrap.min.css"/>
	<script src="../../../lib/bootstrap/js/bootstrap.min.js"></script>
	<link rel="stylesheet" href="../../../lib/prism/prism.css"/>
	<script src="../../../lib/prism/prism.js"></script>

	<!-- Luga JS -->
	<link rel="stylesheet" href="../../../src/luga.css"/>
	<script src="../../../dist/luga.min.js"></script>
	<script src="../../../dist/luga.data.min.js"></script>

	<!-- Docs -->
	<link rel="stylesheet" href="../../luga.docs.css"/>
	<script src="../../luga-docs.js"></script>

</head>
<body class="luga-docs">

<div data-lugacsi="../../luga-docs-nav-main.inc" data-lugacsi-after="luga.docs.initMainNav"></div>

<div class="container-fluid">
	<div class="col-xs-12 col-sm-12 col-md-9 col-lg-9">

		<div class="panel panel-default">
			<div class="panel-heading">About Luga Core</div>
			<div class="panel-body">
				<p>
					Luga Core contains a minimal set of API. While most of them are used internally by the libraries,
					some
					can be accessed directly
				</p>
			</div>
		</div>

		<div class="panel panel-default">
			<div class="panel-heading">Unit tests</div>
			<div class="panel-body">
				<p>
					Luga JS contains a comprehensive set of <a href="../../../test/SpecRunner.htm">unit tests</a>,
					developed
					with <a href="https://github.com/jasmine/jasmine">Jasmine</a>
				</p>

				<p>
					The unit tests play a fundamental role in ensuring the code is robust and, at the very same time,
					provide plenty of useful information about the API
				</p>
			</div>
		</div>

		<div class="panel panel-default">
			<div class="panel-heading">Getting started</div>
			<div class="panel-body">
				<p>Include the JavaScript files. First jQuery, then <a href="../../../dist/luga.core.min.js">Luga
					Core</a> (in this order)</p>

<pre><code class="language-markup">&lt;script src="js/jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="js/luga.core.min.js"&gt;&lt;/script&gt;
</code></pre>

			</div>
		</div>

		<div class="panel panel-default">
			<div class="panel-heading luga-docs-api-heading">luga.lookupFunction(path)</div>
			<div class="panel-body">
				Given the name of a function as a string, return the relevant function, if any.
				<br>
				If nothing exists at that location, returns undefined.
				<br>
				Supports namespaces (if the fully qualified path is passed).
			</div>
			<table class="table table-bordered luga-docs-api">
				<th colspan="3">Parameters</th>
				<tr>
					<td>path</td>
					<td>
						{string}
					</td>
					<td>
						Fully qualified name of a function
					</td>
				</tr>
			</table>

			<table class="table table-bordered luga-docs-api">
				<th>Return type</th>
				<tr>
					<td>{function|undefined}</td>
				</tr>
			</table>
			<table class="table table-bordered luga-docs-api">
				<th>Examples</th>
			</table>

<pre><code class="language-javascript">myLookup = function(){
};
luga.lookupFunction("myLookup");
// => Reference to the function</code></pre>
<pre><code class="language-javascript">myLookUpSpace = {};
	myFunction = function(){
};
luga.lookupFunction("myLookUpSpace.myFunction");
// => Reference to the function</code></pre>

		</div>

		<div class="panel panel-default">
			<div class="panel-heading luga-docs-api-heading">luga.lookupProperty(object, path)</div>
			<div class="panel-body">
				Given an object and a path, returns the property located at the given path.
				<br>
				If nothing exists at that location, returns undefined.
				<br>
				Supports unlimited nesting levels (if the fully qualified path is passed).
			</div>
			<table class="table table-bordered luga-docs-api">
				<th colspan="3">Parameters</th>
				<tr>
					<td>object</td>
					<td>
						{object}
					</td>
					<td>
						Target object
					</td>
				</tr>
				<tr>
					<td>path</td>
					<td>
						{string}
					</td>
					<td>
						Dot-delimited string
					</td>
				</tr>
			</table>

			<table class="table table-bordered luga-docs-api">
				<th>Return type</th>
				<tr>
					<td>{*|undefined}</td>
				</tr>
			</table>
			<table class="table table-bordered luga-docs-api">
				<th>Examples</th>
			</table>

<pre><code class="language-javascript">luga.lookupProperty({key: "test"}, "key");
// => "test"</code></pre>
<pre><code class="language-javascript">var target = {
		firstLevel: {
		secondLevel: {
			message: "Ciao Mamma!"
		}
	}
}
luga.lookupProperty(target, "firstLevel.secondLevel.message");
// => "Ciao Mamma!"
luga.lookupProperty(target, "firstLevel.secondLevel.missing");
// => undefined</code></pre>

		</div>

		<div class="panel panel-default">
			<div class="panel-heading luga-docs-api-heading">luga.merge(target, obj)</div>
			<div class="panel-body">
				Shallow-merge the contents of two objects together into the first object.
				It wraps jQuery's extend to make names less ambiguous
			</div>
			<table class="table table-bordered luga-docs-api">
				<th colspan="3">Parameters</th>
				<tr>
					<td>target</td>
					<td>
						{object}
					</td>
					<td>
						An object that will receive the new properties
					</td>
				</tr>
				<tr>
					<td>obj</td>
					<td>
						{object}
					</td>
					<td>
						An object containing additional properties to merge in
					</td>
				</tr>
			</table>
			<table class="table table-bordered luga-docs-api">
				<th>Examples</th>
			</table>

<pre><code class="language-javascript">var config = {letter: "a", number: 1};
var params = {number: 2, symbol: "@"};
luga.merge(config, params);
// =>  config = { letter: "a", number: 2, symbol: "@" }
</code></pre>

		</div>

		<div class="panel panel-default">
			<div class="panel-heading luga-docs-api-heading">luga.namespace(ns, rootObject)</div>
			<div class="panel-body">
				Creates namespaces to be used for scoping variables and classes so that they are not global.
				Specifying the last node of a namespace implicitly creates all other nodes.
			</div>
			<table class="table table-bordered luga-docs-api">
				<th colspan="3">Parameters</th>
				<tr>
					<td>ns</td>
					<td>
						{string}
					</td>
					<td>
						Namespace as string
					</td>
				</tr>
				<tr>
					<td>rootObject</td>
					<td>
						{object}
					</td>
					<td>
						Optional root object. Default to window
					</td>
				</tr>
			</table>
			<table class="table table-bordered luga-docs-api">
				<th>Examples</th>
			</table>
		   <pre><code class="language-javascript">luga.namespace("luga.utils");</code></pre>

		</div>

		<div class="panel panel-default">
			<div class="panel-heading luga-docs-api-heading">luga.setProperty(object, path, value)</div>
			<div class="panel-body">
				Given an object, a path and a value, set the property located at the given path to the given value.
				<br>
				If the path does not exists, it creates it.
			</div>
			<table class="table table-bordered luga-docs-api">
				<th colspan="3">Parameters</th>
				<tr>
					<td>object</td>
					<td>
						{object}
					</td>
					<td>
						Target object
					</td>
				</tr>
				<tr>
					<td>path</td>
					<td>
						{string}
					</td>
					<td>
						Fully qualified property name
					</td>
				</tr>
				<tr>
					<td>value</td>
					<td>
						{*}
					</td>
					<td>
						Value
					</td>
				</tr>
			</table>

			<table class="table table-bordered luga-docs-api">
				<th>Examples</th>
			</table>

<pre><code class="language-javascript">var targetObj = {
	firstName: "Ciccio",
	children: [],
	firstLevel: {
		secondLevel: "Second"
	}
};

luga.setProperty(targetObj, "lastName", "Pasticcio");
// => targetObj.lastName = "Pasticcio"

luga.setProperty(targetObj, "firstLevel.moreSecond", "more");
// => targetObj.firstLevel.moreSecond = "more"

// If the path does not exists, creates it
luga.setProperty(targetObj, "first.second.third", 3);
// => targetObj.first.second.third = 3
</code></pre>

		</div>

	</div>

	<div data-lugacsi="../nav-local.inc"></div>

	<div data-lugacsi="../../luga-docs-footer.inc"></div>

</div>

</body>
</html>